(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    916288,      18923]
NotebookOptionsPosition[    907402,      18635]
NotebookOutlinePosition[    907761,      18651]
CellTagsIndexPosition[    907718,      18648]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
The Bethe Ansatz Solution of the triple box system: the wave function\
\>", "Title",
 CellChangeTimes->{{3.699669902925282*^9, 3.6996699146602707`*^9}, {
  3.7112444022285337`*^9, 3.711244408091792*^9}, {3.711317440733467*^9, 
  3.7113174411080914`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  "\"\</Users/irina 1/qsu_repo/bethe_ansatz/TripleBox.png\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.699669926069598*^9, 3.69966996078833*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsXQd4FUXXXlHRDxufFeyioIh0BSkiCCioFEFAem/SQxM+EFBRikhTQUHp
CgJKlyYiKL0mhBJIgBASSL+5bfv8c86Z3XsTioRfQWHeZ43h5t69u7Mz57yn
zhPtejXolEdRlL638h8N2g6sFhHRdlDD/PwfjXr27dq5Z8cOtXv269i5Y8SL
7W7kLy66QVHW8/fD70xCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJC
QkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJC
QkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJC
QkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJC
QkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJC
QkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJC
QkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJC
QkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJC
QkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkLi
moOFB2MBOPAfGrP44fzB4IfKmApvNeGQ+IuBA20zPEx+GDjo54OJxzUBvGmd
weHcOxwag4P+6sxMAh8S3WAqP8SbsyEIx3lel8iJ0KjCcPn5IVa3AM4xWOnO
s/gbh9TKflzih4Jw2HDNPjxQXPEr1S1minuxA3AIwLvoC2hl0e+huRf6/mto
fV0RZJdUJMfwkLimITnD1YbkDJIzXDlIziA5w18FyRmuV+A6o1UjpK4XjjAJ
7Kyv8JUo8VcBJRX+0JnBD3gQpjPmyOUckeq8dg0Ab+lcdiTuMJwziHkYLs/D
WNZ5ziFxMTijauJBYximuMO4a24U+RWExWeGhRYOUBq8QmSMVhjntA084DU/
HoIbwIuqkHh4+0QkHPmGYyJxCeD0jB80Wwwg87qzQGlsJXu/tiE5w9WF5Awh
SM7wd0NyBskZ/v+QnEHCddwZMBNwxQktpuvg9EPImfA3IuRd56QBeEOYbGQ2
/1PwmtKOeKfnaqXsPCH0ToctwRhk+xQMlXFNjcwVgRXOy8LZl3guMPn+oesd
r0qsCwGKp7CweApKMAJQBQunjUGzyKCTiBUXBBZhhc8xiUtGOOc8D7eXuJYh
OcPVhuQMAMkZrgwkZ5Cc4S+A5AzXJYR8CMtJM8LWoEA26XHpPst/qHfzn4Vw
nRg2YCJOgYI8wIyAI8+vO4i71jEHkrhB+Pw0ncOSzOGSgKPlZRo/nIFEP7MY
T/hfgJkBJ172T0M4qwz73aQohOAMYesp28oSCo7YghuIkfGty0Z4JCLEOSVz
uLYhOcNVhuQMF4fkDH8tJGeQnOEvg+QM1z4syzJNfJqQFGSjtkIvnh6EQiUb
8u1EBZONf9FBdBhYxwQfMS3dtmDx2UJ7Gbp1fdZf0ghYlqPjaTxNyxKBHpve
QKPtDtf5ThTylDqyC54AFS0hmzBsFHeGdS0zMDGS/IZVjf4JWXiYumYaVL9l
6cxrMT+fmCCQwP/sjq1fNTL4y9p1yKlyC0hjDlqwqKG42gfcwA7Lf4Y56Hj4
oRLzYmey7RyrwH1FCJmLz/xLRvj5A7A8RPpsAIMROD/4dXo1linmgEUF4gYu
H3jFb1MNJmmzLGZ5DSjAVE3LfZG/gTNzPdfr9zqDifKfxJ1t6ybW5fNXA5ZB
tau2k71sm7q0Gf/VcNmCYaBe4jpI00Mcmz96Q6XEY6yagDcikeBLDswQ1QyG
c3t+kpC6ZNel/ct5li7inzCkDgczbVED7opNUH+55wzwaOD0hmVr4SvxWkWI
ytrO7zieYbfNJ5xfR40Bw4RZ7kKww4T1a7aMR18CLD9lzujh3TDMy+EMDJcA
rYKcFBrBn+P/R9uGn81EMExj8KEZww/n+vlMCJgsk08DfikBKITAug8bmjbw
CzDQHgY+YYM044SBqekm8wVNr1B/quAMGjN1R8Rd6vq9zhDy7ZhOEhxyBvLn
WDiRNOIVkORwXdqT1xYcaYxtW2xMCwoGMDqh07rkzzrNAhFsCrpuMt1vsCyN
ZQCf15lqs4BYskzVLWILOWTFdQKiYShPLMPQTOTVnIfNXTB/4pefW2Fm18VO
EvKvWsLgQemtZRwf2KPl3piz6PPhFMKngX14Je7rCsBwU9FyDA/nsXxOgaix
aH7yMQ2CIOISHboPibo58LnwmamBjoC/+hfMnfb5t/O9UkT9GUyWleI5Pqxz
n6TdJ1IY4wdTPUzLohJERx2Qa9mDx/nhalKx9s1QziSn0OHT/vJ0Lp02fAXR
7yr1nuMGjqGa6HHSdD9SayDuIsWRphd4Sr3MOsP0RAq8eh0nqo8iGTaINHSz
+JiWyQwvs43crt/rDzA5iJ8bKYcGdWuyK/oM5KPqqczOdGaMH4iZ9M/8y5Hd
Z2glJsQ/8mCBmxTl8QceqFquXMUXy+XLl1dRlDw33zRp9hLBGSDXGDiDzjyc
NjSrU/dO5ZanipYq/1L1cpWqFXikUIlSZb1Zf2KJXKsIF5i6QeKW/8sY9dmn
Hd/tGjR0K+w9F1k7F+IMfA0mHtv9/Mt1/9h3HBag7ePKUbtSd/d341zOYDmm
SerppIiI3kWLPs0n51NPPPZG/RYjx3x59OA+ThtUypY3KPhucIlP1s2EsSN6
d2vHDUn1gl8oIaCxNE4bkvbGNKpU9+foGOAMWhbTvLnlDCzHxLa5ijbCGWAo
fGn8f5MFXN39448/NuvQrkPPbt2aNm74ysuzvllCFAE1mEV2r4hNAJPU08/E
DuvTsvwz99yk/OfBR599s3HbIaMm742L8yJt0Mgu5m/mhIHTBjvAlWFu1+/1
B9Mwgny4/TDkyckxW8pXbbhtfwInDMzK4NMlE97jZ6ZXDto1AIf/o8uIc3Tb
tDX1q/eaP8i5ws1P1W4z/NjJs2TIksMRXeM2OQJBHmtJMVtW3vtI0VvyP/z+
yM/iTqepNlMvYtld6zl7pOYs26COqVYwsPj7eTVq1033agZEGsTNu07Oi0D0
vDVJioENRK/s3bDk9fLFDp3xpTMnZeKawLk5nwznp57pHTZgwO79u1VTPRIV
2bF1q3w35eHkoUH395IZjgjMTE+ApQGfBeaRsHb22OdrdTsJYTSfza5TBnvp
cCR50s6N35cr3yT2OENnQ0q2OkSsVbyUWBjMbeC3GlA4/ilDCzpOSG50/D8D
E+FmflpaWvv27WfOnGlDQMowTS05OanzG6+N7NoxCW/AUuHKVShJpjxZm3nS
hvXsvjcqlr90Nnptz+ZVbuZW0Y3/qddlZDL5UNH5EGBORXNW3OZZ4y5v/V4/
ECsXkmSBNQQsO3rDmnoVyu5P8mQwctqwTFqHVMcq8e+HzRzHL6cNpnFw5dSC
nDPc+nT3D+YAS7cc2xm6tOvEGZDA8zcns+SYZ5+vumDZBhVZOswf+8Jr6prm
DIIwUM4jCEzr0P59z5d4bnfUEY2ay4HMzPbmi+BczuDHInSmp3318aD6bXue
Ma+p8TyXM5B2iI06OG7kSKeWhzNbY9Mv64a+N2D7qQywiCF9T+WcgR8gnCwW
v2N59eL3bTwQTOJvt33ZqvYlLgAYajuR04YRH8xt1XqEbpw2raTL4AwGQpQt
8ENXGQQIGCUiWu53Xa7adT/l8/natGmzd+9efFEXPj3biPl1beF8eedvioa5
QXnCzOC0geE/Y3Zu//KTj518rZNMi9v0+9ru772/PZ6dZiKjWMWdKvw4bzJ2
rn79mXsub/1eP4BYoR3iDLCK/RlTRwx5s133RFN4eJzemyrsDCLxr4Uz7S3L
0GCBg2sXXA1s++wX8yjKzeVfe29BMnjsTKaqXBx4SWdBApEB7gQ+SdTTS7/8
qOegUfQnFZsaG0KwOH71kA64pnTceSEIA/pt1CzPW6/X/uj9IaotZK9FpDun
tMkpicNK3Bhze9XYmBlhalx8JWWmV3q+wrxvv1Pta8f3Hr4XVTi2rv+l/quv
+vUA1OkYOqcNXs4SqOZUB/sFsjsgCJ3J7BNm4HCNWt0Gvz+Lpp6o95G4OPjy
t3Qxz85sebP0bWNmbwUfDpFf8UAgD/qSKhBtSkE0mRaAGWvpwVDJtkiWvrzL
dOMCuq6PHTv2hwWLhDDBbxFa6cCPle9UGg9ddphRjha6NyCpATKKD6z/tfkr
dYJemBXcBE4HWZbJ9GTGP62hrAKF50EvxVnTF1v1zS59h01TnbTwS1y/1xuI
R5m2D5RAELr+WSyQmpX4YqlXvpuxJJOZmMdAgxRk147Eun5hWbgaiC3YmAl5
bMWr+YEzFG0+LpMqLzm9B4oArl7ReQ8zkL2HtzSvWvxUukW03I951yrJGaAW
1xdncPwMBnGGZYsWPvtkobOnTqo4LEZ24RImeXLDGUC2w9DPmT67zLOlTyal
XDN1ARfiDEmxsU8/9PCSlUstsbuiqWK6G0YlQPhnCSXFlcCplT9NLPTUazFx
JP8tyRkuCWYYZzBjlk8dULBMk6jkXHMGETWwbHSyob4O+hrUqvHrH9uDaEoE
TdtNCbjsHEj+MzIysn379rpGNY+0LjSHMyx+MZ9Ssd2UWCbyuqH0T3y5L+Pw
0eL3Pf7z8i3EGTJgBmUASSDOQBW7VjpxhpU/TilQuNrhBBbO+S9l/V6HsCDd
FatvVIs4g8H8c6YvLlOs8uHURC/Dgi8+L6DoRnKGaxHpq+sVVm5QypZ4oddp
k6XiYtSF3RYAkw7ilSeYGtes2/B5q3YyVJQBkOSm4JMQzXd2tHE5OkB3VqZA
9vVGciuMbITVcjqdq3PulXzeOHjOUwuugu8Vv4d2+g5nMtk0F5IopydMWC4i
/tXpKxuk2gUSZ9yISkFZxBIi2z7/eJM+nyYxJ6BuIfuinwaWwFM1hPOloAd1
HU1mkqhc3mnOmQNu3SUIK87RTqyv/KjSZ+qm44zUpwo54SZUOUGOKtbNOVmU
6BcS8tyi8+cSFhZWYzktFqqHZbZZ5w49BmYsny7qHCmzHcYQ3buih68NFwyu
YFN4vJ39crkVqof2XOaj6/mje8Vb8pZrui7BKZFAPqAJ6eNllkdcQWps49JP
Nhrw2WkMqKG/HTPxbDg3JblxngtBVQpdg7/Cp1PmmzMNsN4wEICvojINDXzy
VhiJExMJxhzU42VwYLh31bSpEMlCnz8fCp0SOWmxqCzLwApCmvp2aO5lW0sa
Tib4DJ8duk3j5kQTVDzCVlDYPA/vihxiAnDujMxTB5596Jmvxn8NWW1QZgCs
TCcyTEwg272E9WQOvegsk9TIekX+M2Hp/gQxbg5hCG0DpZ9P46L+F5flo+4L
DBov2OgGMEe07bb6wEEulzDgAWkKBmeMmJO1c+nnD+VRmr//TTx8TQCnIQ0U
JxAepu1rU+3e+8o02X6aFrSJ4XU+J0z0oMKbMEIRZEmb2pW7rWGfKQmXt37J
yQqTOKizoB9zK/AkQpAIhnNl6AY5Pp3SEJBXFjRD09xVCZccpJpULcf12LjP
ONY4i3xjEKE6CWkV6KYZFsBi4bOJHf+5xv1K1292RbrL+RJqdSX+lfBvHFjn
v5wz3HFvneg0KxW9daEdFYXDL37L0qlNOg9NNoWC4/PHTxpZcAbruuMMGpdM
FicMZxmLXzGrVB5l1i+HkkIBdQP7XTgqFw9Thcp3D2pA6MHHBY4q4n2qFmCU
FQHOYw9xBpFfyjlDYP/wNhXvqNj+ACxfbgkFYSHDs4FK9HDOYOoB03S4Pfj2
L0NIhaqqXc7g2Inn4Qx4n3p4P6UAxojh6g33aULc2Ar7PPIReJ5cT/uwMw9q
eq4Nd275oquSt+iL7UemqY40xhHzwzWA/Wuh/o1Z9X2xvMqMDQcT3a8mpYwE
QXAG3KcDvgQ9pfzs5DlHakHjx6/Wz2kDFPHrqJNNPduE+ts4g4ntF3Gi8W/l
ys5Li8CAOUgmOkPVrVEqYNAmcY01AmHdCS6fM8D7MpiW0qtNjyrlqiV7Pdj6
AIYOzESx8WX2PIQryBnoA6k7o99v1eWUDasMxgcs2Cx+mNhM4bO+TR65Sfl+
RzJ+I593ftdLAPeh7l03LULJ80yNNh9Dlj8MvmpaKhZI4HPGsVItb/zPE0vd
rHyz7lTC5a1f/lc/Nb0LcM7gMbWryBmIZmpGJsP0Hhvcb6YheI7oRIEpCdk4
A39SmD0S6uso8qm4tNG8JKS1i3MG364xzcsoVXpup/IuTrQkZ7hW4d/9ZZeq
ivKEcuszvx7IBD4PQQmvRrkuNpo1p+PefqXSnrgkilWZkIfEFwnawmTiuS18
Tac/DCBcViFw1Tj7LtHbQn2As73bJlmjGjSHHWWjw+L3hzcPtuBK/E4EDee8
81dXVFnM2QCXWEQOxyMLRQdCNm927eDUBob2isLuJfy/ZGYkDeo18NGHn03K
Ij0FlrrqNLwQXwCKz8NXsc8OE/Uq7kbFr9/06CxbHaXtXgnDynfr4KYFHyg3
lVi5xYOn0kAtWxrkqTs772BBtB9r0uE+vWAXwMK3cwmyMqjExlXxYb7lc/0M
5DNALU0uX36PIEo9JksnN0gAbHzNUp0gMrBBvx+Ks3SmORU6QvVk+b1xDYvc
V1hRWo5dcsBJqMMxd5wT1knGTg3uMrTII6Vis7RMmqjMcTVQJyhOaa1gQJBF
L5+rpu6EzoDscQWdRU0FSZ47uzWh48ZpzJVdO/LHYFiX3WNYzKiwfedJP9Jc
hQtRRQRfcG+baCPwQ6dpdsD1mMNT1gNA3W1npYRJctT1Klm7+AcDPhrIxihC
A279MX/KwzcoP+08dVYsFv7ILBrQnLFF/N7z3xo/UqPqFsk3Yene0+5fBGdw
+3v/2f7a4s9YzWBAt8bPR09bs3wzjluQajQoMMrUI54t3ysPV6jRZSRDd1zQ
IH6cCYdwdSUGMg68Uvbx2xWl2fAVsXR+GyMXfAKItqopOksa3GNo4QLPnsmy
nV2zL339ok2lB40w2YUDSLdCvVyvgHMhfAwhg1jE6XDxcIHooz7hlmDpkBkV
sobQKLBcacwnm8qZD/EE3SCzzjBM1UaWe56IlVATB7bPH6HcWuan7T4fTSHb
yOmnkrg24Nu1YEhD4Az5nl2wISacM8B00UEefTZkwHefj/NS7S2qIezbGnQl
gO3mM1w3nEEIZ+uM4Y17oViZdq17eEWFERSqY3ax0z6XEq6wL5PfSR816NbB
r++lPvk61hE68d+wK9F0ZkZnHlqS94FXIj78KQdnIMMYxw1ZPcQsLPduLyea
CN2bxedU3eTaU8vWHPxcP4PN5YMJ1p+PRpyimZwwcNpgYTUuJwx+56nRe5zn
yN9tkh6iTtG26TG0hBm92xZSFOXu8pM3JpFdozErxF44Z/AeqvRMlU4teqXg
nCTx7uTwI22wAsQZQHzBRA0KyW+QUOUqAzoPaA5n0Mk7Bo/DppabV4gziMes
Im0Q4xvAnUZg7kPAGFchN40NS7UEh4chV73hczVXnMEMpSJAkl9m1Kbn8iu9
Pp2b5HAGxxFxjmPlSnIGTnjVjBYN2yeeyETuhPkXJvyPLzSW8Ef3Vwo9VKX5
ngyh2S1qKQN5spmOUZ3A9OOj/tc5/w2KckfVz9el4/k1sd8EfpfJzmYF4soV
rdCleQ+fyPrO1fo1wfiGTlA4r3H9WqLi8OpxBl33wbow4bFDkbwpsohB6asY
gUOJoZvElXWY9GLm2FZAcAbRowMS4C0aAvu868J5+up+7fASpWD1HqOW+oRE
1V2vncQ1BXP/2hn971Dy5FEeG/3DTogMoqlFKY7MiEnYMq/8O/87pDLSU866
DhpmFob1TNWt0mLZ/PyOLiMbMbuNA8C/i/fTK6F3Yk1GwPGyBikqbdmOCLSz
+OGEQfA8YoaD1zeUCwfeWvKPGRY7DyfJ/o3hqyF0pc5v5KoNyWcR5Vcj03fM
Ve4o12/iOuej0GCTdvGwUGBApNjUzZTML0eO6d6nc7vOrVq90+D3DWu4Zs5S
2dS537fp1XFEq7eHNKv3w/aERCb8hxS/pm9mLMnwH6387KuNa7ThxmAqUp/w
CL4YPWQRltj614IUZv1iPXnOi/BEcdfPkK1ZTw6IYQOHCdNT7TNHJs38oUGb
d1u0bdn13c7N3244b/r0kyqDzHwQRAGyfVDOW9BNyBbeAOjXlxX71byl5V6p
+1FE01rlH1GU/E+XqRWVDp+l9HvBgrRtGTu+Uu56acDYNeA2gF5CXGgLumVS
NoeZwoyzZ7yZoyZP6NOjc8c2zRs3arHx199JR385fW6PvkMGtH29b6vXlqw7
mWW7Th64GdUyidfo7ry2XE9ErnEedgow4aZtv6AxcIvJmenBUZ+MH9jt3b6d
OzVq1GjLli38rlVVnTR/VvM+747s2Hx4m8Y/bIhNpeZL8JgwZn2eSFz4zkHn
XoVh2eKdKuVUnNnc6BnlsYZD9zMmchqdnRpypi6elzOIP/F5eaBukdsnLt2Z
kzOEneU8GkeArt90+T2zYoMJm+u0HJ7Mhyh44ouPujfv0Kl99x4d3q7Zsk6V
Ek+/2rrt0FPpvoCo/uMTC3sBUAqyeZoZJ7+Y8XPpSg2HRdR/tcJ9ivJ44ZL1
j6djjypkqBo8X87ZDpzdNV+5rdLg8b86C/6S16/GsoLs6zlz2/XqMKxNw8HN
6/6wPRHWL3hIfM6IW+QkcXe6dyI+f1egAkOC/B5TzYwT48aNi4iI6NqqaZtG
by3+PZZzQpZ5dvH0sf/r1qRfh7rNu45c9usxP80BukI6A+67QbzLAtaqwvoC
LwMLRRtzWFggo46zwMEXilSvW6vdWeBt50weiWsGVtTB9RPvVm5RlIJdxy6C
yCCoHWc+ZO7pUb/Egh2p8DrsSRGkyipw7vGVqsO2CLpLvNn1xxn0A9vnDlPy
lpy6PNY5Mwgasr6Z8BjYR+NP9Gnd8ci23bQGN6xeVuDu25cu/a3voE8WrPzZ
y7Tkrb80KFFYKVD2j9O4dk0aVYf/syRmn25Ru1OJhysc9Zrp5+UMkOEAkXvN
MoWWt3xwXN6kcPIAdfPPpBsKKdvWdSNz1YyJpR+6vfvgjxKyTLTYzdTTp9+o
Xr1yw55xXD0aXsiw4jeW7tu2bRu6SuHJUleFrBM7W9QqW71ei4Mn05l64rcl
U/5zc0ElzwNjv1uT7HyVj6pNjZ075vVV8paduvgo3ikQBiOHLtLPpB3b0apL
px3RkaTp1qz+5e7/PrDyp5+HDhz6w9I1XFTG71zxWpkH73jgpf3HwBNhQRch
jYz6K8UZIDaBSjj5+PFtnTr2OHggltq5r1u37s4771yxYsX7778/Y+WP3EJO
+H1t3ZKFb7iv7O6TuNyARPltK+syOANYBUbYevTsHPh6IaVYky3+cM5wPh/V
FeUMcVtXTP74yzXQzcxIGNrt7Xfatu/Qo9fbNV7gtOHRB8oN/N+UdA18RHx9
qeBXwU8FQZOlxm1pWvf5Wg3e3X+Ui6m4dT9+eustzynKE5NmbUije4YqZgNz
SA5t/m6EclPZ6UtPigG65PW7hK/f9z5ZuGKlnwWStq2rV7qQUuCFrQkYxbh6
nMHAxJ3EmJ19O78TGRkJL2m+TT+vUAqU+mbl7tEDe2/8aQbTE2N3rS5ctt5t
BV+IOZFBnMF0cg8CVKmERouB90upNxRYvBhnMI81e73zU49WiM3SU/+Oe5P4
pyApMWr9M7cp9ytKxe7jY2DWqbD1m5rBgmlfTl8X8d6XXIrx1amRo9Lw8yOT
uspiBT0JH0cj6yGvg5BamaKfqOV4KMU/DBaufh0JZrFwDW5kO5UrD8+RiqGe
SGDA0i5bUOOvCqsd8qZCcZPz7n4bJnsdT28Y80EfSxjrILkaZMH9yz9prdxe
bVE0w82kqFIVBgdXDehELTOrW9uuB0/DzhGwGO1UFrn2tdsV5cEq9YfOOgse
W31EkyqPKYpy/wsbEkSyGK1H8msakI/t/6J776J58q48nXXMCRKJ8TJDvCsL
WzpoIPeCwbhdVZ/hFlauccMNNyjKjbffdtfU6TMs3FXkYtLNxmmQum9azwbK
XaUGz/wNwlTUeAcG7cSB379T8j7Zqe94VPdcAiXuXTi136z1fKb5DTTKtEgW
t6pgubefrdUxOcAwhzPT9p5sUblUQYWrsveibXGDfnrqwd2rP2ym3FXtu2jh
4jC46sR8XRoEw/QZ3oQeHRsdP5FG4QQYkCPrq9+mKA9XfOPDWZAzGfQMaFn7
XkXJe/cLu49Y5GewcL8CbDCpImUNMJFu6oxw7k2n8GwNZ/7g/MRzUoaCP+NU
57aNEk8nkyqHh35kdcU7YYa8PmwO3sCZiJYv38Ofzb1VNseK1DXD8rk5bSFm
G5ZyHIbQfEcyoNtBymqDsBHL2j279xtKwepLTjGnZCIUy8j+rNWLdfZLja5T
5I6JS7cmMnFFf8oZwuQGZhvibQjOr6Z+O6L/j1sPAWM0gmCt8P8MkXd9YMW0
InmVTxbujXdOCP1B4XRHg6f+KFusYaWX25/26H6QAH7TH9/q+QJPKkqZtz6O
s4Qrwg/f4me+fes+bK3cVmlpFG3Mx6iLXe7Wr+0d3qTGo/zp3Fce1q+dxqxU
WpXOQ/aHPEIir9JwmMOfINfcQj3FzkTV7TaWs5d0uGB+K7FZx38p8p9HiuYt
2fT9r07APe4e0LaUkueJfHeVOhKbiXaBsNFw20qUmjoJZsOyA5i6FiTLUPRb
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
NWQsm5mO/XvKpx2r8mStTm/08oi8Fxo7zG8JpterWbng/ffMmjWLv7z/YEyb
Dp13bN9duHDh4UMGU+VdRkZGn/4Dl6z97crt1Cv0RairP2OUNZdV+/Vq99/3
0MwZ3/EbP3Q4um27Fn9s2fRckVIfDR1F0fy0tOQe/Xr9uPZn2tgF3FxQxZTG
PDuHNinFLe7J608FmLMlOkyY3xeNaaDcVGLCd5F//L67T59+KQYUEVOWAtVE
WFDTqhI1Mvetr3C70mvMjGQcTEzgcPbSMt1KDdf9ELodSyTZYd6llsoyjr1Z
+O4JP/2eiD3HApQ6S629oBj2fPoDG5bCX/HavAwqQuNj44a829t7LKZZjVeW
7tiBcUaoNY6L3juwz7sPPV70qxnz/chmHD8/pkFA4widz6Xny5T8fNIE8m9o
mjHm46lVK9c9npigQUpKIMCcPT5grfNBSPT5Dj3/9JuN3+jt1F/nbv1mpHsH
9B+8dMlKCuBedE+qnHG9vxCUcMivvHaNmo8UeHDOtzP49RyJPtiuXbsdO3Y8
9dRTw94fgaENlpbh7R3x3ur1m4Kih1YAG0fjo07ObFGrblyyF32z/N867hSf
xnxxH9WroDzXaJfI/uHDrdJmdJA9BbE8bjBEswMrlCdeazx2Ga5Hi12qI0Xi
3waSZvr+we++3KLDlDRYNlmw6C/EGfSo+H0LlLuKtx40lbKawfUKiZDH+TGy
UesnlfyfLvwtSUgenc/kXVu3jx0xrHndGm3ql2lWu5hy43NvD/iWvjwDt+dh
nu1dSt+glGm+E8KAqsjydv23+p5FH72j/KfijD98wgRiongTREZwz4H5Q5Ub
S703Axrdw8cT1jYvpCj5S1ZtPaxzp578aBgxoG6vviMaVSlxo1K5/cijooDa
M3dkr8fyKLN/TXA5gwkhykymRR1aOvaRJ8sryr15lHsU5b8PFK74yZc/ZNq0
B6LDGeDrU5iR1KfbyGKFX07PSHYtchFSNFNOx+2OGDiiw7t9+/TqNGLYgLNJ
EGI+EXOwZ5f2bzdu2aV73749ImIPcSOGAv0q7qxhQCah7e5ryRfvvi0L31fy
V1i8NevKTo5LALedtcy0hOQRg4d1btuxU7v2vfq07xXR8bNxU07EJZOvW7dT
9h34rWH9Vs0ad+jR4z1OBpy9d0VsPfns6TGjRzZv2rhbt27t27efMGFylkej
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
lAJM/3nAgGdf+iRP7sjE+zmjgyPtdul4NnrAKR7w4GYf2vSdH8ffPd11xopX
dFl/CtTDv1xOlvV23759qalPBX4DgcCkSZNAAGDowELBeIKKW7Vq1bp160AA
ABvSuTERUwVotJghivV8RS2TxAZZGorQCA2NDOCRQVyB/R4rgTCbhsXp8Ta7
zTF24gRghtPWBmp60en4F4g7XfwuTIpASMD97EOVOTk50M/Zs2cDBoNNSVHQ
WqsxtgT5YekB8FKMGaIXMcMwWWlC6lisj8F6UyikOzMS50R67YSNCUmaafls
ZuhJq72QXn8ADEdqLlJpftXV1dA3mAuYEUbFwG+33347zAh8YO4q26QAkIMl
WUWZIZJgBqIWyhYziDIAwwRNGYL9wws0nG13pnWcDRfIQ88XuNSgM36GVi2w
NspffDGumKuyhOMO6b4M7ZCNtNqV5kx1KzDDXff+6d14fMa1d757Or5l931s
N4qFUc91s3MTn80Mqak/efIkOzbCzmel+llTUwPvy3wEGJPUbMKYwIAwQ8zC
LzQg1n8ArPnS/MKoGQxrRlgjIZUvMcQhEnUTJiI0RVUbiBzkPQnOpAqKZhk6
MxwH7jmYykHqc6AyXfbilgB/9NFH5eXloEJTsseCXbW1taB/oLfQVSZ7oJeg
t+vXrwfO6augBvSvqKHMAMuwlxkUsUGRh2JpDEbjNTw5Go2w00iJ+C2XQ8Oh
9hP3HI/Toyzn2FpKXadCB7onHo6cyEKtnLmdC+wAZrCTY5yxg9M32c2tOXj9
/CWbX33t1De+/qf33/yCy+7L9m/QLo5k0kT9nkT2o0Xo/zzZs/nOhy2eP5Ah
7ncqh+3kIIf2cNrdnL4zR2918ztXrP/dMy/Ef/zzv53viZ8/m/g7L/ZG33zz
Te7CA2gg6pIkATCkHMwbrQZKdfXq1Rs3bkzpKNC9gM1jx44FFUcTjUoqC0KF
wAwhmgiHCghfpfkHY9d4yTkf+xYg37U6Ge71yFaRyHQCb2tru2AAPsttTDVW
FKVPA1sAygEMHAues4Az0MKGDRvuvPPO2267Db4Ftgd7MXHiRDAHDQ0NoIFL
CvKjph4BZkAopuAKNa9aF4djfgoSrhLl64g2SxKL2WEKWzK3wW6HhXzyk4+7
k3jz3ziedsHpJysea0ULWG2cbosdwGz89NV3nOZmDrVwyhEOHbabR+lJarnV
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
gRmGqeIoRZiIeVpQQuOvN/NW6r47At4dAc++oOdwIPeY6TpBHI+rHDzADHKq
BEkGzeq7FDNYu0LsPAUtxvTMK78S+Ts98k5Op8ctM8kJJzrmVHa51GYqusre
xx9595WXT3YnLnelJ8C7uk+lmCEZpuvqpCXoup/6wffobVn2hI/v5bgBujHG
JMPpjPDlxB/WJEs7WcyAU8yg9ro2WE0iFmUGmmeFwU2QwI6PsJhhIkazaYkD
8Nl9K01hXVBsNjwdputgwH3UyAJmeCiS+0DEf3siGJdhpym6juLi4ngyKkh3
FelFwz0vvPwSmz2XPbE3MSAWHmWC7NF/sQbLwAwxJIRUKUyBIcF+ae4YfWjJ
CBosRYXWgqpWgRlkYIZhWBpLMxnEeUS4RvUv0/23GsK6gGdjPtdcZL8PKydk
9JCe/WjI/3AxYszAggzwlJaUp8KfQALbdn49A++26y12s5VTmrPEI9k02nCM
kw46I3dff8dTzMw89/zvTl+uRNyX7d+mXXh4x2q9Z5ESaVPMt+qOr1j6kF/Y
lY3a7GKrXTtErzTFRzhjlU1fnYe3Thj35Jvvxv/2buezT7+aKCRpRRHPJZKX
uosqSmghH8twgLIyBNcEVZlI0BgF/G7vYDmvlveXIR6echkewXpEeMpksVQW
ypBQjoRKma8W/bWivwHxgxURfJmxsm888k1XfPOw92rsvYn4btX86zX/Vs23
W/d1mN57TdeDpvMR3faozj0S9bcRr4UCGQ7OkW13sdA0q3iTGI1OGszd0bzD
On+WwXKzQCGP1clEQx2nCqORv4H4axRfleyD/pRgoVjhixR/seIvQUIpsroq
Q1eFKok+NQJfLwvgvg3HwijZN07wTBM9c2XflZhfKflWYWG97tlguLYGPLtD
3vtV10OG+4SW9WDA/aTX9WwAE4/DYnjQIdTpWLx4cXqG4Rc+a3lBS//JX/5y
prR8UR7e6cT7nPiQTd7P4X02st+FD/jk/U5t+V+oT3eahZ86Wf1pK9Hl8qc2
oHvpJhj0M5e8kIjd3Zzvc40NaZMxmoSkoZKvTsotQ+5ixVuo+gswXwYyYA1m
KRLLkMgkoZI+MKS02md/hR+C+RHIP0b0ThTd05F3HvJeo+Qtxf6VpvcOI3eb
7mrRXKCKH9I9D8m5jyD3N/XM74TctxUV8r3BVLqh/8ILL8TTkuI+d8cnmfnQ
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
TJxz33eEGciXlYX95hj9pq3ck1vOkXZHDrt/avfvv9GbP/hk03kX/10vzuVl
Py9GQTFRWxNqxzyNPFcjNlfIIb3JbzKHjParV60Zqob9f6Ix5t9HexmnSg/k
WyK0FuHD/1gx9nofL8dUUlRv9enNXr05inZsgPduH+fycXW+CtcVnUs/Ofzg
69KY4O9b1Roeavu2Ua74parNzM5QyuydJY8uXzVhcrJGH68Q23lnihP9guiv
tAU4u1/lCnGyD77q6kcn7vi44ejxOzPAcLt7MTctLRUx1IbafmxZRblB98RD
9z/dHltXo1tiMN8hiGG1HEKsK/vw+r8lxVvatNJizQGXTw3888SzW7tyNE09
ooWtmJd9D2jh2yVnH2pf1YDXzIncYayJGKQk5/BydQHOdAtnWaxyeAXYKUvY
YI3VOGeOHrfi7NG3td36yvc93qH2ddpeMEMpuyqeUEzzC7+774G1KjHMS1GD
FKwGsVIb0ZlpHpUG2uXmE87v6EqTBuflW7cQmhn2fxFy///V9oIZWPw5Mynl
MuSeB9dbhndoaxOcGOHsoWpnTLD6OBn21I9d9Iyc9OC720ht3cU7s8BwtyNw
SOe+ixjIoTbUvqrlaQpomtAeaPq2Re+Zjbfra5ZV2GMqm5+zeVQNUcEc05lS
vLUdYMMVc1au2UTMI0buylFvaWEnLeSyZQgz7J/Wg2tNfvLzxwRjkMPUwa0a
5x2ceREnNmtkX4UUqzKHK6033fsU8STem+d9+Pse71D7Gq3cH1H+Q4oZMuk8
zbG7I0N2wUntK5Cjf9mmdc7i6mdz8jzeluLlds4NgibISSn473Xzv7h+9pt6
27Ur//lfhiEPtX3VMDH3lzAD7YqlEW/H9GWz2XSBHHX8dKF+Ble/kHO2qq3N
gi3EWVOcrV2QUpWS/4bGT8fNeq2mftwjz7N0zzRsfWh/h9r+bcV4gD6Wv3Rb
D/nB0VN04jzBGtVIcU70cpKXt/tUNg8Hiq2U8C8jE2e9apav3fwF0i01vxfz
M5BBvol97GsbarRhevo7H15fW//X6tqIxhrhbAEsOeEK8u4wV5PSWhZrG+be
t4aYj/KeeumT3/doh9rXaHvDDMz8gJUjMjmyi2KGQneWPLWGcOabuBFzOecC
zhIHnMBJYc6Z4CwxwA+CPNfonmyQxq5eRwrpfeArHGr/ddszZiDMrVlg9iVM
4//YGqJ2TuXcCziXV+cKVNijnLWNMycFW1InevXOGTrpGoNr7JMvU96bH8KE
Q+37aRiKj4CB0i0ht97fr5cXCmKMFyMqEEbOgOnIxbzsVznaOGtckKcZnWMB
Mzz3YhEzFLJDmGG/tXw+myH5nYSccfEyA8gIS5iTw5gExhngbF6VqVMnLePE
m4SGWZw05fejn/i+xzvUvkbbWxQQs2mjAppl1ZH6C6QnR7blydTAh5zcxkmg
hAaE+oja2lol+6rkxmppYZXJZzD5htlnNLWvI7ldpPCt6gYOtX3ZlIjHAW44
sONYyiaX78rlya4s+YiQ0fPWYAERa5CXE5wpxLuaBXervmqe2eYbJnuqHQtq
nNO9yX8rlT2HIMNQ2+9NKYBDzVy9ebI1TzZnye8ve4ITF3HmDp17CW8KacSw
RmzR1s/ROmcazAtsosciXfXsi3jzmyWay5fCcMqJeF/EQw61wY0WKdzZS9b/
m/zgh3dWihGlZq7s41xBTmrROn2C3ae1BQVTUrCmvu/hDrWv0faOGdj9RUJr
uqdJbt2GXb88cUJt3TnSj+Zx1gTABpUjyokerc0rH9Z5+uiXTr3w+RNO+6fB
5DfIM1s6XyfZIczwv9D+A2aA/tbGrcccfwU/4vThP5uNBYXtUZUUU0sJdV1r
zSHR80b96+wLX/3VH5/QS3MN9psbwxvZJZtM4X/gTsJQ+/+s0WsTWKgVaHjN
uvcPOuas6vpR0k+8nG0xZ1vC1ca0UrxSThz4q7sPOO6WC8av/c2pj5lrm2TX
2BdfJd2ZL9nZsA1hhu+65UjLwr+7R/xZdF3ralhcKYY5uYliBj/AhrOuf5+3
tYxvzAhioEperLO2fd/DHWpfv/UXK+uyhmcph7Wp8/15jDnqyZGbpi6Xpclq
qZOzpNRSSLC1ilLrj465XS3FeUSPU6a1vduXI1Om32qt+/2dD77T8+UnDrXv
rdH8WjSXu5IVnMao9PWTnt4s7DIZe9U/RFOLztZGXcAhrj5aXdt6xDH3aYwp
vX2pIN64MLVxS4HcsHDZ8IPOvPXRD9Ps4lWB9qE21PZjY3aGTA6zi1w0qtMs
zamsjaikKNq6R4Q4d4t0dKfB1Flr7DS4r1300L/f6yOXTfJbHee8+hpJgxpU
KBZlLavcrLQhzPAdtHWfEJ37rwYxKJj9apk6JuSY/OtHeDFaJcaNZr9ombuT
kJff2XzIkWN+fdy073u8Q+3rtz1gBnZxgla0JP0F8uSTWUm8kTMlNc4lvBio
kFqNpnkHHdKmskTUUoxvmBZ9qK/Rs/yNjWTtW6QrjxGzQ/XQ/yfanjBDGitT
YdUpUNme/AexmVsFS4LDm7PAfkMGk7fh0KWCuUNb21btnv63lWTC/CWr38k8
vR7TRivbms8OYYahtp9bnhZKZF/vumdnrThLb42p7DGuLsw5PZyr2XxYsnp4
R42hzdhw3eOvZsfMbXtrK9m4Ca9+pbHSRJraKoYww35qwC5+8edEjRjS2YK8
PcjhfdgUZ49aj/hbhTFUaw78/NjbNny68+opsz/ZSt79b2puD7X913pZBPJu
LUfReC/WkKU5Az/4MNfS+HyNKa62RlXuCGfz8vKtnKmjUm6rlpoNtkkrV5Pz
L7nj4RW7evCT2QIGKcFnu6Cn6Tt6sLZRMSUfi97PYtqorFLRrK9A7wDCKe7P
5Ys5g3L9aFMEAZftK+QyiqKRy9JKuKRYr5vmCmBDzhX1aOz9BbxQWCghIOrN
hP/mEQcpKdazuV0YT0WTIrJE2aWbBfgHCneBEfWwFPewFIVScoM86C59zPDf
j//BUfTQD4EWnyHdWFKvUGBzSSOvg+cX61ixrFlKshRWjryPorNsGSejd8qY
Czdfmi/8wc4s2V4KbqR+B4YHaHp/eklW8RwotfwyuXw3u1GbJX0ZOk56ZQ1n
9+5bOxY2PcXVx2iBKh8Pm2uO8bY2tRTW2udWuyY+9RK56OLkyy93KVEu1Mbb
l8cnMJdHoVhiG98Ki5TP0hSTxUuedAb5XBd9O0vdq0yHDIwcWzrTQ8mAVs4s
UFRC/yydx09laaxmlm5BpriV1ImmUEuGKBtNf5BjFJVXOoqKHFsy5b2Y2yfN
Xp/P5QcSguUYbWQKuLv0paV1pmXAC90Dr86R0g4U8sXrq0XKzCp/V8yAVAJv
eUbtfXmaSDOTxbH1k2w/rijuESuJgNWU6CMzxTXqoTWg88XjgytDMt2EmfT6
We5VzHjEyjAVqzcqa4vwMF8cMxwowPWkt4+l9oLx5ZRMbpkviVI2TXaCirne
BupCFp+Wo+n+2CrQdcjTLLCFPZcqxNflaPxtoX9vCTyLP4clYueJFZooq8xI
yKrXPr25dY0gAd1GsbqlKyxYU1W1KaM5WWX0qevH3f8aqRwx+vGXkKrocqaB
iDIZdvsYznl/FgkSuV9/v7LFmBy1wGaEAVzsVnK+SN5K4tny84lXP/uKSAaG
nSm/s1koq7lD4y/62dkpzZoymeKsc2WuE6TVNOVjsHEFJYSD3XVS+EEfZajI
XYsBychSWL6qNKMQsgt7IUuKrCONfGMXPiJPD1JauVCfTysDLoU2Z5SM88rw
ccBs+wsl1kcYV1TOKS4XRqXSnKvKsc8jt8+vXvvmiAPv0ACuc4U5OaiSw2op
pJNDgs2nkwO//csrj75KTjn7ut3r5O7PxGVD7Zu0PWOGXB7ZGLBHhhmARb/9
bs+4MXcazQlBTuKdJsQMt3HiUkFMVFjmD3dObYm8C5hh7VsgzArI2QoMJiDd
pikx99Dez85Rlp0d5DWMkSqx0AxCUEadwbsXQHW9ABv6FUmXZ5ghT7lWLqtc
7xiABHjgc1lawqYfjzOyGTofBVEURRUc1dJNAuW9mXTxMKBYLNIqSp48nUt/
b74vw1AJe0g6i2mrCrBK+NeIHgqKLN6Vhd/1M2mFwi6PgIEyf4Xf5PPFTJtK
YxCLnkF6eIpZ17IlFsVYCp0vYoYC2ZHOZ8qyMbLP0m/hrPYrcyudbhSMhR7o
GbqSPVTAEIpWXnr+/WkzHkLAgGHnIc7mB8AAXWOPqG2zq5zXx5ZsHn3FLe+9
W5QRSm3BUj0S+iLGcAdhhhwZ6MCf810ZWiCV8cBS+SmGGQoKROtTKKUofHPF
eMv+/MByIIX050rxbJS/0clnSzw5l8kiGmTIrS+bYWy1eMEfaAjWsLubap59
+WyJXVGXXK74zEIJlaUxfiNL7Wd9+dzAUiBOy/cXQSCdOh1DOsuemS9ZY/rT
lFVnB3YEB5nB+owZZPV9FDP0MuRMZ5FhmAFoiP01aMp9QG9l8iWNW51mxMM0
aPhIDggSD2CGpX9njJfWgiytGGCG7hyFAelsCSnllSn007cWW7pfISSsa5zL
ljBDOp1X4ATWwO2nZ7aEUoobVfhSmsSBhn/WX8IMpfyE5Vm+6ajYvZ7MwBEu
pjEEan746bd+esoCtRhWYcpoP1Cv1pKsNiFmMJgCQsN1S5/Ja+v+so2QHVlG
chQpFJjKAbNEwJCnko6iCMXlkc6SEmYoUOxayCvqBmsZMhDJk0UG1c/cJcz+
kc0VQU4RsLGsy3k0dfSW9JHypWAniAGMAt0gtqoU5aAyomDsMtkNy5IDNlPY
gbChUELsoJRlt7PEVziWbQpmyCIyQZrA6287cQa5ggKycwVSAt4K9lYwSBqB
HTLK4r1swpYGt76P7S1yxWL9YqTQ4vZlmT2nP4f5vR98bKWhOqCV41gNBNlL
QCuF1BYvYAatzau1eR5fS668wYcPyJNStT4y1P7H2yC7XKFcDaTsmur4kdRy
tbUFc6dIAU1dkpMiKktIkJuq5JZqq/enJzxy4bUrPsmTnXnyrw0ZRSPJKied
otr+bFGooUBBeAoEvIsBVEXuI0nvRBiTL4qKkuJDKRjZdiZHirdBsywnIT4B
q3BmqSmDgRPl6OcUeNxN8lQfK/TnsggYCrmiUoGoKVOgLhhUPIHO2cdoLScW
N0XxvBL1VygFiJJyTUSRLPi0jGKkYYy8L0sU/aDAEEU6U5xXRtHQkVnli1PM
o3DJ0YofVE7BQmSptYAxEvxXERlsmFTbL2So4YX5CygLy+W7qPRRzCADWgxM
KtdNSvoCVZCCifs1dp9GTKit7SpTStXg4ezzeHtYkFKCKXHUsStGjX10SxbD
Wl7fsJ2yWfgWNq5LmRG9XMO+ZhA7IbX055laTtP1FrL0z/JUJnYrU2WgjKXX
LmlkCpstbXofFS4AA9M5xUSwAykkvxOn1lvEKvgPjAdIr58ac1BwKtTbnx7Q
nXL5EjzLl0mBItcFoNKtxGnkewfSC8MT+3IlMUjlaQ7vIGcVSEPbpznyCSHb
0J6jzCWPZAb8Nqfc7Msi/femcfy78CpSljBiKZpIsjTNYYbRGF5Ry6cHKJgM
5BZQOCp7NdZsyjJ2ni0avEq0yEgsg9Kqf+BJQCMIhUC04UoWitgMSKgAAKSo
GCuF3SnlU1SgzBPEQaGUh5xhpwJgs+5sjqqZFNWjIagI3vLF+bHyJP3UYJBn
hJyjGm6Z8ao4Tfw+k2Hb2ovko0jGglKVMqeEJEyefZfeMo13BrDShD3CIut0
dRGt3c/XBv4wauPYGa9vz5DPt5HPNhXHUTKPKJubw30vdJMcsJHufBbDtoFF
0FVB7qTUR6NWgjwL4WHYg1A2ki8GWDDulC5jenm6n7nswE9yFClRixe+GKBm
sYJwmTs4Swq9Sj7/XLp4orOM5Oj6owWTnTtGO8jJMoThw2JTrCaozjBLQq6I
tKnRLMNMuAXUqnqpmSCbUcynMKlCiWsXzylAW1Y3HM4h+zk1lyLnVMqE5tnG
UYrLM/Nmnuk4cHREya8VPZw7yLmCKsmndQJjCQliSHCk1NbY9Y2bW5Kb+nvJ
5veUgsVDmOH/QNsNMygHmTIKOEGMzDZ9SgQ4jPagyhnmbEHADFo5AZhBj74J
X7XZo7OPPeG8gNl91l33rlVYSh9+zeUY64DnZBWonGUCjvJPOIz5oshEPraD
CuLcAGDIDFBvqYOOgtKWdGUJs7rjE+FUUw9Irr+kdRZNXjsKGRZiodgdSpgE
tdHevGIBRsyQYR+jepCyDhTPK9aRfFHlR9HdxTBDNsNUUToiUjzS/UUGnkHk
DNppujSAbFF/Ynp5SXfODliwmd+2P4cminQB7Z8Zdjjz2QHnSMkQWGBMg6oo
jIMpFiRgDH1MKKPCjtZiauxh6raiSJB1b+1SS16tnNLaOlXWNs7VzLmbOCnE
m6N6qaO6NlnjHHPqBQtM9lMeeORlwAy5/K5y235auVyTYcosM0H0Kqb88sUA
FQJXjNnwv1SNJF9EqowA80W+BByVYoaSOqZgBhQifQPqLG440lIeX5gvAQZU
fNhCpUsoJauY8QuKwYGSAyM/igAR/xW9AXkq5xQ6GZA4iockr0Brekw+zZKP
CmQr4jRFcWMIg2KGDLNpgyDtzSkW437lgb3FGBOqnWWLmIEoFvIc5dIUguSZ
WFIUsaKshyPVlyseKQUnF8UJnWqeYYZCf1GcKb65HobPGfKh5veiRIYHpHFp
aGW4XQwzFAdAij7DYiAh2m6YRRxfnib5kvLKWApF4wMmewUiFYrnnSKBoo+J
ChpGDsXNyuR2ZvI7FMxQIMoI84rb8pGnt9RIs3i7X8EMDTHO5tHY/WqrpxJY
kzXqOmLBsSfPtTtOX7dmG2MShSJKyTNXJvyT6yL5ruIsMkzdpuMAFLqrSJ79
PZkdRcGOPg5AdIgZMrmB01sS+7nS91mGcAqUDRYYqhpgZ8zzmC3xKbovdNNy
1MGbz5QwQy6j5OnNK67PQgkzDKwkJXtaBSejOKeQ0RVvmBYRHb4gh4gyWzyq
X+KrNH+FYoalE0l342FJA7igL8xmSxetewd8N8ox6mWnJpdRjkYGX0TGT/pM
h+lkWzARveRT2/yCHTBDmBfjwHN4++RjTvEffvCUU341eXfAMIQf/kfbIMzw
5Z+U7AzvfkiOuDDBSTN461KNeKvamuDNkUrM7h7mnY2cY0FFPZBBS92Rvp3Z
gaIn2QzVtqkHvJd5OJmAy+YYCmUyBQRJmjL7fFHHGWD4jGUWlPPFcs7nSU+e
1rYDjplnXgl2WrMF5eTmS/ojE0LAPnsVgzl9aJaaaItqFWWN9A3pHeTt9VuB
XaaZo7k0ZvgwnNxSXAQ1R9NoAcbb0wqgz2ZKQGVQhUo4dL0YF4FypQfOIukr
YzVZNDMrLKLYC3nFKcyEWkEp0Yiae7bIlunHlTWklpY0ZVA7KQdk5xo+nc4q
M2XDLigGZpQa8PP3NpOTz7hNK87m7AvUrihnSWEXY2pXSmWP8lKUFyOCKXTA
MfPR2kDREb46k1PsRTlqIy02rNSD+9FfdLlSKcl4GHNLU3WMkgdezyn5iRQ9
ur/c4tQNjAhU+gxV9PsUbTpbdPLTGeUHJGa+aLvN0BGUiyoW3MIUSGoc6C0g
CeXTJZaXV4AkY6r0HZksi5LIU4dYgVFJV0k6sNkoFh5FSaQDyVO1jVJ4mrmS
88r46ScAX6HDIZfLDVB4704YC4MYOMN0iY0DyfVQoqKk21uErUzv7itND43B
VEVl4q/ohsuV4IcSL8RMfRTqYLFaOlw4hTty6OzuTwP8KjCMt6sf119BLIq9
IFdSJ2lcxwCHQIiEPILtOGDs/HYcTD6jKOBFyKFYngv0LzHGppdZvYq2CBhi
muJPMgCwSxwphzuSoWKd0DPx3ofk6F92VjhDnCPJSXHOEedAnXEGNXavVmzS
WZuHickqY8TsvKwrB0/upo653u7CrnTJ6V9cf+ZKUoAhjWzJlG4jK8Y80qdQ
BVvCjLLdqKJjytycIpr7qK2yL8Oqx+Zyinm0KLhxq/sVT1maursyyvQLLK4m
rxj/FBxFF5zWiMFB4tIBgiiCjQFvTn+ablZpHbOIFGmcDBagVdafWpMUixb1
VjCgTufQq1hNszklSpRZRIp4uegy6FOgNeVdeWY2xl8pyAFD1EjRm0NZ1zZC
Ird9JjjncW4vLye01nZBbOcteCuWswZU7pDKuVDruLnhyOZAbONguTQEGP5n
226YQZFXhQL6W4vn5Z6HXrtw3tPciIVc7S1q6zKtLaWxgB6aEqwRzj7/5EvX
1Pywjbe16qWpI6/oVB5M+cOjz7yyeu3mBx5d+5fLpv3j0ecUJYIGOjb7op9s
29mVUdy8LISrfGAsR3GeAXvlnKKGSAFDF3xq2y6aBYLB9v6swqPyRe2bfUWV
sr+3exuqcVklqAsY+OpX3vj488/wXGeLtoos+eKDTFv8Hhjcmlc/+Ofqf7+8
9pM31m+iIIEi/xx5782PmJ2hp5uZndGfW2Q9Gaq5UDleVNYYt9y5c+f27i3b
erbScAJMk9WLLDBX5BEUHiDbzxWNfUW7Qb4wAH5oe3tTf+KW5Vu2MhGAgIAy
23y6qGkWsCAEefn9t9DoSnqKvo+ia3IAie3MFLbBv7f+fc3109bq7PNUrhaV
FOIsSa3UyWPgSpiTIif+5U3TobfrbfFq95jtNDQFP8pGDvy7i8GT7i8X68wy
zJBTRP9OKolJz7bPqMxk1icGrXJd3TuLvuwcMuFMETNkt1K7NFJgd2++T8EK
hXQhTTWaTIF6gZmNikECXMucwod39ZLHn3rp7vtXbO8CeakE6VH3PaUravHA
a0EsxKygQM2SUYGBE7THMuBHMUOO6Z55svLJl5PROxRwmFNYJELK0kepc79c
Ae3JlKIjcjQAr4gZmM6OEZfpDzeRyy6bs+WT3MYNH7214X3qhutDB02ewrPu
PMOn727Y8M6bb9HRFY04iuEOSIKZgAY2OtOfpkeC5gmnWjbM+KMPP0+l7v/s
MxZWCku7PYNRtRkGghhm6CE73n7n9R07t9GoxaKZQlEn+6iIwZbNAtTJ9Crv
7FYwA6xStgsflhmoSzIQ0oaLyUKcaKRQT45NBc4FAAaADUxM9zESyygggbCa
liTb00ND7wrk/kfev/iaNYIUAHzLudo5R4KrA0nUCphB7/JdNOadytqowRg7
/9Lb0BOT3tZT6Mqge6iXPV+J8EwzgxAOjAXZsgZMCdb14ZWv3/3w6m3d/exX
TL7TiJYslcZZVpKHdSCyNKbL7aMhWN35onUoT7FTHs0S2RKmXfPyhkCog7ly
0sV44QEdQlF2SH9/fy6v2DPzDGoo5rJsoeziEou5gh9v/6DnypFT316/6403
t7/4yr8zTPOni5/ppYFbWfSGvL7hizfe2sKIgXqN6YbCpmSLwEhBi0VWoWx2
F43+6kVzJWC2dz7p7FRYfen0I/qiVD3l+lmvvvbOx735lvb3Bfd8zjqPEyM6
aRFgBo0IHCbO1wGHaT3zuvWCa3q1dMMgzDAEGP5XW5YMnBJSBNqZAdaH5kEE
p23t/zj+1zMEycNZvWpHhBNDageVKda5vLOFcwcO/eOz8s8f56ypCinpOqjt
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
5XdEbnv9sVd2PPHaLqNlfo1tYaU0t1KaUd1wvaHuOoM0weKaMv7mdWZ54s9+
e+Wq1z/4PI3qARzDn5w8BkZbbZldJc8TbLMO/u0U+Wd/tRoT5prYH6/xXzX/
Lq3rsmEjplZKN+md0yrdEytcE/V1UwV5VrU1rrdE9ZZIhSVS6WzW1E88+EdX
3Djr/mHmVFVN7NhTFnzWTboK5LHnXqyqu0bvukrvuqKm7ipR/qtJukIQ47AR
1dLMKuf4k6/s1Bw4ukKeq5fnDhtxtc41+siT5h93TsRQ1WmoXVwpJlTWALsJ
BZhBJYd4MaaREhrM4R/lXPO4uvmcs5FzebWuaKU5YDS1jrlm/b8/7tq6izzz
Mjnp9JTROtFSP00vjxOc11U7mwURXjRb75o88oY7R/xsnNl5uShdZpfPcbov
qJXPFkeMHD7iTyPHJ866KmZoGF1tm1ktzaqSbjY4pxul+bWWZrPJY6n13Lri
adjoE8+e99uzO2rliUbHRIPrGui1ABjM4eHmWeddfgcoUQsX3/WT380yiNcb
Tc21Vs/lV84CfLu1mxz04/NM5pkms9dgCRtMoWPPbXrsX+QvY/4uOa5yWcf/
7Ifzdu1CV/Vv/7y4xn5NrfOaGvmyk84J1tRfYpBurJFvgm5A4rzRKI8d8dO/
3PrY04AZoP/6tNuMrpuG1Y+pqhvt+tmYq2Y+cNQJ3hp5ynBpTq04e8Qx4xa2
vbD4kX+7fzrKYvZYzd5Ft696dOU7onPyMOt8QfQe/Mv7BOcsnRtIfXytdNGv
T75+ytyO25Y/v/L1zaNvCFc1XMI5p6mdIZU5BooYYDaN5OcbJvOuGytc03TS
FL1rkr7hmlOvTAgHXlBhA4K5WbKPvebaFV0k/+7WT5969Y1n/rXj9IsfrnZP
npP66OCT5pkPHnXECTcNl8eY5clwygzy1HsfW95DcouXfOCone2ojjkMcRAH
IMhWPk9sriss8uVSwzXDHOca6y80STNNpqjBtAgwg6Zh1C/O8esbrta7x1bK
E6phPA2jD/3dvGPPWFLlnFNl8xtMCYOxzVDbbrD4q6RpuvpL5re9ddrlSw0N
QJMTK5zjNXVjhBHjtI6btNKcKrun0tr025EPPfcu2fhx36tvb7nk0nvNlmut
0g210oThjmuhm20za63TLbYbTz09ceiPRsvu013OC5zSeeaG02vrTxOdV4vy
db84MWJ0TRFMjRqsXxDk7GEe+I81JYgpnTmgl+bWOBdyYkzlSPG2qcYfTDC4
L612jTZIM4yWQK0pUVsbP/H0+Edd5NaHX//FH642iTebbdNM9qlAS8Dxtu3Y
9ftzWiulG/VSolKM1tXOPu5Y37oN5LIJnZWO6/XO6w+QLtj4euHTLnL5xBbJ
tMBaO8/ccPHxZ3urXZcb5BtqLM3DzE1Gxw0Gx6XmuisPOuaa5qVt26j95ay/
xBy2hZbaWaLzulrnqEsn3HLyObNN1pts9hlm+ZoDjrrWv+ip2x554+e/bLNa
p1jqzvIk1jz/FqmUrzCYQ1VS9Cd/eEpwNmrdN1U2jNE3nP/j3467Yfaivz2w
ZsUzG1LtD1TVXWKon6kT4QwGtHagorB6xDRevlHvmFIjTzaK15vlMdaGC046
c6HVNd4kjzWIN9fKM8+7rBnY1Md9ZOVrGwEzXHLdY8PsE2e2fnTu6A6Te+QB
Pxrn/tG1gutmtTzF6B7ZnHzj7yvSNQ2jaiwtNaKnUoKDP0Mwz6xxNVbZ4SBP
qmkYY5CvNLnHmeSJYm3Ibo0anH5ObMS89PYYLyeBvfBSALrKFcUf2vy8tVVw
zZzmXbV7MMPQdcv/ufalbH65EmYosNg4hhzQX4Xez5k3P2SWJxhsXt3wmCAu
5S1LOctSDImUAmp7VCWGOFcIdFWVK6KyBXRmr94GhAF0EuTqgpzsVTnaudqY
3hr546j1guiHrpIBeIQ4RzPn9vA2rwBM0tLJm9uBCaBH0uapcLQ+uJo8tIZU
WFv1lliVpVNrTJ41/hXj0QG+vjFwPzn/2tdAPFEF2YdVuR3NBufU2NLM+k3k
B0fP17rncPYmtFjKCa0lRo0G8QqslMEKPdO8ZG7QUDy8nOKtcQ4UFtEHM+KB
mOUFNBQwzNVFOYffeESn7cgOtdQoiFEYJ+eex7nmcM4kPtwWVUkgdoMazLoM
OCqitQX1Nu+pF9+76GEcvHh4WGtt48U2zp7Au+SIsX2C5MFuTQiWuCAFdK4w
b/M0/OKeA361nLeFYN2gqxyt0GF4WHreHoGuqx997vi7OaeXc7Tq6qZ3/J0s
vZuc/Kd76N946ES81aYUdM7th07jkwMCbIcdhtfEi416V0hraa2wtUDn5VZ8
sq0Nuz2MwM/ZAp2XgloxVmlJQIcRAnjAn7taOcnLOQMnjV55Q8vWo37+WE1t
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
GoZEm8dHaofPyViJKc3efZeu30ArNx7Knbf58g105Mg9yD/DV86aWgqkQRT/
unyxa58SwxNdm1o6Ldl8+9hFNGHGsnc/7L9i1a/F8350kwwy3fvMMUd3e+aF
oeOTlmbO263X/dC123orcvxx5mBx/pFz8kHpNF/ewG5r0meeOnz8Ala8kJRh
05nlO/+4YgeL1rnnqvET9+7cIT6sxYyAy1x9Q9Wqp9o4XmuZ8mSb5DfaZU6M
W73nt3JcSzjcWCDD3I1amV5NTcqzVgJJ27z1ZJPYEc1ajFq+8/zSDadHjSp9
p/0YbUy3b/uWWaVsmvCTo+dcbV7rfPHiRUGA3FW4C77vX1a05NIX32Z26V1w
5TZ/4WLduOHZuAU+fHecxdh56A9rc/LumdvOa2zMa9Jk7iuv7UovPnmrDn6Y
U7bzuZeGlC48t23P+Yq/6wQezUrIs93k7Hf4xcuvrF53j3o681eeM8b0eeaF
8R99Wmw0jwhvPshgGG42jhybkH+jDt11QKaJLv2Wayy95q853nnA2IVr1lVa
3Veu2k4cv37h4jl6SnmtFR0+7L5yU8rOeNOGMuevatN2iNH09bBRBcNG5LVv
NzLW8tWyZUc2bCiPifl8atyP4yevavfe6E2/HcUSuWrH4elp6z78bnZYTD/N
E1PVETM02pKYlisHDi0PM/T6YWr24i2HIlq9j5u+19CDEebJWnMvzAmx8NTY
pMTEuLGOn7yBhfB81d3UJeuWbLpqMEy2GOO+7TXdJUpzc5AzS3BPnLb802/j
rrnQyOQyg2GOXj9br5+8cPE9kivIRUZHtZO0fNsPvv52QGqHr0qSU88UL7xn
bPGDITJOq59ScekBJQMlRcu+7Z3e/Ikv234wqueYBellR4aMXXKzii4ME2iG
JilvIA8ZYa/duYrLWn7h9tPPT3z5vxLffje93VspuLkqrtUUFZwoLTxVVPZT
8fw167f+8vuJ8jrIJI2yy9adusg9/fxIQ2yfslVnDK2+MlomFi9wrt5dPnJG
6evvTdcbO3frm1hpQzZeykhdXV39wsv/3r3vqgs5cY3qeDR4THFayR8Dxy/s
Mij+wLGbdZVowqgMLG/9e81oaR76YYeyhbuQ7sUZ6mZF4ZqyVs8unpZyDf8Y
QhDznB++WTR14uqTR65XVFzCVU6emnH2yJ2aarR+y9/LNl68DpV1HCg/ZDTE
P9M64+OOy3XmceaICWbNxPDYr/tMzLhRx9+2izcdaNjUtRpL50nxO3r0Kiwo
+v2h60aV/frx43fOV1h5EvTAvfnH0TuYjmH/AvcFls7s0m1tXumhN3fq3qd4
6LBl77w1qZX5s6S4ZaeO33+iZfsRY7PGxJe0+Ne3m/+4baupPXXseGnZjs7d
c/XRw8OikuBcDojYp37Y60Bo7Pj3v8z99RBvMb119tithUUbtbppet20X/88
ZQfliGx1PJ2T//3EATvibthQaunuzXtRhGmQzjzimednSllQyeSvm0P58zd0
6DL4mhOlLqhoZhqtNaTpIuZkL1xZy4nSbZCGz1oDPkt8l/5zOnRKGj91+48b
+eaR48L1Y40te+/+9RYvgJhs2nB4QJ+ssFad2348pdeopakFh7v0z8D6U84N
6uYhLQlx9TiQpWprXY3NeqoC/dd7Q9s+P/uzjxe/8Hqnu7XowhVUUHgwv2xz
ftn6woWbFqzc+tvJM/ftkNcqp2jbzdvouTa9dLGd/93zJ42hKKx5bnNt+oiJ
FSOn7w1v2Tl9/qnU+QfGJS5auub3k4dvY/HY+sv5TXtulC2yt36mIKJZSkRY
akTUyPCY7zIWbqY5U2HBnJvSBRvJSM7wT4O0qgG6upYEDmEFCzaL234WtabJ
EYbMsPDU5vq09h12/LvHntfezcec4fwNMChYQi7dRmZTD4t6nj64ODxiTqhx
UnB0t68GL52ScnHDTsha1aV/SvtPv6cj3UaSDjpEyGtoI3pgzdpDNNkx3QFK
l82QzMRg06utWNEJNpe9/Cwa+sOurl02rVoFBftl78UBAxOuXYcH4hHhhBTc
iO4EWZi/Dd4kp5buP3rlxl8dZ++gZZsvr95cgd1ehwsIsN0Nz79XhS5dhTB+
Nanzzt0oadaFalR38vLpzz6dPqBnPs38bhUhxWTqzJMDuq7u23/0zbt2mxsl
ZW44cOEO9p0//rJEFzXIaOw3etSW8gvluCxXEVr5mzg55ea/e+zs3HP71p2Q
LvzSNSvnaW2yynT7usN09YhAUi3O34Bav5WxYNPpcTMXY83jsKOHLsze5OTQ
5CeQglpKpIvrzmODklXyJ3aoj1eg25Vw58afDmXMWiU60PW/0fq1D6bF7+3c
feNTb61W6XKa60u0YYWa2M5rd1y+UY0WrjnUrXfxmfNo/Y4/rS5wdfErHl6u
qzh0qXvvks7d8lfv3AOpKzm0eaeYmXcxt+B2RvbNJcv5/b+jOvz8Gik12KZ9
h1Nyy0+cB2G4Xg15+Nw0agXWkHM6rTV1XEbW8n79crt2T7v60Ek794YVAjKH
DqNrt0lqapIpGXd+RQW6/wByfEPEhpck4dwd14kL4nUr6jlyU84i14tvrNAY
yiI0xR902DR26v7T153Y6CzdWn7Xic5cQ2GRExJSTlDOQFIQumz2GrcdWtgK
uZwFbJhXbr/1XecdCdOvn77IuUQp9aBAmOHfNyAkgsfA7xfqvv3+oEaT+MQT
szAptQH54KqtV3Ej4XbGTGn5zoOQn8iB3v8kd+c+NGPO6adbZyTMvm8jOVtr
qiAZK+4sTDLuI5RU/HvhinLMtP84eX/Ryi0uknZTSpvI0zzuuPbcw1oRl+fW
Q5SZd7lL95UHDoKE/7jlt1deGnqpAqIENIp1r46rckMyziHjZ1+8g85fRVfu
oPsutHLL1aeeTVy1DvWbkP0QQWoqK4mPUTVO84Pj1+HnQNJuSA/lxAMzb8Ef
u47Y957gcMUhtrDrXF7mansNnBC7YRWXnHbpoz4/vvH10jDd/GahxeHazAjj
uFkLVuA2X7caDeu37/Z1tGvrcYfdTZM13/ubO/jHw579M7oNzlm97UoNqsO0
Yet2lJZZl5H7AF9L5qODv6GrNQjzbSvRIRv330gpOnzyPCTqvvMQep+kg6tx
OUk6WRE9qBa37z7XpeeUPoMTTlZUUU2C2Rcu/P6DqOIyGdQkSTtI/hXh9i3I
nvnAjq6SroQ8klZb+VnrvWrUZ9iu5Fz+tc/3Y84QbMn6qPehgVNOlF9HmFZt
2lQOjVKNnm2TN3DwqTpFlszaGkgRbodByeEC41pt3oe+6blm5pyLew+QxKk8
opmjcWkv3bBfJ1G1SzWoU88tWkOqTjNn78kKmqe7srKSR7UOsRo/Z/WOkzU8
pOv67KuMsoX3CxcJbV7OHDlpmx0UmgPLrUCS4t4R4ZpddDR/0Rncp5duooJ5
KyBjNyxLo1ndkZwhFFXW1mDv7FY1mpt9r1vnn9ZuP4n/efQEMpk/O3W+xpMH
/IGDv2fDwwINGZlx4FDV1avo95Oo17A9anWGRlegMWS+/8W6nsM3/HUL/XkT
WV7qmjFvV60LsoXOL9qyePUfWPbKFli14dONhpzvupyanHj2+N9oydbDVk86
Vqq1pDynDP80YGXlFB3SehX5AAe3KJC0UAJhipwn3TzWDdfu3Lp+944nr+uZ
vypOnv7ryOmTh87+VY04G/inIM0wTcCji+dv37t+k6yX4EW3U16RyfGCS/Dw
BKw5HZ6c7vBq8hFNKFyHRCe+R0oxTNmrINJcw5C8FTngbTS5sJsEeT1pj1Gd
nX+4/9eLZ8shja+Lf0jfzgO7sPEcNRN2kpSebibBtgtbMN4KFhQiHvR1bmnH
kPRQouQht6GLBAycMrW2uSQNg1Uxduyq7Fa3PHxcnMc6SOd401TRZPEIoRG8
25N5lGQEtpFDt5Ddxkuf4naAlLVuQeSkPM7IJoANQTSbOLnLTqgZyXdL2sol
uKqs9xDNw0DbU6zFpg/KzzkRydXrQg6SxBkSiguCw5M6mof80rBR1w1tgh7W
wFutHG4urOTqyFeIZt3lSEeTrdhul5M6ZaRJKDuCijhAPeF7yMZe2KUjinVV
9BObC6thkaS7RnYRvBKn2+2WYl9S8ztADElhcAc9sFUdOFp+7NR5+eAyp6yo
ONICDlIRaAGXQ+41OYs67nQnhNA4T4ZXki3Z5uaqcUVsmDyRe2gL4GfcvfvA
UUfMOYLQGp2rIiUizEiEJNQcEQ4stG4p57INsle7IRsxjCCpd0RpHbK8jFxK
3k3iDFBfERIw0yLRe3BbcXytSGMzvLxQmWZcxjV01ZH823JeeGoy5OzSSH4X
ht1KaCptJbf0HCDBJOc4jGhBsOOqw5QCJ9Lex40iVkFSdQR012qrIaVDUspr
zrO8DewPrj7n9mzupnUF6+kiTJDmlCfpT+336u654J+0NDz8DQOI93SESJsd
vrfTPNEibmPaGjzyZIuW12zDCJUGtOeEfEg+TnJrk36kT3aKWFwh6bqbtLCT
SOqx0xUHj/9VZXM6BPgQszg3WcrBQcGg40hycKckw7JWhOYHdeGkLeOmGe9J
aSVfwImcNQ7ak5ALHqYp6yrrIDW5G2i+RP6hkdycJPZQL1g/YgfuAwmsyZCh
Oayl4egk6bYVexAEkaRlx+0jawPaoQ0mA0jJPZ9jFcSBquUgST1+pUukHccB
scQ8ESZhakXozyqr+8bd+5wcZZU4J8nZjTuUBDbgQzvJOk40IUeGGbJhPShI
ucjl/N8M/zRwVCkiohOoiiVul03kSRgW0wAYP1Y68Ki84/EtenWFC7QnSLkN
7gdySUYRJcHy1gysp+isrWfsU/2MEBIVA1OQaYW0ocMBkyZIuk3SvIJIRjVC
0viC5O9kboUoBoH8godzq7Cex/afOFhY51fLlsjmclfSF2EbYpctL1ZxDsxP
sNLgOMqgREHSqw7Kc3i5JDJnsBHaYIcGofns4f/wwCeBX4Fae5dADBM9LkN0
uzkrUUdwu9NNAzxOyhnqnF7OQCpF2oeXOYNgo6dvIYm32Ox8tVumNJQzYBeN
g/CDwBMdSwIYDsIZaqQW42ugiwQrPINYdTuQHQf4+lAqzo3bgAfVSbUxJpO4
QTAloMqWgxLVuVA1/kpS8iReRLkeWUtCG4FwA8mi2Qmv8+EMUEs3aTup+6gg
WYnskEb27hB2k4CKA2sq0ruSjaLrAUjPkl3DoKSgsi7RWmOrVFhPYgRI93ja
BNMGWiPZFBBviFg6aps4l3ySqihZIR5Mag2Nk8tciBx0wnkOQiG9BH9jvVsj
yZasbyVxJ6YWK3CJn4sKkaasg4wsWcaISsZlA5qHfIwXJ40gov5lu0NMBs/5
2A74hNZdsEqzK7xnLhIqSw2oDVmxGGCbJYq83CgSZ4CWAEHmebmmyGu87Dzm
eNToEFVAPV/6txvYJiaHnAhhOpsNxAazCJ7+HDcqtcf44S5R9kzpMTFQWkzP
rDy1qkjiQoRL4Ke5JZNEvsLG1AlhfPwiJ3QV75KUF2kTuZexDNuJJJPxSFgc
/a+Nk3rHRcy8Q8DtAb7Sg1rcT4QzELnlrHbaYk43LqCz2lVFOQMd2hwQQxvv
VvQRViHQN/j5UFJgscAHgDMI1AY7qOMjSylRFUSwMdd0cnwdiSMC1cDVdQq8
1O2EHoC5p5mDRFHRI0jy+YiA0eAVUEaZeyu2MOAxbveInydA4UQ2TBvsQF2I
uydSusUT3ksrR14HZQHN4eEMRMh5O/G2RFokTpZSmoCc4R8H2vtYIEXq6Ihu
MpsmSZ10D6Hukk0n2bRFt2R0QU8QqkxUplNW9sQWkBtEhQYm6oUScEmYsK9B
FL4E0KgwcNw0/iDxZMJr3bwoeFKpUonGao2vJIWBmzE9gIHPi5Lak8aLXBLy
QlI1yjR4GF+KORFp+BDr4x1QhCMRrgR+n2QDqCaXWgZ+63JJVYCh6SYRBxpE
ECTDKirih4I0xgWqMyU9Q22f5Ec6CW0gP6Q+NPUT5RlwubGQlI9MYl8CfT8d
1TQUQ4yc2+Ums4q85Ap5rI8nJCNQz0UqnY2oLEIQFHaBOpIiuscLt3w0A7BM
ShLsXkss0KxoHn+KRjnwJy6BsgiptWGPhadxPH6QpPpEshYGnD9RZqeeSQfi
mxL/V3C5FcaXJ4aXSDTvIk6kTEolf9RJJlVqYZ4HbqOST9QsL8i+KkR0CHOi
frfUOPgjbNll9uW1y+QN+N9k8g1qR4cSHhkP3ahWYr9yT8n/JMIiynuieZ8F
Y6SXaRQZqA5NE+NpJQLJE5dMp9MpPRliNVapwcU6yoXk4clLIS85NkYy1iEk
hcKkFvYYPqdTPsiFcCYpxAFxRCeWLlFm7ILky/NSsE4esyA+btodnBQrEIhT
THoBf0vsC5UE0ua0RrzTqyvAxLpFGE1UckQvOyZKi8TH4IkOgadkm07rU0HC
XUCCTlBCN50AghI4SSiSJ5LgGY1ys4OR4wTaLAIlTDbE1UouiSRg0CY8byda
gk63klU7iIw63OZ4vEAwgYfhQCJgHCdRcG/USJCMuKAIE7kEp7yMkaffSnqJ
vkAgDcU5vHqYV+guyiWkUeCWpy3gsD7kOQEYywZmMfJiCFoq/E8nuD/YzSEh
HZHE15yKliarrwTqNcDg4ZBkC0QkaWPCGKVeE4g/QroVywI7nOEfCs5zmoPX
hijk1i3QMSXyghS3RDLrdMr3gvJ3E2vr9nAGsHpyLNQTRJUCC+RTaheU75d0
C+EMiAigZIMo2ZCMojQ+SfQeND+wdGz8yQii8WHJtacxWGzrBavCb+VkzsBJ
rxDlV0sjhnisvLe0xA3BRSK+P3UTyGS+FItQjAvpT0px5KHtdj2CM1BnUJSD
jyKoWvw/ByEMiOyxcEqknVo6cp6G0ouUJmvIPkGJltBWlSIRMmeAGjmk2RVP
RxC9QU0xDcxKdlha2kL8blCAgsCTjYOeLgBddB8u0csKvJwBueXokOK/ksKX
bxapYXHIZXbSaLb0T4U8eKLfdDuP1DveCIQgVZKqLy+b4knEyU08JJ60k8JS
42JiM425H5yd/lD0CL7szEqaWXoNMS6C6LHvHI20SlZV9O19XqT+Jkyj0Dtw
C9baUZX8NOgp8H85T4RE4IlZFTyUQBZvYuLsbggK+QoPR0VUoO+idfdGLWhU
X7TJf0M/itK7gJ3Ksueg/SXK7eyRSSTKcSCJajkkziBzWcliUrki0TBOtnPE
zydyphizhB+4aUNJ5aQuijRV5yCFcclBFTsSZboOzU6aEY9sSjspZ4Deocl5
nWTTidshumjwk44OqTFF6hJjwmAnSkuQe4oHpSDIksTLwkMtOH4gKDHiL0vS
a5cuXmJoImg2u1wNaG1KYslo5UG0RCsEOKD/YRQTJ0WKnyBYyVXnkWBq5aVB
LSC6hwaUj+hWzGHJWhe3EsTmXMgTlVWsofUKsDymPDE9gZcGO+W0slYkvyIl
cZFYKydV4dGcgapf0vSCt4MkrScPcIjtCET87FLP+sQ3GP43wDv/LqlB0Rtt
kNYqKvxx2X+hoM4GNYmEvUvmTPCofYX+94H8udt7WrkihuYpjdcyyr/yHHAp
6S5Rpr6i4GEd8hww5y22xy4rSyN/S8w/mbuRPqFRD++wVVQf+T6C6FFplsYh
yPbV27agHp3KmRdSQoebTJZ7y0/agSwS9Drx0v3Ed5D8TeIaCjD2a/AlFwxG
ro2uPkXKUDmshfBteavkAXE+raqQhHofSTPXciE5j1+s+JB+wil+pWh5bwt7
eSo1p8ijl8SGLazAI76VBM7DKjiPqEDtKcP09p3ETpRPUHjl8t+kZepJ6iOl
US65570Kw4R8R4eizX2aSHkPRxZGCsrpJ/Iu3rOYhF6+ZWgIbzTADb65u35n
iqh+7ZCyWzmXNKld54bL26RylZURD86nyb1Q1ushXA21wCNaXgnF5wptwPm0
jHeOw+fyfCE/X9ZIvjdLJRF8pFTyLxQ3+EhdJbkUdWwotw1E1wXzFA7OV+yV
gwQpPAtF7ygGis+T6Siz1V9t+NhieDwHxZu9IutRbYpfecvwAC5R8KmUT+t5
2hmhhvVi+OeDcQbGGTySwDhD/VczzsA4A+MMjDP8b8f/i4r2aID61kGWR9BI
SnlpIDvK0Sd4Zro9kknlXyG3dIYawtpu72iC55BAtNc2+Woq+CEv2eVHVMot
h8sFOTTqea8g/011i1Pwajwa8ae7AK2SPvGCfE6rKyJvxLWBgvRe9fSk+MgW
45QayUef+FpqbxN6rAAMcM57+dgfn18pNAh9pqDoTl8d4m09VO9zuQB2GhOW
L+FRGrWBoRI9jeb2ua3eSgBprl86S8TnmYKXRykNCpmCrae9oK4+ll2kvWvl
YYci/SHwN68ZqtfLin6SbvD2O6JWSdGNgrenvJ3j27ZCw7orO9KDetaBI5zW
LUijkve25CO4kJfHyutn6CpIXrYjTrnvuPoMpOEIasjWvOIk1deH/YoKntaQ
G3jryyOFTZcvN7kUzOSROkrZuv+d7fZ5r8+3RM9Q90aSJUEx4h7XApJ2qkdj
BCVFI/fTjcUNh54sh4oeJ7qL7taR24EX5J0mnpaRX+WrE6TXUl7aoNhKSaP3
S6+FFSBOWKEqyZOg6F5FfaVS++oiRH4BK6552OnOKXQEwz8XjDMwzsA4A+MM
jDMwzsA4A8Nj8ahRJn3uife7G0Sn6WjiFJF6pX7zDfd7H0vkSKHbfW2fvEeP
VwohOdtFkE63FiRFR20Q3d9JDnegWpfaF+n5DXSykqs8Tic31GNig/I/Tnso
DbfoPatKYZAV3EBA3g/Ro6Lxyrco7Jrvt/U10mN/+4gYtmw7PIsLHwu51ryv
9lCqdVoX6e//GKeViq1sSaLZHtHC8DJ5h7iTk3flcArN7PmW3KCsh0J/e1uD
k7Uor2gZ2g71SZQPO5Vi1E6ZZ9YTHIdnPyl5h0DsAlmxxnv3BD22mx5p3/+D
mUOP7F/F3z4/VPJPb9192I7SNivItIJ51iuVoq8bXPKPHMgzy6aA/Im0S0jB
nZRoOI/zyHEqyJRSKRENxpT0Oe+pkzIurygA79tW9K1khlQp1Yqi+paJ1ohv
IDwKZvuICkEreacFPJxB8DLkRwzNx8mM8t1Soz5iolEaWRIV5728Dl5jJdvS
4ZJ4ryT5cIu0AFzxxv9ctv9GqTD8DwbjDAowzvAIMM7AOAPjDIwzMM7AUA/S
0X+PsLPKvvcZQYrbJGXSIL7qI+EKayKvzqpnBei35G/OTWLFXmslR2ClVY4K
LeeNWMpvEXz1SAPpVdopxclCPlAOWu89XoXg1Uhuxdsbrv1DimGsbFNvfM+N
amEvv8LUKiOQEh2S1Jq8Lqtezyj1uRwpFeSWEcQGqlLZIz5dSy4f5qbU/Tb5
qldHb6m862O9usv7rU9kVazftqhe69R7vqcJlQzEU4t6gqoUYPFRn9PTrjwv
8Shez2zII+VWoZ/lF9ITLaBsbvIPafZC2qnXUK4EL2uSDZxinDXsEUXLKdiU
b8ycvlNiPuQF9MTO+la9nnSRfxL6TUaEL2fgyL45eaR4JYHzzJfV66x6PETq
QXgF58MiyOpcQVrP6bVKcvs3UD6Cd6x5i9cA9WvqK28+j21gdr3y5v1ckHpW
KhWZ3fMqOmldt/wy5SwA+ZWHvMD95DwQZX8J9Pgoejqcxxbz9HxXWQLoQJMb
XOkQKWvhlSglQxDkySZPH/nM+HhAT+mUVAt5QH3NAy+CqeH/fq7B26oCqYF3
Fo/hHwrGGerdwzgD/ZxxBsYZlJLAOAPjDI8C4wwMDAwMDAwMDAwMDAwMDAwM
DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP90/F82Ks1a
    "], {{0, 428}, {700, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
      "], "RGB", "XYZ"], Interleaving -> 
    True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{332.73906250000005`, Automatic},
  ImageSizeRaw->{700, 428},
  PlotRange->{{0, 700}, {0, 428}}]], "Output",
 CellChangeTimes->{{3.6996699331679363`*^9, 3.699669963051358*^9}, 
   3.699671935110403*^9, 3.708639126161702*^9, 3.70865372946733*^9, 
   3.708658099644147*^9, 3.70872472756236*^9, 3.7087393330760527`*^9, 
   3.7087405623215027`*^9, 3.708742637496915*^9, 3.708742833613146*^9, 
   3.708742940091576*^9, 3.708744086586381*^9, 3.708894577200157*^9, 
   3.7089204670963497`*^9, 3.7113126633416557`*^9, 3.71131450835745*^9, 
   3.711318198794351*^9, 3.7113192961473*^9, 3.711319875092207*^9, 
   3.7113202928764*^9, 3.7113215308205023`*^9, 3.711322417227252*^9, 
   3.7113348881839647`*^9, 3.711334932117281*^9, 3.711336416945204*^9, 
   3.711337659442266*^9, 3.711337906565876*^9, 3.7113392834971724`*^9, 
   3.711340710965046*^9, 3.711354270911804*^9, 3.711354374651065*^9, 
   3.711406134716647*^9, 3.711836847220736*^9, 3.711928253219206*^9, 
   3.7119406493757067`*^9, 3.711940764373866*^9, 3.712867518499758*^9, 
   3.713150238067135*^9, 3.7172795143399267`*^9, 3.733800919854906*^9, 
   3.740257992485155*^9, 3.740265785751258*^9}]
}, Open  ]],

Cell["Initialization", "Section",
 CellChangeTimes->{{3.699670223241664*^9, 3.699670226184875*^9}}],

Cell[CellGroupData[{

Cell["", "Section",
 CellChangeTimes->{{3.7113198455288887`*^9, 3.71131984863168*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Combinatorica`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.697259356645728*^9, 3.6972593610219917`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Subscript", ":", " ", 
   RowBox[{"Ctr", " ", "+", " ", "-"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.697254090571294*^9, 3.6972541010373096`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Power", ":", " ", 
   RowBox[{"Ctr", " ", "+", " ", "6"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.697254111256958*^9, 3.697254120765029*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Fraction", ":", " ", 
   RowBox[{"Ctr", " ", "+", " ", "/"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6972541228086357`*^9, 3.697254132140942*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"vars", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"x1", ",", "x2"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"moms", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"k1", ",", "k2"}], "}"}]}], "\n", 
 RowBox[{"Protect", "[", "vars", "]"}]}], "Input",
 CellChangeTimes->{{3.6884178855296087`*^9, 3.68841790474899*^9}, {
   3.688417974741067*^9, 3.6884179913962297`*^9}, {3.688418190506782*^9, 
   3.688418210528473*^9}, {3.688421933090438*^9, 3.688421933873906*^9}, {
   3.6884219738845882`*^9, 3.688421974443527*^9}, {3.688425608342351*^9, 
   3.688425615806234*^9}, {3.6884257545347013`*^9, 3.688425754925604*^9}, {
   3.688442783549952*^9, 3.6884427843891687`*^9}, {3.6884431706758633`*^9, 
   3.688443171370882*^9}, {3.688445809774312*^9, 3.688445811182294*^9}, {
   3.688445900000079*^9, 3.6884459008711643`*^9}, {3.6886917331184464`*^9, 
   3.688691734293809*^9}, {3.688692417897223*^9, 3.688692418504562*^9}, {
   3.68869597156227*^9, 3.688695972177513*^9}, 3.688696115403186*^9, {
   3.688696998783186*^9, 3.688696999487165*^9}, {3.688697101232595*^9, 
   3.688697101855647*^9}, {3.688771028592341*^9, 3.688771029424189*^9}, {
   3.68877846277864*^9, 3.688778463289682*^9}, {3.688780426477026*^9, 
   3.688780432253344*^9}, {3.688781679960102*^9, 3.688781685640089*^9}, {
   3.697252869619254*^9, 3.697252900738282*^9}, {3.697256279153713*^9, 
   3.697256290398402*^9}, {3.697257057024065*^9, 3.697257061840342*^9}, {
   3.6973217265125017`*^9, 3.697321733786685*^9}, {3.697321825433258*^9, 
   3.697321827329494*^9}, {3.708739322077909*^9, 3.708739329327188*^9}, {
   3.7087405571562023`*^9, 3.708740559348257*^9}, {3.708742626739748*^9, 
   3.7087426329471083`*^9}, {3.708742828369862*^9, 3.708742830363505*^9}, {
   3.708742922953114*^9, 3.708742928103799*^9}, {3.708744081388886*^9, 
   3.708744083318014*^9}, {3.711229952509118*^9, 3.711229955021915*^9}, 
   3.71124449662908*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "wrsym"}], "MessageName"], ":", 
  " ", "\<\"Symbol \[NoBreak]\\!\\(vars\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/wrsym\\\", \
ButtonNote -> \\\"Set::wrsym\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.740257992971035*^9, 3.740265786077827*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x1", ",", "x2"}], "}"}]], "Output",
 CellChangeTimes->{3.71116328777658*^9, 3.7112359130547237`*^9, 
  3.711312663770471*^9, 3.711314508644471*^9, 3.711318199110642*^9, 
  3.711319296481591*^9, 3.7113198754782553`*^9, 3.7113202931865063`*^9, 
  3.711321531331071*^9, 3.711322417549634*^9, 3.711334888508844*^9, 
  3.711334932460935*^9, 3.711336417230321*^9, 3.711337659735607*^9, 
  3.711337907092003*^9, 3.711339283884063*^9, 3.711340711272538*^9, 
  3.7113542712381144`*^9, 3.711354374980651*^9, 3.711406135168613*^9, 
  3.711836847589942*^9, 3.7119282536509457`*^9, 3.711940649722855*^9, 
  3.7119407647253447`*^9, 3.712867518894792*^9, 3.713150238506419*^9, 
  3.717279514726647*^9, 3.733800920170836*^9, 3.740257992978429*^9, 
  3.7402657860855618`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"k1", ",", "k2"}], "}"}]], "Output",
 CellChangeTimes->{3.71116328777658*^9, 3.7112359130547237`*^9, 
  3.711312663770471*^9, 3.711314508644471*^9, 3.711318199110642*^9, 
  3.711319296481591*^9, 3.7113198754782553`*^9, 3.7113202931865063`*^9, 
  3.711321531331071*^9, 3.711322417549634*^9, 3.711334888508844*^9, 
  3.711334932460935*^9, 3.711336417230321*^9, 3.711337659735607*^9, 
  3.711337907092003*^9, 3.711339283884063*^9, 3.711340711272538*^9, 
  3.7113542712381144`*^9, 3.711354374980651*^9, 3.711406135168613*^9, 
  3.711836847589942*^9, 3.7119282536509457`*^9, 3.711940649722855*^9, 
  3.7119407647253447`*^9, 3.712867518894792*^9, 3.713150238506419*^9, 
  3.717279514726647*^9, 3.733800920170836*^9, 3.740257992978429*^9, 
  3.7402657860907087`*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.71116328777658*^9, 3.7112359130547237`*^9, 
  3.711312663770471*^9, 3.711314508644471*^9, 3.711318199110642*^9, 
  3.711319296481591*^9, 3.7113198754782553`*^9, 3.7113202931865063`*^9, 
  3.711321531331071*^9, 3.711322417549634*^9, 3.711334888508844*^9, 
  3.711334932460935*^9, 3.711336417230321*^9, 3.711337659735607*^9, 
  3.711337907092003*^9, 3.711339283884063*^9, 3.711340711272538*^9, 
  3.7113542712381144`*^9, 3.711354374980651*^9, 3.711406135168613*^9, 
  3.711836847589942*^9, 3.7119282536509457`*^9, 3.711940649722855*^9, 
  3.7119407647253447`*^9, 3.712867518894792*^9, 3.713150238506419*^9, 
  3.717279514726647*^9, 3.733800920170836*^9, 3.740257992978429*^9, 
  3.7402657860956573`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$Assumptions", "=", 
  RowBox[{"And", "[", 
   RowBox[{
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[Element]", "Reals"}], " ", "&"}], "/@", " ", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "k2", ",", "k3"}], "}"}]}], ")"}]}], ",", 
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", ">=", "0"}], " ", "&"}], "/@", " ", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "k2", ",", "k3"}], "}"}]}], ")"}]}], ",", " ", 
    RowBox[{"c", " ", "\[GreaterEqual]", " ", "0"}], ",", " ", 
    RowBox[{"m", " ", ">", "0"}], ",", " ", 
    RowBox[{"\[HBar]", ">", "0"}], ",", " ", 
    RowBox[{"L", " ", ">", " ", "0"}], ",", " ", 
    RowBox[{"\[Alpha]", " ", "\[Element]", " ", "Reals"}], ",", " ", 
    RowBox[{"\[Beta]", "\[Element]", " ", "Reals"}], ",", " ", 
    RowBox[{"xL", "\[Element]", "Reals"}], ",", " ", 
    RowBox[{"xR", "\[Element]", " ", "Reals"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.708919892603251*^9, 3.708920174911981*^9}, {
   3.70892032016796*^9, 3.70892041002037*^9}, {3.7112299806626863`*^9, 
   3.711229985221385*^9}, 3.7113141215452347`*^9, {3.711317485533557*^9, 
   3.7113175122428017`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"k1", "\[Element]", "Reals"}], "&&", 
  RowBox[{"k2", "\[Element]", "Reals"}], "&&", 
  RowBox[{"k3", "\[Element]", "Reals"}], "&&", 
  RowBox[{"k1", "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{"k2", "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{"k3", "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{"c", "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{"m", ">", "0"}], "&&", 
  RowBox[{"\[HBar]", ">", "0"}], "&&", 
  RowBox[{"L", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]", "\[Element]", "Reals"}], "&&", 
  RowBox[{"\[Beta]", "\[Element]", "Reals"}], "&&", 
  RowBox[{"xL", "\[Element]", "Reals"}], "&&", 
  RowBox[{"xR", "\[Element]", "Reals"}]}]], "Output",
 CellChangeTimes->{3.711318199161996*^9, 3.711319296530995*^9, 
  3.711319875545413*^9, 3.711320293238883*^9, 3.711321531374551*^9, 
  3.7113224176044197`*^9, 3.711334888566985*^9, 3.711334932521455*^9, 
  3.711336417283984*^9, 3.7113376597862787`*^9, 3.711337907146002*^9, 
  3.711339283946167*^9, 3.711340711318453*^9, 3.7113542712997503`*^9, 
  3.711354375045277*^9, 3.7114061352399817`*^9, 3.711836847641061*^9, 
  3.7119282537098618`*^9, 3.711930142211771*^9, 3.71194064977535*^9, 
  3.711940764771368*^9, 3.712867518955657*^9, 3.713150238570373*^9, 
  3.717279514790084*^9, 3.733800920229513*^9, 3.740257993022127*^9, 
  3.7402657861394997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"k1", "\[Element]", "Reals"}], "&&", 
  RowBox[{"k2", "\[Element]", "Reals"}], "&&", 
  RowBox[{"k3", "\[Element]", "Reals"}], "&&", 
  RowBox[{"k1", "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{"k2", "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{"k3", "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{"c", "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{"m", ">", "0"}], "&&", 
  RowBox[{"\[HBar]", ">", "0"}], "&&", 
  RowBox[{"L", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]", "\[Element]", "Reals"}], "&&", 
  RowBox[{"\[Beta]", "\[Element]", "Reals"}], "&&", 
  RowBox[{"xL", "\[Element]", "Reals"}], "&&", 
  RowBox[{"xR", "\[Element]", "Reals"}]}]], "Input",
 CellChangeTimes->{{3.711317485542685*^9, 3.711317512253484*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"k1", "\[Element]", "Reals"}], "&&", 
  RowBox[{"k2", "\[Element]", "Reals"}], "&&", 
  RowBox[{"k3", "\[Element]", "Reals"}], "&&", 
  RowBox[{"k1", "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{"k2", "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{"k3", "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{"c", "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{"m", ">", "0"}], "&&", 
  RowBox[{"\[HBar]", ">", "0"}], "&&", 
  RowBox[{"L", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]", "\[Element]", "Reals"}], "&&", 
  RowBox[{"\[Beta]", "\[Element]", "Reals"}], "&&", 
  RowBox[{"xL", "\[Element]", "Reals"}], "&&", 
  RowBox[{"xR", "\[Element]", "Reals"}]}]], "Output",
 CellChangeTimes->{3.711318199211828*^9, 3.711319296581622*^9, 
  3.7113198755961*^9, 3.711320293289749*^9, 3.71132153140876*^9, 
  3.711322417654965*^9, 3.711334888616447*^9, 3.711334932571205*^9, 
  3.711336417333864*^9, 3.711337659836306*^9, 3.711337907195695*^9, 
  3.7113392839965143`*^9, 3.711340711369287*^9, 3.711354271349723*^9, 
  3.7113543750951347`*^9, 3.711406135288494*^9, 3.711836847690824*^9, 
  3.711940649826236*^9, 3.71194076482095*^9, 3.712867519005207*^9, 
  3.713150238620112*^9, 3.717279514839188*^9, 3.7338009202795973`*^9, 
  3.740257993070958*^9, 3.74026578618909*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"DiracDelta", "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.697253369663207*^9, 3.6972533875335093`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Triangular", " ", "product"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.697254584745459*^9, 3.6972546006638727`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   OverscriptBox["\[CapitalPi]", "~"], "[", 
   RowBox[{
   "\[ScriptCapitalK]_", ",", " ", "n_", ",", " ", "X_", ",", " ", "l_", ",", 
    " ", "u_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   UnderoverscriptBox["\[Product]", 
    RowBox[{"j", "=", 
     RowBox[{"l", "+", "1"}]}], "u"], 
   RowBox[{
    UnderoverscriptBox["\[Product]", 
     RowBox[{"k", "=", "l"}], 
     RowBox[{"j", "-", "1"}]], 
    RowBox[{"\[ScriptCapitalK]", "[", 
     RowBox[{"n", ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
      RowBox[{"X", "[", 
       RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}]}]}], "\n", 
 RowBox[{
  OverscriptBox["\[CapitalPi]", "~"], "[", 
  RowBox[{
  "\[ScriptCapitalK]", ",", " ", "1", ",", "vars", ",", " ", "2", ",", " ", 
   "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.697254687711419*^9, 3.69725494396447*^9}, 
   3.697255029022757*^9, {3.697319468522605*^9, 3.697319490024987*^9}, {
   3.697320615220427*^9, 3.697320633148028*^9}, 3.70880768573946*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\({x1, \
x2}\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.708894577665327*^9, 3.70892046764826*^9, 
  3.7113126639387627`*^9, 3.71131450878503*^9, 3.711318199302442*^9, 
  3.711319296698429*^9, 3.71131987569516*^9, 3.711320293377922*^9, 
  3.711321531508359*^9, 3.71132241773776*^9, 3.711334888708033*^9, 
  3.711334932658119*^9, 3.7113364174301033`*^9, 3.711337659952258*^9, 
  3.711337907324265*^9, 3.711339284116075*^9, 3.711340711454022*^9, 
  3.711354271439328*^9, 3.711354375177176*^9, 3.711406135429173*^9, 
  3.711836847779964*^9, 3.711928253844396*^9, 3.711940649907284*^9, 
  3.711940764927368*^9, 3.712867519107359*^9, 3.7131502387256317`*^9, 
  3.717279514954033*^9, 3.733800920395051*^9, 3.740257993186667*^9, 
  3.740265786285252*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \[NoBreak]\\!\\({x1, \
x2}\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.708894577665327*^9, 3.70892046764826*^9, 
  3.7113126639387627`*^9, 3.71131450878503*^9, 3.711318199302442*^9, 
  3.711319296698429*^9, 3.71131987569516*^9, 3.711320293377922*^9, 
  3.711321531508359*^9, 3.71132241773776*^9, 3.711334888708033*^9, 
  3.711334932658119*^9, 3.7113364174301033`*^9, 3.711337659952258*^9, 
  3.711337907324265*^9, 3.711339284116075*^9, 3.711340711454022*^9, 
  3.711354271439328*^9, 3.711354375177176*^9, 3.711406135429173*^9, 
  3.711836847779964*^9, 3.711928253844396*^9, 3.711940649907284*^9, 
  3.711940764927368*^9, 3.712867519107359*^9, 3.7131502387256317`*^9, 
  3.717279514954033*^9, 3.733800920395051*^9, 3.740257993186667*^9, 
  3.740265786323689*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \[NoBreak]\\!\\({x1, \
x2}\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.708894577665327*^9, 3.70892046764826*^9, 
  3.7113126639387627`*^9, 3.71131450878503*^9, 3.711318199302442*^9, 
  3.711319296698429*^9, 3.71131987569516*^9, 3.711320293377922*^9, 
  3.711321531508359*^9, 3.71132241773776*^9, 3.711334888708033*^9, 
  3.711334932658119*^9, 3.7113364174301033`*^9, 3.711337659952258*^9, 
  3.711337907324265*^9, 3.711339284116075*^9, 3.711340711454022*^9, 
  3.711354271439328*^9, 3.711354375177176*^9, 3.711406135429173*^9, 
  3.711836847779964*^9, 3.711928253844396*^9, 3.711940649907284*^9, 
  3.711940764927368*^9, 3.712867519107359*^9, 3.7131502387256317`*^9, 
  3.717279514954033*^9, 3.733800920395051*^9, 3.740257993186667*^9, 
  3.740265786355432*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.708894577665327*^9, 3.70892046764826*^9, 
  3.7113126639387627`*^9, 3.71131450878503*^9, 3.711318199302442*^9, 
  3.711319296698429*^9, 3.71131987569516*^9, 3.711320293377922*^9, 
  3.711321531508359*^9, 3.71132241773776*^9, 3.711334888708033*^9, 
  3.711334932658119*^9, 3.7113364174301033`*^9, 3.711337659952258*^9, 
  3.711337907324265*^9, 3.711339284116075*^9, 3.711340711454022*^9, 
  3.711354271439328*^9, 3.711354375177176*^9, 3.711406135429173*^9, 
  3.711836847779964*^9, 3.711928253844396*^9, 3.711940649907284*^9, 
  3.711940764927368*^9, 3.712867519107359*^9, 3.7131502387256317`*^9, 
  3.717279514954033*^9, 3.733800920395051*^9, 3.740257993186667*^9, 
  3.740265786360867*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalK]", "[", 
   RowBox[{"1", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "x2"}], "}"}], "\[LeftDoubleBracket]", "3", 
     "\[RightDoubleBracket]"}], ",", "x2"}], "]"}], " ", 
  RowBox[{"\[ScriptCapitalK]", "[", 
   RowBox[{"1", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "x2"}], "}"}], "\[LeftDoubleBracket]", "4", 
     "\[RightDoubleBracket]"}], ",", "x2"}], "]"}], " ", 
  RowBox[{"\[ScriptCapitalK]", "[", 
   RowBox[{"1", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "x2"}], "}"}], "\[LeftDoubleBracket]", "4", 
     "\[RightDoubleBracket]"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "x2"}], "}"}], "\[LeftDoubleBracket]", "3", 
     "\[RightDoubleBracket]"}]}], "]"}], " ", 
  RowBox[{"\[ScriptCapitalK]", "[", 
   RowBox[{"1", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "x2"}], "}"}], "\[LeftDoubleBracket]", "5", 
     "\[RightDoubleBracket]"}], ",", "x2"}], "]"}], " ", 
  RowBox[{"\[ScriptCapitalK]", "[", 
   RowBox[{"1", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "x2"}], "}"}], "\[LeftDoubleBracket]", "5", 
     "\[RightDoubleBracket]"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "x2"}], "}"}], "\[LeftDoubleBracket]", "3", 
     "\[RightDoubleBracket]"}]}], "]"}], " ", 
  RowBox[{"\[ScriptCapitalK]", "[", 
   RowBox[{"1", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "x2"}], "}"}], "\[LeftDoubleBracket]", "5", 
     "\[RightDoubleBracket]"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "x2"}], "}"}], "\[LeftDoubleBracket]", "4", 
     "\[RightDoubleBracket]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.7088945777520943`*^9, 3.708920467722643*^9, 
  3.711312664067965*^9, 3.711314508887621*^9, 3.711318199389143*^9, 
  3.711319296792933*^9, 3.711319875807057*^9, 3.711320293494836*^9, 
  3.711321531597725*^9, 3.711322417832938*^9, 3.7113348888129873`*^9, 
  3.711334932778285*^9, 3.7113364175256367`*^9, 3.711337660077548*^9, 
  3.7113379074690933`*^9, 3.7113392842391233`*^9, 3.7113407115472727`*^9, 
  3.711354271527534*^9, 3.711354375272789*^9, 3.711406135562971*^9, 
  3.711836847914529*^9, 3.711928253956088*^9, 3.7119406500026283`*^9, 
  3.7119407650155773`*^9, 3.7128675192134867`*^9, 3.7131502388352127`*^9, 
  3.7172795150636387`*^9, 3.73380092047338*^9, 3.7402579932930717`*^9, 
  3.740265786366255*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Full Hamiltonian", "Section",
 CellChangeTimes->{{3.697251774663054*^9, 3.697251783222096*^9}}],

Cell[CellGroupData[{

Cell["Kinetic term", "Subsubsection",
 CellChangeTimes->{{3.6972534515084953`*^9, 3.6972534530597267`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"kineticTerm", "[", 
   RowBox[{"\[Psi]_", ",", " ", "X_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "N", "}"}], ",", " ", 
    RowBox[{
     RowBox[{"N", "=", 
      RowBox[{"Length", "[", "X", "]"}]}], ";", " ", 
     RowBox[{
      FractionBox[
       RowBox[{"-", 
        SuperscriptBox["\[HBar]", "2"]}], 
       RowBox[{"2", "m"}]], 
      RowBox[{"(", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"j", "=", "1"}], "N"], 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Psi]", "@@", "X"}], ",", " ", 
            RowBox[{"X", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"X", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ")"}]}]}]}], " ", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"kineticTerm", "[", 
  RowBox[{"f", ",", " ", "vars"}], "]"}]}], "Input",
 CellChangeTimes->{{3.688446207610955*^9, 3.6884462680750217`*^9}, {
   3.68844630613251*^9, 3.6884463148360577`*^9}, {3.688692011101755*^9, 
   3.688692097998178*^9}, {3.688692206557953*^9, 3.688692238491321*^9}, {
   3.6886922969054537`*^9, 3.688692337200348*^9}, {3.688692475783525*^9, 
   3.6886924792962914`*^9}, {3.688692619542172*^9, 3.688692620077167*^9}, {
   3.688694363439391*^9, 3.688694409853982*^9}, 3.688694461452093*^9, {
   3.688694702411622*^9, 3.68869473524115*^9}, {3.6886948152132807`*^9, 
   3.6886948350800667`*^9}, 3.688694900975346*^9, {3.688694933943626*^9, 
   3.688694936063478*^9}, {3.688695179476405*^9, 3.6886951841969423`*^9}, {
   3.688695219092146*^9, 3.688695288657476*^9}, {3.688695368099494*^9, 
   3.688695415369766*^9}, {3.6886954816314497`*^9, 3.688695493513048*^9}, {
   3.688695864774076*^9, 3.6886958682768383`*^9}, {3.688695926883524*^9, 
   3.688695928003703*^9}, {3.688779834311411*^9, 3.688779836524404*^9}, {
   3.697252455314069*^9, 3.697252471919814*^9}, {3.697252504557439*^9, 
   3.69725251352709*^9}, {3.697252648270494*^9, 3.6972526758461447`*^9}, {
   3.697252711383031*^9, 3.697252778253093*^9}, {3.697252815260599*^9, 
   3.697252864379818*^9}, {3.697252930459085*^9, 3.697252932738186*^9}, {
   3.6972529677082243`*^9, 3.6972529963860693`*^9}, 3.69725303646763*^9, {
   3.697253145578862*^9, 3.6972531997271833`*^9}, {3.697253438438985*^9, 
   3.697253438958075*^9}, {3.699670953499021*^9, 3.699670953796851*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[HBar]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x1", ",", "x2"}], "]"}], "+", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"2", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x1", ",", "x2"}], "]"}]}], ")"}]}], 
   RowBox[{"2", " ", "m"}]]}]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVz2koA3AcxvFJVt7JljTzwgtHU14gR4i/cmwhLbzygjlbwgupudIUc2VJ
hMg5R6bYwixHDKOYSQ3bHFkaf8LcOfL7vXj6vHhefX1EZcICJwaDEQG7CzKl
v7RSsqnpzUeDLmVilKfmP76CbFZc6hso1QpK38HknCkFej/G0aBun8VX7DZK
ulbu7lFdU6yrB9i7UxfIBePN0Y3eoI3JuemQUxKnZL2j0rPnMjnI7DI5pocp
cR8PZ8+DB4n1YWrwLOB79Rj0rFFemsGihIwqC1jfulxrBRXtsd2oTdI2igrf
rMHn+OdEzvqPQIdcIgwF9TLnPJ2CkmjVAH8LXJp58NgBt/s5Q6igpdqOdqbN
cfXgqaxiEZVeRPntgs4hXjEGUGTti0cXfIJ/UP5eQ88huCEuX0CTXmUiI9i8
4WAfgbkch+oEjHq6XUcL81+YDtA29pepm6BEub/28QQeZBGXD7BGP8xCz3n2
Hu0UJYMlltGEaUqyi/Kufecp+RS5fU8aKak08E6/rJRM/qVM/IL/HN8EpA==

  "]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interaction term", "Subsubsection",
 CellChangeTimes->{{3.6972534615399237`*^9, 3.697253464187688*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"interTerm", "[", 
   RowBox[{"\[Psi]_", ",", " ", "X_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"N", ",", " ", "y"}], "}"}], ",", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"N", "=", 
       RowBox[{"Length", "[", "X", "]"}]}], ";", "  ", 
      RowBox[{"2", " ", "c", "*", 
       RowBox[{"\[Psi]", "@@", "X"}], "*", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"j", "=", "1"}], "N"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"i", "=", 
           RowBox[{"j", "+", "1"}]}], "N"], 
         RowBox[{"\[Delta]", "[", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "-", 
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}]}]}], "  ", ")"}]}], 
   "]"}]}], "\n", 
 RowBox[{"interTerm", "[", 
  RowBox[{"f", ",", " ", "vars"}], "]"}]}], "Input",
 CellChangeTimes->{{3.697253217462484*^9, 3.6972532465438213`*^9}, 
   3.697253308674965*^9, {3.6972533549761868`*^9, 3.69725336098287*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "c", " ", 
  RowBox[{"DiracDelta", "[", 
   RowBox[{"x1", "-", "x2"}], "]"}], " ", 
  RowBox[{"f", "[", 
   RowBox[{"x1", ",", "x2"}], "]"}]}]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVzVsow2EcxvG/wix3jGY2RWY0V4jI5F1RLEsLUQ61RVk5ZpK2GmU55nBB
SYy1g11QIzJLFsKNU5KFOebQOzlstjDl9148fW6e+sZKmyS1ARRFZcCY1REd
7gGMQmSsbqK8SvTmAVmW3KIv0P8havSCYpPZQDxXRK8Rs6brbxmDGLXxXC7i
B4XokeANpeazwYWoHA0HZEo5j8MjGNmjmV7ig9rdNAJWcB2f5lmMxgSZDAuo
dHalL4N1Cv/GKTiatHhzAcYPlXZegsUZNtUVqJnMHSeqrUM6ol57neIEX1uy
FnhzGMUlKiVp4BY/SLZtwEiXPVOwA86Wv0XugqHpbC2xhKd6JjY+Wdh74K1e
sUrM7xUk7IMPDrbgELS1TwmJhXupfmKMvGfiCBTTWleI8r5+6THYXOlhnIBj
y+6lc/LX4E1i248n+BM8E1Bl20aMtA123zt49yMM8oHZNbpwot/6MrE+D/1A
py7PjJGLVnvPtWAkpIf9mo4xOmhIdnxfYSQaFRv/wH+x6Paf
  "]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["External potential", "Subsubsection",
 CellChangeTimes->{{3.69725347762761*^9, 3.697253497259348*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "The", " ", "hard", " ", "walls", " ", "will", " ", "be", " ", "accounted", 
   " ", "for", " ", "in", " ", "the", " ", "boundary", " ", "conditions"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.697254184918622*^9, 3.697254201196207*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"barrierTerm", "[", 
   RowBox[{"\[Psi]_", ",", " ", "X_", ",", " ", "xa_", ",", "xb_"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "N", "}"}], ",", " ", 
    RowBox[{
     RowBox[{"N", "=", 
      RowBox[{"Length", "[", "X", "]"}]}], ";", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Alpha]", 
         RowBox[{"(", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"j", "=", "1"}], "N"], 
           RowBox[{"\[Delta]", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "-", " ", "xa"}], "]"}]}], 
          ")"}]}], "+", " ", 
        RowBox[{"\[Beta]", 
         RowBox[{"(", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"j", "=", "1"}], "N"], 
           RowBox[{"\[Delta]", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "-", " ", "xb"}], "]"}]}], 
          ")"}]}]}], ")"}], 
      RowBox[{"\[Psi]", "@@", "X"}]}]}]}], " ", "]"}]}], "\n", 
 RowBox[{"barrierTerm", "[", 
  RowBox[{"f", ",", " ", "vars", ",", " ", "xL"}], "]"}]}], "Input",
 CellChangeTimes->{{3.697253518322669*^9, 3.697253703147756*^9}, 
   3.697253742381938*^9, {3.699670741388842*^9, 3.6996707648093348`*^9}, 
   3.711317485563685*^9}],

Cell[BoxData[
 RowBox[{"barrierTerm", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}], ",", "xL"}], "]"}]], "Output",
 CellChangeTimes->{3.711318199557764*^9, 3.711319296943385*^9, 
  3.711319875989726*^9, 3.71132029366922*^9, 3.711321531753471*^9, 
  3.7113224179737263`*^9, 3.711334888952015*^9, 3.7113349329399652`*^9, 
  3.711336417695282*^9, 3.711337660232244*^9, 3.711337907715508*^9, 
  3.7113392843807697`*^9, 3.7113407116860113`*^9, 3.711354271695619*^9, 
  3.7113543754115143`*^9, 3.711406135735216*^9, 3.711836848058694*^9, 
  3.711928254106736*^9, 3.71194065014336*^9, 3.711940765156255*^9, 
  3.7128675193673887`*^9, 3.713150239000279*^9, 3.717279515234495*^9, 
  3.7338009206252604`*^9, 3.740257993449472*^9, 3.740265786517065*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"barrierTerm", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}], ",", "xL"}], "]"}]], "Input",
 CellChangeTimes->{{3.7113174855757113`*^9, 3.7113174855837603`*^9}}],

Cell[BoxData[
 RowBox[{"barrierTerm", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}], ",", "xL"}], "]"}]], "Output",
 CellChangeTimes->{3.71131819959615*^9, 3.711319296967701*^9, 
  3.711319876043655*^9, 3.711320293724339*^9, 3.71132153179088*^9, 
  3.711322418021174*^9, 3.7113348890007057`*^9, 3.71133493298834*^9, 
  3.711336417735091*^9, 3.711337660258325*^9, 3.71133790776346*^9, 
  3.711339284429432*^9, 3.7113407117358723`*^9, 3.711354271749345*^9, 
  3.7113543754603977`*^9, 3.711406135863183*^9, 3.7118368481070633`*^9, 
  3.711928254133243*^9, 3.7119406501912603`*^9, 3.711940765205769*^9, 
  3.712867519394106*^9, 3.713150239029078*^9, 3.717279515273595*^9, 
  3.733800920649624*^9, 3.740257993473505*^9, 3.740265786540925*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"barrierTerm", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}], ",", "xL", ",", " ", "xR"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.699670780731735*^9, 3.699670796100767*^9}, {
  3.71131748559866*^9, 3.711317512265635*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x1", "-", "xL"}], "]"}], "+", 
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x2", "-", "xL"}], "]"}]}], ")"}]}], "+", 
    RowBox[{"\[Beta]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x1", "-", "xR"}], "]"}], "+", 
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x2", "-", "xR"}], "]"}]}], ")"}]}]}], ")"}], " ", 
  RowBox[{"f", "[", 
   RowBox[{"x1", ",", "x2"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7113181996446447`*^9, 3.711319297013315*^9, 
  3.711319876093711*^9, 3.711320293773676*^9, 3.711321531843301*^9, 
  3.711322418071155*^9, 3.7113348890501537`*^9, 3.711334933038106*^9, 
  3.7113364177844133`*^9, 3.711337660301422*^9, 3.71133790781222*^9, 
  3.7113392844803743`*^9, 3.71134071178677*^9, 3.711354271800152*^9, 
  3.711354375510749*^9, 3.711406135922798*^9, 3.711836848157257*^9, 
  3.711928254177291*^9, 3.711940650241321*^9, 3.711940765255025*^9, 
  3.712867519437945*^9, 3.713150239070929*^9, 3.717279515322877*^9, 
  3.733800920695197*^9, 3.7402579935209217`*^9, 3.740265786588997*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x1", "-", "xL"}], "]"}], "+", 
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x2", "-", "xL"}], "]"}]}], ")"}]}], "+", 
    RowBox[{"\[Beta]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x1", "-", "xR"}], "]"}], "+", 
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x2", "-", "xR"}], "]"}]}], ")"}]}]}], ")"}], " ", 
  RowBox[{"f", "[", 
   RowBox[{"x1", ",", "x2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.71131748561098*^9, 3.711317512283738*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x1", "-", "xL"}], "]"}], "+", 
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x2", "-", "xL"}], "]"}]}], ")"}]}], "+", 
    RowBox[{"\[Beta]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x1", "-", "xR"}], "]"}], "+", 
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x2", "-", "xR"}], "]"}]}], ")"}]}]}], ")"}], " ", 
  RowBox[{"f", "[", 
   RowBox[{"x1", ",", "x2"}], "]"}]}]], "Output",
 CellChangeTimes->{3.711318199694458*^9, 3.711319297065596*^9, 
  3.711319876144115*^9, 3.711320293822945*^9, 3.7113215320815487`*^9, 
  3.711322418121448*^9, 3.7113348891006727`*^9, 3.711334933088848*^9, 
  3.711336417833425*^9, 3.71133766035184*^9, 3.711337907862513*^9, 
  3.711339284530058*^9, 3.71134071183582*^9, 3.7113542718488083`*^9, 
  3.711354375562551*^9, 3.711406135971888*^9, 3.7118368482078533`*^9, 
  3.711928254227125*^9, 3.711940650292482*^9, 3.711940765304929*^9, 
  3.712867519488483*^9, 3.713150239120413*^9, 3.717279515373817*^9, 
  3.733800920746726*^9, 3.740257993784059*^9, 3.7402657866388063`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Hamiltonian", "Subsubsection",
 CellChangeTimes->{{3.697253819577471*^9, 3.6972538272320757`*^9}, {
  3.697253901109179*^9, 3.697253905271057*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalH]", "[", 
   RowBox[{"\[Psi]_", ",", " ", "X_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"kineticTerm", "[", 
    RowBox[{"\[Psi]", ",", " ", "X"}], "]"}], " ", "+", " ", 
   RowBox[{"interTerm", "[", 
    RowBox[{"\[Psi]", ",", " ", "X"}], "]"}], " ", "+", " ", 
   RowBox[{"barrierTerm", "[", 
    RowBox[{"\[Psi]", ",", " ", "X", ",", " ", "xa", ",", "xb"}], 
    "]"}]}]}], "\n", 
 RowBox[{"\[ScriptCapitalH]", "[", 
  RowBox[{"f", ",", " ", "vars"}], "]"}]}], "Input",
 CellChangeTimes->{{3.697253907830344*^9, 3.697254000422414*^9}, 
   3.697254031889782*^9, {3.69732358352551*^9, 3.697323585876507*^9}, {
   3.699670845435698*^9, 3.6996708462438927`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "c", " ", 
   RowBox[{"DiracDelta", "[", 
    RowBox[{"x1", "-", "x2"}], "]"}], " ", 
   RowBox[{"f", "[", 
    RowBox[{"x1", ",", "x2"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"DiracDelta", "[", 
         RowBox[{"x1", "-", "xa"}], "]"}], "+", 
        RowBox[{"DiracDelta", "[", 
         RowBox[{"x2", "-", "xa"}], "]"}]}], ")"}]}], "+", 
     RowBox[{"\[Beta]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"DiracDelta", "[", 
         RowBox[{"x1", "-", "xb"}], "]"}], "+", 
        RowBox[{"DiracDelta", "[", 
         RowBox[{"x2", "-", "xb"}], "]"}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"f", "[", 
    RowBox[{"x1", ",", "x2"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[HBar]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x1", ",", "x2"}], "]"}], "+", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"2", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x1", ",", "x2"}], "]"}]}], ")"}]}], 
   RowBox[{"2", " ", "m"}]]}]], "Output",
 CellChangeTimes->{
  3.697256314435025*^9, 3.697257066090931*^9, 3.697259378437642*^9, 
   3.697259829416198*^9, 3.697259976938368*^9, 3.697321739385209*^9, 
   3.6973218314964867`*^9, 3.6973235868458443`*^9, 3.697324106146991*^9, 
   3.6973366681172323`*^9, 3.697339442056192*^9, {3.699670817686749*^9, 
   3.699670847766377*^9}, 3.6996709608354883`*^9, 3.6996719357587023`*^9, 
   3.708639126906166*^9, 3.7086537299376574`*^9, 3.708658100208169*^9, 
   3.708724728039337*^9, 3.708739333620826*^9, 3.708740562821991*^9, 
   3.708742638030505*^9, 3.708742834167322*^9, 3.708742940578146*^9, 
   3.708744087137559*^9, 3.7088945779438753`*^9, 3.708920468029964*^9, 
   3.711312664327692*^9, 3.711314509142911*^9, 3.7113181997444572`*^9, 
   3.711319297115715*^9, 3.711319876267391*^9, 3.7113202938725147`*^9, 
   3.711321532125341*^9, 3.711322418172537*^9, 3.711334889149809*^9, 
   3.711334933139173*^9, 3.7113364178843603`*^9, 3.7113376604032927`*^9, 
   3.711337907912792*^9, 3.711339284608367*^9, 3.711340711886607*^9, 
   3.711354271900251*^9, 3.711354375610938*^9, 3.7114061360221157`*^9, 
   3.711836848257493*^9, 3.7119282543336287`*^9, 3.711940650343276*^9, 
   3.7119407653546343`*^9, 3.7128675195380573`*^9, 3.713150239344486*^9, 
   3.717279515482174*^9, 3.733800920796406*^9, 3.740257993820889*^9, 
   3.740265786689845*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["Define the wavefunction in all regions with ", "Section"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "L"], TraditionalForm]]],
 StyleBox[" particles in the left trap and ", "Section"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "R"], TraditionalForm]]],
 StyleBox[" particles in the right trap", "Section"]
}], "Subsection",
 CellChangeTimes->{{3.697255112018653*^9, 3.697255160209443*^9}, {
  3.699671224018524*^9, 3.699671280213695*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic wave function in the region ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["n", "L"], ",", " ", 
     SubscriptBox["n", "R"]}], ")"}], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{
  3.697322259155902*^9, {3.699671293278138*^9, 3.699671305088331*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], 
   RowBox[{"SignaturePermutation", "[", 
    RowBox[{"Q", "[", 
     RowBox[{"[", "np", "]"}], "]"}], "]"}]], "*)"}]], "Input",
 CellChangeTimes->{{3.699671766197247*^9, 3.699671768816649*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Chi]", "[", 
   RowBox[{"nL_", ",", " ", "nR_", ",", "x__"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Q", ",", " ", "K", ",", " ", "Nx", ",", " ", "Ep"}], "}"}], ",",
     " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Nx", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}], ";", " ", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Symbol", "[", 
          RowBox[{"\"\<k\>\"", "<>", 
           RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", " ", "Nx"}], "]"}]}]}], ";", 
      RowBox[{"Q", " ", "=", " ", 
       RowBox[{"Permutations", "[", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", " ", "Nx"}], "]"}], "]"}]}], ";", 
      RowBox[{"Ep", " ", "=", " ", 
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", "Nx"}], "]"}]}], ";", " ", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"ne", "=", "1"}], 
        RowBox[{
         RowBox[{"Dimensions", "[", "Ep", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"np", "=", "1"}], 
         RowBox[{
          RowBox[{"Dimensions", "[", "Q", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]], 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\"\<\[ScriptCapitalA]\>\"", ",", " ", 
            RowBox[{"ToString", "[", "nL", "]"}], ",", 
            RowBox[{"ToString", "[", "nR", "]"}]}], "]"}], "[", 
          RowBox[{"ToString", "[", 
           RowBox[{
            RowBox[{"Ep", "[", 
             RowBox[{"[", "ne", "]"}], "]"}], 
            RowBox[{"K", "[", 
             RowBox[{"[", 
              RowBox[{"Q", "[", 
               RowBox[{"[", "np", "]"}], "]"}], "]"}], "]"}]}], "]"}], "]"}], 
         
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"j", "=", "1"}], "Nx"], 
            RowBox[{
             RowBox[{
              RowBox[{"Ep", "[", 
               RowBox[{"[", "ne", "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], 
             RowBox[{"K", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Q", "[", 
                 RowBox[{"[", "np", "]"}], "]"}], "[", 
                RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], 
             RowBox[{
              RowBox[{"{", "x", "}"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}]}]}]}], "]"}]}]}]}]}], ")"}]}], 
   "]"}]}], "\n", 
 RowBox[{"Dimensions", "[", 
  RowBox[{"\[Chi]", "@@", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"nL", ",", "nR", ",", "vars"}], "}"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Chi]", "@@", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{"nL", ",", " ", "nR", ",", "vars"}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6972556840011387`*^9, 3.697255726812092*^9}, {
   3.6972557666043777`*^9, 3.6972557689155283`*^9}, 3.697255818156826*^9, {
   3.6972559882926083`*^9, 3.6972560102763042`*^9}, {3.697256101411339*^9, 
   3.697256108922205*^9}, 3.697256306027842*^9, {3.6972565517823687`*^9, 
   3.697256610567793*^9}, 3.697256816237612*^9, {3.697256858442421*^9, 
   3.697256863897403*^9}, {3.697257301157317*^9, 3.69725731673286*^9}, {
   3.697257955498351*^9, 3.69725797624769*^9}, {3.697258019358444*^9, 
   3.697258255414681*^9}, 3.6972583150605087`*^9, {3.6972583466310463`*^9, 
   3.697258523729823*^9}, {3.697258580217329*^9, 3.697258716930624*^9}, {
   3.697259008414143*^9, 3.6972591117105494`*^9}, 3.6972591441650343`*^9, {
   3.697259191902421*^9, 3.6972592002206573`*^9}, {3.697259234988282*^9, 
   3.697259284652226*^9}, {3.6972594393073883`*^9, 3.697259469898205*^9}, 
   3.697259609050995*^9, {3.697259718640821*^9, 3.6972597243842287`*^9}, {
   3.699671345720675*^9, 3.6996713757738953`*^9}, {3.699671467830615*^9, 
   3.6996714719423847`*^9}, {3.699671562421036*^9, 3.699671595563365*^9}, {
   3.699671679756782*^9, 3.699671752349429*^9}, {3.708658072991288*^9, 
   3.708658081872127*^9}}],

Cell[BoxData[
 RowBox[{"{", "8", "}"}]], "Output",
 CellChangeTimes->{
  3.699671689221202*^9, 3.6996717268601913`*^9, 3.6996717716275673`*^9, 
   3.6996719358214893`*^9, 3.708639126954892*^9, 3.708653729984147*^9, {
   3.7086580830205584`*^9, 3.70865810025403*^9}, 3.708724728085*^9, 
   3.708739333672641*^9, 3.708740562873807*^9, 3.708742638081655*^9, 
   3.7087428342030287`*^9, 3.708742940631404*^9, 3.708744087188587*^9, 
   3.7088945780051813`*^9, 3.708920468069706*^9, 3.7113126644109373`*^9, 
   3.711314509185322*^9, 3.711318199828555*^9, 3.7113192971924133`*^9, 
   3.711319876340106*^9, 3.711320293942939*^9, 3.711321532167218*^9, 
   3.7113224182292013`*^9, 3.711334889202931*^9, 3.711334933200348*^9, 
   3.7113364179625683`*^9, 3.711337660481565*^9, 3.711337907992713*^9, 
   3.711339284649575*^9, 3.711340711938263*^9, 3.711354271979282*^9, 
   3.711354375663018*^9, 3.711406136102099*^9, 3.711836848334672*^9, 
   3.7119282544108257`*^9, 3.711940650393614*^9, 3.711940765405775*^9, 
   3.71286751966763*^9, 3.713150239422062*^9, 3.717279515551944*^9, 
   3.733800920874646*^9, 3.74025799389946*^9, 3.74026578677258*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k1"}], " ", "x1"}], "-", 
       RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
    "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k1"}], " ", "x1"}], "+", 
       RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
    "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k1", " ", "x1"}], "-", 
       RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
    "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k1", " ", "x1"}], "+", 
       RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
    "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k2"}], " ", "x1"}], "-", 
       RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
    "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k2"}], " ", "x1"}], "+", 
       RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
    "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k2", " ", "x1"}], "-", 
       RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
    "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k2", " ", "x1"}], "+", 
       RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
    "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.699671689221202*^9, 3.6996717268601913`*^9, 3.6996717716275673`*^9, 
   3.6996719358214893`*^9, 3.708639126954892*^9, 3.708653729984147*^9, {
   3.7086580830205584`*^9, 3.70865810025403*^9}, 3.708724728085*^9, 
   3.708739333672641*^9, 3.708740562873807*^9, 3.708742638081655*^9, 
   3.7087428342030287`*^9, 3.708742940631404*^9, 3.708744087188587*^9, 
   3.7088945780051813`*^9, 3.708920468069706*^9, 3.7113126644109373`*^9, 
   3.711314509185322*^9, 3.711318199828555*^9, 3.7113192971924133`*^9, 
   3.711319876340106*^9, 3.711320293942939*^9, 3.711321532167218*^9, 
   3.7113224182292013`*^9, 3.711334889202931*^9, 3.711334933200348*^9, 
   3.7113364179625683`*^9, 3.711337660481565*^9, 3.711337907992713*^9, 
   3.711339284649575*^9, 3.711340711938263*^9, 3.711354271979282*^9, 
   3.711354375663018*^9, 3.711406136102099*^9, 3.711836848334672*^9, 
   3.7119282544108257`*^9, 3.711940650393614*^9, 3.711940765405775*^9, 
   3.71286751966763*^9, 3.713150239422062*^9, 3.717279515551944*^9, 
   3.733800920874646*^9, 3.74025799389946*^9, 3.740265786780332*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Generate", " ", "the", " ", "list", " ", "of", " ", "all", " ", 
    "possible", " ", "coefficients"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"generateCoefList", "[", "X_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "K", ",", " ", "Nx", ",", " ", "Ep", ",", " ", "PP", ",", " ", "nL", 
        ",", " ", "nR", ",", " ", "curP"}], "}"}], ",", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Nx", " ", "=", " ", 
         RowBox[{"Length", "[", "X", "]"}]}], ";", " ", 
        RowBox[{"K", " ", "=", " ", 
         RowBox[{"Permutations", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Symbol", "[", 
             RowBox[{"\"\<k\>\"", "<>", 
              RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", " ", "Nx"}], "]"}]}], "]"}]}], ";", 
        RowBox[{"Ep", " ", "=", " ", 
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", "Nx"}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"PP", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Outer", "[", 
            RowBox[{"Times", ",", " ", "K", ",", " ", "Ep", ",", " ", "1"}], 
            "]"}], ",", "1"}], "]"}]}], ";", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"curP", "=", "#"}], ";", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"nL", "=", "#"}], ";", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nR", " ", "=", " ", "#"}], ";", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\"\<\[ScriptCapitalA]\>\"", ",", " ", 
                    RowBox[{"ToString", "[", "nL", "]"}], ",", 
                    RowBox[{"ToString", "[", "nR", "]"}]}], "]"}], "[", " ", 
                    RowBox[{"ToString", "[", "curP", "]"}], "]"}]}], ")"}], 
                   "&"}], "/@", 
                  RowBox[{"Range", "[", 
                   RowBox[{"0", ",", " ", 
                    RowBox[{"Nx", "-", "nL"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", "Nx"}], "]"}]}]}], ")"}], "&"}], "/@", 
          " ", "PP"}], "]"}]}], ")"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"generateCoefList", "[", "vars", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "20"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.708724364006914*^9, 3.7087244459970303`*^9}, {
   3.708724495203497*^9, 3.7087245689227858`*^9}, {3.7087246358750267`*^9, 
   3.708724695675219*^9}, {3.70872477084132*^9, 3.708724793043049*^9}, {
   3.7087248342244883`*^9, 3.708724841775782*^9}, {3.708725100231617*^9, 
   3.7087251020606937`*^9}, {3.708741527151861*^9, 3.708741757445553*^9}, 
   3.708741808293298*^9, {3.708743234141501*^9, 3.708743239140525*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", "]"}],
    ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, k2}\"\>", "]"}],
    ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k1, k2}\"\>", "]"}],
    ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", "]"}],
    ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, k2}\"\>", "]"}],
    ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", "]"}],
    ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
    "]"}], ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
    "]"}], ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
    "]"}], ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
    "]"}], ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
    "]"}], ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
    "]"}], ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
    "]"}], ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
    "]"}], ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
    "]"}], ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
    "]"}], ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
    "]"}], ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
    "]"}], ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
    "]"}], ",", 
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
    "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.708741679249444*^9, 3.70874170525091*^9}, {
   3.708741736166409*^9, 3.7087417602576523`*^9}, 3.708741809843069*^9, 
   3.7087426381468277`*^9, 3.708742834250931*^9, 3.708742940695167*^9, 
   3.708743239423211*^9, 3.7087440872361727`*^9, 3.708894578058473*^9, 
   3.708920468124824*^9, 3.7113126645959044`*^9, 3.7113145092296257`*^9, 
   3.7113181999135647`*^9, 3.711319297276024*^9, 3.7113198763931713`*^9, 
   3.7113202939920683`*^9, 3.711321532214727*^9, 3.711322418288219*^9, 
   3.7113348892799797`*^9, 3.711334933239525*^9, 3.711336418029871*^9, 
   3.7113376605557756`*^9, 3.711337908046043*^9, 3.711339284716682*^9, 
   3.711340711989374*^9, 3.7113542720561132`*^9, 3.711354375752286*^9, 
   3.711406136184696*^9, 3.711836848393936*^9, 3.7119282544607697`*^9, 
   3.711940650465554*^9, 3.7119407654722633`*^9, 3.712867519721739*^9, 
   3.713150239470601*^9, 3.717279515605772*^9, 3.733800921106184*^9, 
   3.7402579939557943`*^9, 3.740265786899571*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Generate", " ", "the", " ", "list", " ", "of", " ", "all", " ", 
    "possible", " ", "plain", " ", "waves"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"generatePlainWaveList", "[", "X_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "K", ",", " ", "Nx", ",", " ", "Ep", ",", " ", "PP", ",", " ", "nL", 
        ",", " ", "nR", ",", " ", "curP"}], "}"}], ",", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Nx", " ", "=", " ", 
         RowBox[{"Length", "[", "X", "]"}]}], ";", " ", 
        RowBox[{"K", " ", "=", " ", 
         RowBox[{"Permutations", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Symbol", "[", 
             RowBox[{"\"\<k\>\"", "<>", 
              RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", " ", "Nx"}], "]"}]}], "]"}]}], ";", 
        RowBox[{"Ep", " ", "=", " ", 
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", "Nx"}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"PP", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Outer", "[", 
            RowBox[{"Times", ",", " ", "K", ",", " ", "Ep", ",", " ", "1"}], 
            "]"}], ",", "1"}], "]"}]}], ";", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"j", "=", "1"}], "Nx"], 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], 
                RowBox[{"X", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}]}]}], "]"}], ")"}], "&"}], "/@",
           " ", "PP"}], "]"}]}], ")"}]}], "]"}]}], "\n", 
   RowBox[{"generatePlainWaveList", "[", 
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7089132665000753`*^9, 3.7089134628027363`*^9}, {
  3.708913523304799*^9, 3.708913585227433*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k1", " ", "x1"}], "+", 
       RowBox[{"k2", " ", "x2"}], "+", 
       RowBox[{"k3", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k1", " ", "x1"}], "+", 
       RowBox[{"k2", " ", "x2"}], "-", 
       RowBox[{"k3", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k1", " ", "x1"}], "-", 
       RowBox[{"k2", " ", "x2"}], "+", 
       RowBox[{"k3", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k1", " ", "x1"}], "-", 
       RowBox[{"k2", " ", "x2"}], "-", 
       RowBox[{"k3", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k1"}], " ", "x1"}], "+", 
       RowBox[{"k2", " ", "x2"}], "+", 
       RowBox[{"k3", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k1"}], " ", "x1"}], "+", 
       RowBox[{"k2", " ", "x2"}], "-", 
       RowBox[{"k3", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k1"}], " ", "x1"}], "-", 
       RowBox[{"k2", " ", "x2"}], "+", 
       RowBox[{"k3", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k1"}], " ", "x1"}], "-", 
       RowBox[{"k2", " ", "x2"}], "-", 
       RowBox[{"k3", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k1", " ", "x1"}], "+", 
       RowBox[{"k3", " ", "x2"}], "+", 
       RowBox[{"k2", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k1", " ", "x1"}], "+", 
       RowBox[{"k3", " ", "x2"}], "-", 
       RowBox[{"k2", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k1", " ", "x1"}], "-", 
       RowBox[{"k3", " ", "x2"}], "+", 
       RowBox[{"k2", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k1", " ", "x1"}], "-", 
       RowBox[{"k3", " ", "x2"}], "-", 
       RowBox[{"k2", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k1"}], " ", "x1"}], "+", 
       RowBox[{"k3", " ", "x2"}], "+", 
       RowBox[{"k2", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k1"}], " ", "x1"}], "+", 
       RowBox[{"k3", " ", "x2"}], "-", 
       RowBox[{"k2", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k1"}], " ", "x1"}], "-", 
       RowBox[{"k3", " ", "x2"}], "+", 
       RowBox[{"k2", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k1"}], " ", "x1"}], "-", 
       RowBox[{"k3", " ", "x2"}], "-", 
       RowBox[{"k2", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k2", " ", "x1"}], "+", 
       RowBox[{"k1", " ", "x2"}], "+", 
       RowBox[{"k3", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k2", " ", "x1"}], "+", 
       RowBox[{"k1", " ", "x2"}], "-", 
       RowBox[{"k3", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k2", " ", "x1"}], "-", 
       RowBox[{"k1", " ", "x2"}], "+", 
       RowBox[{"k3", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k2", " ", "x1"}], "-", 
       RowBox[{"k1", " ", "x2"}], "-", 
       RowBox[{"k3", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k2"}], " ", "x1"}], "+", 
       RowBox[{"k1", " ", "x2"}], "+", 
       RowBox[{"k3", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k2"}], " ", "x1"}], "+", 
       RowBox[{"k1", " ", "x2"}], "-", 
       RowBox[{"k3", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k2"}], " ", "x1"}], "-", 
       RowBox[{"k1", " ", "x2"}], "+", 
       RowBox[{"k3", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k2"}], " ", "x1"}], "-", 
       RowBox[{"k1", " ", "x2"}], "-", 
       RowBox[{"k3", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k2", " ", "x1"}], "+", 
       RowBox[{"k3", " ", "x2"}], "+", 
       RowBox[{"k1", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k2", " ", "x1"}], "+", 
       RowBox[{"k3", " ", "x2"}], "-", 
       RowBox[{"k1", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k2", " ", "x1"}], "-", 
       RowBox[{"k3", " ", "x2"}], "+", 
       RowBox[{"k1", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k2", " ", "x1"}], "-", 
       RowBox[{"k3", " ", "x2"}], "-", 
       RowBox[{"k1", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k2"}], " ", "x1"}], "+", 
       RowBox[{"k3", " ", "x2"}], "+", 
       RowBox[{"k1", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k2"}], " ", "x1"}], "+", 
       RowBox[{"k3", " ", "x2"}], "-", 
       RowBox[{"k1", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k2"}], " ", "x1"}], "-", 
       RowBox[{"k3", " ", "x2"}], "+", 
       RowBox[{"k1", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k2"}], " ", "x1"}], "-", 
       RowBox[{"k3", " ", "x2"}], "-", 
       RowBox[{"k1", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k3", " ", "x1"}], "+", 
       RowBox[{"k1", " ", "x2"}], "+", 
       RowBox[{"k2", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k3", " ", "x1"}], "+", 
       RowBox[{"k1", " ", "x2"}], "-", 
       RowBox[{"k2", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k3", " ", "x1"}], "-", 
       RowBox[{"k1", " ", "x2"}], "+", 
       RowBox[{"k2", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k3", " ", "x1"}], "-", 
       RowBox[{"k1", " ", "x2"}], "-", 
       RowBox[{"k2", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k3"}], " ", "x1"}], "+", 
       RowBox[{"k1", " ", "x2"}], "+", 
       RowBox[{"k2", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k3"}], " ", "x1"}], "+", 
       RowBox[{"k1", " ", "x2"}], "-", 
       RowBox[{"k2", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k3"}], " ", "x1"}], "-", 
       RowBox[{"k1", " ", "x2"}], "+", 
       RowBox[{"k2", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k3"}], " ", "x1"}], "-", 
       RowBox[{"k1", " ", "x2"}], "-", 
       RowBox[{"k2", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k3", " ", "x1"}], "+", 
       RowBox[{"k2", " ", "x2"}], "+", 
       RowBox[{"k1", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k3", " ", "x1"}], "+", 
       RowBox[{"k2", " ", "x2"}], "-", 
       RowBox[{"k1", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k3", " ", "x1"}], "-", 
       RowBox[{"k2", " ", "x2"}], "+", 
       RowBox[{"k1", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k3", " ", "x1"}], "-", 
       RowBox[{"k2", " ", "x2"}], "-", 
       RowBox[{"k1", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k3"}], " ", "x1"}], "+", 
       RowBox[{"k2", " ", "x2"}], "+", 
       RowBox[{"k1", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k3"}], " ", "x1"}], "+", 
       RowBox[{"k2", " ", "x2"}], "-", 
       RowBox[{"k1", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k3"}], " ", "x1"}], "-", 
       RowBox[{"k2", " ", "x2"}], "+", 
       RowBox[{"k1", " ", "x3"}]}], ")"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k3"}], " ", "x1"}], "-", 
       RowBox[{"k2", " ", "x2"}], "-", 
       RowBox[{"k1", " ", "x3"}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.708913541817823*^9, 3.70891358569841*^9}, 
   3.708920468223425*^9, 3.711312664644022*^9, 3.711314509276764*^9, 
   3.7113181999628763`*^9, 3.711319297315168*^9, 3.711319876444355*^9, 
   3.7113202940427*^9, 3.711321532287548*^9, 3.7113224183226843`*^9, 
   3.7113348893339148`*^9, 3.711334933287778*^9, 3.71133641805691*^9, 
   3.711337660602352*^9, 3.711337908096043*^9, 3.71133928476396*^9, 
   3.711340712059703*^9, 3.711354272099145*^9, 3.711354375796075*^9, 
   3.711406136239251*^9, 3.711836848443385*^9, 3.7119282545102587`*^9, 
   3.7119406504940863`*^9, 3.7119407655046577`*^9, 3.7128675197713327`*^9, 
   3.713150239521546*^9, 3.717279515656921*^9, 3.733800921144784*^9, 
   3.740257994005019*^9, 3.740265786952032*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"funcOne", "[", "y_", "]"}], ":=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.711339256349189*^9, 3.7113392656792803`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalPsi]", "[", "x__", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nL", ",", " ", "nR"}], "}"}], ",", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Product", "[", 
       RowBox[{
        RowBox[{"HeavisideTheta", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "x", "}"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], "-", 
          RowBox[{
           RowBox[{"{", "x", "}"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "2", ",", " ", 
          RowBox[{"Length", "[", 
           RowBox[{"{", "x", "}"}], "]"}]}], "}"}]}], "]"}], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"nL", "=", "0"}], 
        RowBox[{"Length", "[", 
         RowBox[{"{", "x", "}"}], "]"}]], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"nR", "=", "0"}], 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"{", "x", "}"}], "]"}], " ", "-", " ", "nL"}]], 
        RowBox[{
         RowBox[{"\[Chi]", "@@", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"nL", ",", " ", "nR", ",", " ", 
             RowBox[{"{", "x", "}"}]}], "}"}], "]"}]}], 
         RowBox[{"Product", "[", 
          RowBox[{
           RowBox[{"HeavisideTheta", "[", 
            RowBox[{"xL", "-", 
             RowBox[{
              RowBox[{"{", "x", "}"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "1", ",", " ", "nL"}], "}"}]}], "]"}], 
         RowBox[{"Product", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"HeavisideTheta", "[", 
             RowBox[{"xR", "-", 
              RowBox[{
               RowBox[{"{", "x", "}"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], 
            RowBox[{"HeavisideTheta", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "x", "}"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}], "-", "xL"}], "]"}]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{"nL", "+", "1"}], ",", " ", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"{", "x", "}"}], "]"}], "-", "nR"}]}], "}"}]}], "]"}], 
         
         RowBox[{"Product", "[", 
          RowBox[{
           RowBox[{"HeavisideTheta", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", "x", "}"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", "xR"}], "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"{", "x", "}"}], "]"}], "-", "nR", "+", "1"}], ",", 
             " ", 
             RowBox[{"Length", "[", 
              RowBox[{"{", "x", "}"}], "]"}]}], "}"}]}], "]"}]}]}]}]}], 
     ")"}]}], "]"}]}], "\n", 
 RowBox[{"\[CapitalPsi]", "@@", "vars"}]}], "Input",
 CellChangeTimes->{{3.708740815958498*^9, 3.7087409822046137`*^9}, {
   3.711317065161417*^9, 3.711317071811818*^9}, {3.711317163226481*^9, 
   3.711317163846917*^9}, {3.7113173380069647`*^9, 3.7113173957416058`*^9}, 
   3.711317485638554*^9, {3.711317554990337*^9, 3.711317603891633*^9}, {
   3.711317723331875*^9, 3.7113177494023647`*^9}, {3.711318059641755*^9, 
   3.71131812500025*^9}, {3.711319173654586*^9, 3.711319208316104*^9}, {
   3.71131925300499*^9, 3.711319276671307*^9}, {3.711320276242386*^9, 
   3.711320288316104*^9}, {3.711322404149397*^9, 3.7113224130137587`*^9}, {
   3.7113392739384537`*^9, 3.7113392781709957`*^9}, {3.711340703047985*^9, 
   3.711340706619708*^9}, {3.7113542566162024`*^9, 3.711354266196484*^9}, {
   3.7113543675028133`*^9, 3.711354370222567*^9}, 3.71183682316057*^9, {
   3.711940638115799*^9, 3.7119406433779373`*^9}, {3.711940743697502*^9, 
   3.71194075828055*^9}, {3.711941152853734*^9, 3.7119411546750526`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HeavisideTheta", "[", 
   RowBox[{
    RowBox[{"-", "x1"}], "+", "x2"}], "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"x1", "-", "xL"}], "]"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"x2", "-", "xL"}], "]"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", "x1"}], "+", "xR"}], "]"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", "x2"}], "+", "xR"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k1"}], " ", "x1"}], "-", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>",
          "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k1"}], " ", "x1"}], "+", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k1", " ", "x1"}], "-", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k1", " ", "x1"}], "+", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k2"}], " ", "x1"}], "-", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, -k1}\"\>",
          "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k2"}], " ", "x1"}], "+", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k2", " ", "x1"}], "-", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k2", " ", "x1"}], "+", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
         "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"x1", "-", "xL"}], "]"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"x2", "-", "xR"}], "]"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", "x1"}], "+", "xR"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k1"}], " ", "x1"}], "-", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, -k2}\"\>",
          "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k1"}], " ", "x1"}], "+", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k1", " ", "x1"}], "-", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k1", " ", "x1"}], "+", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k2"}], " ", "x1"}], "-", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, -k1}\"\>",
          "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k2"}], " ", "x1"}], "+", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k2", " ", "x1"}], "-", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k2", " ", "x1"}], "+", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
         "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"x1", "-", "xR"}], "]"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"x2", "-", "xR"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k1"}], " ", "x1"}], "-", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k1, -k2}\"\>",
          "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k1"}], " ", "x1"}], "+", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k1", " ", "x1"}], "-", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k1", " ", "x1"}], "+", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k2"}], " ", "x1"}], "-", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k2, -k1}\"\>",
          "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k2"}], " ", "x1"}], "+", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k2", " ", "x1"}], "-", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k2", " ", "x1"}], "+", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
         "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"x2", "-", "xL"}], "]"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", "x1"}], "+", "xL"}], "]"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", "x2"}], "+", "xR"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k1"}], " ", "x1"}], "-", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>",
          "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k1"}], " ", "x1"}], "+", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k1", " ", "x1"}], "-", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k1", " ", "x1"}], "+", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k2"}], " ", "x1"}], "-", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, -k1}\"\>",
          "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k2"}], " ", "x1"}], "+", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k2", " ", "x1"}], "-", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k2", " ", "x1"}], "+", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
         "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", "x1"}], "+", "xL"}], "]"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"x2", "-", "xR"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k1"}], " ", "x1"}], "-", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, -k2}\"\>",
          "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k1"}], " ", "x1"}], "+", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k1", " ", "x1"}], "-", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k1", " ", "x1"}], "+", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k2"}], " ", "x1"}], "-", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, -k1}\"\>",
          "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k2"}], " ", "x1"}], "+", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k2", " ", "x1"}], "-", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k2", " ", "x1"}], "+", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
         "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", "x1"}], "+", "xL"}], "]"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", "x2"}], "+", "xL"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k1"}], " ", "x1"}], "-", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>",
          "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k1"}], " ", "x1"}], "+", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k1", " ", "x1"}], "-", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k1", " ", "x1"}], "+", 
            RowBox[{"k2", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k2"}], " ", "x1"}], "-", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, -k1}\"\>",
          "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k2"}], " ", "x1"}], "+", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k2", " ", "x1"}], "-", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
         "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k2", " ", "x1"}], "+", 
            RowBox[{"k1", " ", "x2"}]}], ")"}]}]], " ", 
        RowBox[{
         SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
          RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
         "]"}]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.708740993745763*^9, 3.708742638237001*^9, 3.708742834304832*^9, 
   3.708742940782263*^9, 3.7087440872987003`*^9, 3.7088945781181517`*^9, 
   3.708920468271587*^9, 3.7113126647077293`*^9, 3.711314509337513*^9, 
   3.711318135963296*^9, 3.711318200016*^9, 3.711319215238015*^9, {
   3.711319277978224*^9, 3.711319297363072*^9}, 3.711319876493451*^9, 
   3.711320294090727*^9, 3.711321532327318*^9, 3.711322418371039*^9, 
   3.71133488938291*^9, 3.711334933338088*^9, 3.7113364181001997`*^9, 
   3.7113376606521463`*^9, 3.7113379081457644`*^9, 3.711339284858625*^9, 
   3.7113407121310387`*^9, 3.7113542721626377`*^9, 3.711354375858144*^9, 
   3.711406136318389*^9, 3.7118368485202436`*^9, 3.711928254594637*^9, 
   3.71194065058777*^9, 3.7119407655610027`*^9, 3.711941156518093*^9, 
   3.712867519855225*^9, 3.713150239593974*^9, 3.717279515736088*^9, 
   3.733800921224924*^9, 3.740257994067953*^9, 3.740265787037917*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two-particle scattering", "Subsection",
 CellChangeTimes->{{3.6996732488814*^9, 3.69967326559235*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "The", " ", "particles", " ", "can", " ", "scatter", " ", "if", " ", "they",
    " ", "are", " ", "in", " ", "the", " ", "same", " ", "trap", " ", "and", 
   " ", "if", " ", "there", " ", "are", " ", "more", " ", "than", " ", "2", 
   " ", "of", " ", "them", " ", 
   RowBox[{"there", "."}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.686523609245955*^9, 3.686523659238861*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Swap", " ", "momenta", " ", "at", " ", "specified", " ", "positions"}], 
  " ", "*)"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.686606517805423*^9, 3.686606529358328*^9}, 
   3.686607773140012*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"swapMom", "[", 
   RowBox[{"p_", ",", " ", "swapP_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"(", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{
            RowBox[{"swapP", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], "]"}], ",", 
        " ", 
        RowBox[{"p", "[", 
         RowBox[{"[", 
          RowBox[{"swapP", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", " ", 
        RowBox[{"p", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{"swapP", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ";;", 
           RowBox[{
            RowBox[{"swapP", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}], "]"}], "]"}], ",", 
        " ", 
        RowBox[{"p", "[", 
         RowBox[{"[", 
          RowBox[{"swapP", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", " ", 
        RowBox[{"p", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{"swapP", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ";;", 
           RowBox[{
            RowBox[{"Dimensions", "[", "p", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}], "}"}], "]"}], 
     ")"}]}], "]"}]}], "\n", 
 RowBox[{"swapMom", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", " ", "3"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.686527495591134*^9, 3.686527643365732*^9}, {
   3.6865372855615263`*^9, 3.686537327597704*^9}, {3.686537516212125*^9, 
   3.686537516435474*^9}, {3.6865375719638023`*^9, 3.6865375803177423`*^9}, {
   3.686537633019113*^9, 3.68653766809031*^9}, {3.6865377014659853`*^9, 
   3.686537717316646*^9}, {3.686537830757044*^9, 3.686537910692052*^9}, {
   3.686538108657426*^9, 3.686538304547083*^9}, {3.68653839579463*^9, 
   3.686538402821528*^9}, 3.686538547962834*^9, {3.686538698583787*^9, 
   3.686538703889677*^9}, 3.686540107692732*^9, 3.686607793141659*^9, {
   3.708639142033841*^9, 3.708639154799827*^9}, {3.7087275423482847`*^9, 
   3.708727544171433*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.7086391270344133`*^9, 3.708639155568665*^9}, 
   3.7086537300666637`*^9, 3.708658100337131*^9, 3.708724728201668*^9, 
   3.708727545406507*^9, 3.7087393338005943`*^9, 3.7087405630005302`*^9, 
   3.708742638308488*^9, 3.708742834362904*^9, 3.708742940840687*^9, 
   3.7087440873669043`*^9, 3.7088945781930027`*^9, 3.708920468374741*^9, 
   3.711312664770467*^9, 3.7113145093813543`*^9, 3.711318200074304*^9, 
   3.711319297428914*^9, 3.711319876564445*^9, 3.711320294168647*^9, 
   3.711321532410943*^9, 3.711322418434289*^9, 3.711334889462949*^9, 
   3.711334933401265*^9, 3.711336418187624*^9, 3.7113376607382298`*^9, 
   3.7113379082331333`*^9, 3.711339284925755*^9, 3.711340712213944*^9, 
   3.711354272217127*^9, 3.711354375912282*^9, 3.71140613641015*^9, 
   3.711836848586835*^9, 3.711928254690619*^9, 3.7119406506444397`*^9, 
   3.7119407656355133`*^9, 3.712867519971656*^9, 3.713150239704013*^9, 
   3.717279515827331*^9, 3.7338009212916803`*^9, 3.74025799412633*^9, 
   3.7402657871180487`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Make", " ", "swap", " ", "rule", " ", "for", " ", "swapP", " ", "swap", 
    " ", "and", " ", "momenta", " ", "permutations", " ", "set", " ", 
    RowBox[{"relP", ".", " ", "Only"}], " ", "the", " ", "rules", " ", 
    "which", " ", "reduce", " ", "iversions", " ", "are", " ", "allowed"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"swapRule", "[", 
     RowBox[{"relP_", ",", " ", "swapP_", ",", " ", "nL_", ",", " ", "nR_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"K", ",", " ", "Ktemp"}], "}"}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"K", " ", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Symbol", "[", 
            RowBox[{"\"\<k\>\"", "<>", 
             RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], "/@", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"relP", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}]}], ";", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Ktemp", " ", "=", " ", 
              RowBox[{
               RowBox[{"Sign", "[", "#", "]"}], 
               RowBox[{"K", "[", 
                RowBox[{"[", 
                 RowBox[{"Abs", "[", "#", "]"}], "]"}], "]"}]}]}], ";", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Inversions", "[", 
                 RowBox[{"Abs", "[", "#", "]"}], "]"}], "<", 
                RowBox[{"Inversions", "[", 
                 RowBox[{"swapMom", "[", 
                  RowBox[{
                   RowBox[{"Abs", "[", "#", "]"}], ",", " ", "swapP"}], "]"}],
                  "]"}]}], ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\"\<\[ScriptCapitalA]\>\"", ",", " ", 
                    RowBox[{"ToString", "[", "nL", "]"}], ",", 
                    RowBox[{"ToString", "[", "nR", "]"}]}], "]"}], "[", " ", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"swapMom", "[", 
                    RowBox[{"Ktemp", ",", " ", "swapP"}], "]"}], "]"}], "]"}],
                  "\[Rule]", " ", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Ktemp", "[", 
                    RowBox[{"[", 
                    RowBox[{"swapP", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "-", 
                    RowBox[{"Ktemp", "[", 
                    RowBox[{"[", 
                    RowBox[{"swapP", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], " ", "+", 
                    " ", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    FractionBox[
                    RowBox[{"c", " ", "m"}], 
                    RowBox[{"\[HBar]", "^", "2"}]]}]}], ")"}], 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Ktemp", "[", 
                    RowBox[{"[", 
                    RowBox[{"swapP", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "-", 
                    RowBox[{"Ktemp", "[", 
                    RowBox[{"[", 
                    RowBox[{"swapP", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], " ", "-", 
                    " ", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    FractionBox[
                    RowBox[{"c", " ", "m"}], 
                    RowBox[{"\[HBar]", "^", "2"}]]}]}], ")"}]], "*", 
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\"\<\[ScriptCapitalA]\>\"", ",", " ", 
                    RowBox[{"ToString", "[", "nL", "]"}], ",", 
                    RowBox[{"ToString", "[", "nR", "]"}]}], "]"}], "[", " ", 
                   RowBox[{"ToString", "[", "Ktemp", "]"}], "]"}]}]}], ")"}], 
               ",", " ", 
               RowBox[{"(", "\[IndentingNewLine]", 
                RowBox[{"{", "}"}], ")"}]}], "]"}]}], ")"}], "&"}], "/@", 
          "relP"}], "]"}]}], ")"}]}], "]"}]}], "\n", 
   RowBox[{"swapRule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", " ", "3"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2", ",", " ", "3", ",", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", " ", "3", ",", " ", "0"}], 
    "]"}]}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.686606676988892*^9, 3.6866067216607924`*^9}, {
   3.686606768948429*^9, 3.68660679726755*^9}, {3.686606832723241*^9, 
   3.686606863618923*^9}, {3.686606905292048*^9, 3.6866070463810062`*^9}, {
   3.686607105710807*^9, 3.686607110474275*^9}, {3.686607186529294*^9, 
   3.686607216199807*^9}, {3.686607342770637*^9, 3.686607373010201*^9}, {
   3.686607466126362*^9, 3.686607486013359*^9}, 3.686607773142089*^9, 
   3.68660781694129*^9, {3.686607960776697*^9, 3.6866080043352613`*^9}, {
   3.6866106925892487`*^9, 3.686610722100024*^9}, {3.686610759204126*^9, 
   3.686610761307781*^9}, {3.708639200768055*^9, 3.7086392102820997`*^9}, {
   3.708639568292802*^9, 3.708639616667403*^9}, {3.708639667923587*^9, 
   3.7086396804905977`*^9}, {3.708639718546145*^9, 3.708639736908382*^9}, {
   3.7086398838254213`*^9, 3.708639885402367*^9}, 3.708727292494609*^9, {
   3.7087273230899754`*^9, 3.708727369048924*^9}, {3.708727439997706*^9, 
   3.708727479104349*^9}, {3.7087275745240107`*^9, 3.7087275791391687`*^9}, {
   3.7087276232463417`*^9, 3.708727624683292*^9}, {3.708728053447453*^9, 
   3.70872809902444*^9}, 3.7087281697711887`*^9, {3.7087282570214167`*^9, 
   3.7087283918196077`*^9}, {3.708728426651813*^9, 3.708728471340136*^9}, {
   3.708728644449593*^9, 3.708728648584687*^9}, 3.708728785573827*^9, {
   3.708729286844118*^9, 3.708729315857736*^9}, {3.708729365777486*^9, 
   3.70872945633037*^9}, {3.708729500623901*^9, 3.708729501647813*^9}, {
   3.708729595350116*^9, 3.708729596510663*^9}, {3.708729780525606*^9, 
   3.7087297936254787`*^9}, {3.708729957763452*^9, 3.708729981276156*^9}, {
   3.7087300136989822`*^9, 3.7087300178662024`*^9}, 3.708730098386615*^9, {
   3.708730224050309*^9, 3.708730287009503*^9}, {3.7087303533833447`*^9, 
   3.7087303649384527`*^9}, {3.7087391883767033`*^9, 3.708739227063941*^9}, 
   3.708739258303176*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
     RowBox[{"\<\"3\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k3, k2, k1}\"\>", 
    "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "k1"}], "+", "k3", "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"3\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2, k3}\"\>", 
      "]"}]}], 
    RowBox[{
     RowBox[{"-", "k1"}], "+", "k3", "-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
      SuperscriptBox["\[HBar]", "2"]]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7087303664118137`*^9, {3.7087392173936787`*^9, 3.708739228131878*^9}, 
   3.708739259316613*^9, 3.7087393338539667`*^9, 3.7087405630551434`*^9, 
   3.7087426383634977`*^9, 3.708742834388608*^9, 3.708742940868932*^9, 
   3.7087440874201117`*^9, 3.708894578242133*^9, 3.70892046842556*^9, 
   3.711312664811874*^9, 3.711314509580554*^9, 3.7113182001037083`*^9, 
   3.711319297456015*^9, 3.7113198765960417`*^9, 3.711320294207651*^9, 
   3.711321532459959*^9, 3.7113224184631443`*^9, 3.711334889517346*^9, 
   3.7113349334319572`*^9, 3.711336418234796*^9, 3.711337660787179*^9, 
   3.711337908280072*^9, 3.7113392849594517`*^9, 3.711340712269072*^9, 
   3.711354272265615*^9, 3.7113543759603233`*^9, 3.711406136455864*^9, 
   3.711836848620462*^9, 3.711928254718581*^9, 3.711940650691627*^9, 
   3.711940765693252*^9, 3.712867520021373*^9, 3.713150239753867*^9, 
   3.717279515872583*^9, 3.733800921317379*^9, 3.740257994170492*^9, 
   3.7402657871563377`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "make", " ", "subset", " ", "of", " ", "the", " ", "permutation", " ", 
     "set", " ", "P"}], ",", " ", 
    RowBox[{
    "where", " ", "elements", " ", "are", " ", "not", " ", "swapP", " ", 
     "swaps", " ", "of", " ", "each", " ", "other"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"swapAllMom", "[", 
     RowBox[{"P_", ",", " ", "swapP_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "tP", "}"}], ",", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"tP", " ", "=", " ", 
          RowBox[{"{", "}"}]}], ";", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"tP", ",", 
                 RowBox[{"swapMom", "[", 
                  RowBox[{"#", ",", " ", "swapP"}], "]"}]}], "]"}]}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"tP", "=", " ", 
                 RowBox[{"Append", "[", 
                  RowBox[{"tP", ",", " ", 
                   RowBox[{"Flatten", "[", "#", "]"}]}], "]"}]}], ";", "#"}], 
               ")"}], ",", " ", 
              RowBox[{"{", "}"}]}], "]"}], ")"}], " ", "&"}], "/@", " ", 
          "P"}]}], ")"}]}], "]"}], "/.", 
     RowBox[{
      RowBox[{"{", "}"}], "\[Rule]", 
      RowBox[{"Sequence", "[", "]"}]}]}]}], "\n", 
   RowBox[{"swapAllMom", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k1", ",", "k2", ",", "k3"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"k3", ",", " ", "k2", ",", " ", "k1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"k2", ",", " ", "k1", ",", " ", "k3"}], "}"}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.686606534145608*^9, 3.686606624341531*^9}, 
   3.6866077731401777`*^9, 3.708640041129499*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k1", ",", "k2", ",", "k3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k3", ",", "k2", ",", "k1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAGLe2WFpqxe+dixrcxHZBKTDFHrNtgDp+wc59l8B0s++
73lwG0iviEuuugOkrazP1t4F0uqvfKeBaFuzuYtBtAnve6N7QPpIle869UWv
HT9c7AsyAdKv+6WTjyx77ZiRttnzKJC+N59F/DiQTvikvwBET1ky5QWI/mZy
QuYEkE53mbAdRC/RCVA7CaQLFIxszwPpgzLrnUA0g7DnHxC98NSs6ReAdM60
rm0gekPRgqSLIHl9LtFLQFpHi2vLDSDNEslwEERv0BNg/wSkrSaJhh1Z/tpx
V+iN7x+A9Pvd4azfgbTB3O3CILoolGnG7pWvHV/t+rnYddVrx+JJtY9VN712
5Juj/XvFxdeO3oLuN3/eBZozJW35XyANABBTsrk=
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Generate", " ", "base", " ", "scattering", " ", "permutations", " ", 
    RowBox[{"(", 
     RowBox[{
     "the", " ", "ones", " ", "that", " ", "will", " ", "not", " ", "be", " ",
       "substituted"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"generateBaseScatter", "[", 
     RowBox[{"partDistr_", ",", " ", "wellNum_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "rN", ",", "N", ",", " ", "Sbase", ",", "  ", "Srest", ",", "Srest1", 
        ",", " ", "Sres2", ",", " ", "Prest", ",", " ", "Prest1", ",", 
        "Prest2", ",", " ", "Pbase", ",", " ", "moms"}], "}"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"N", "=", 
         RowBox[{"Total", "[", "partDistr", "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"rN", " ", "=", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", " ", "N"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"partDistr", "[", 
            RowBox[{"[", "wellNum", "]"}], "]"}], " ", ">", " ", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"Sbase", " ", "=", " ", 
             RowBox[{"Subsets", "[", 
              RowBox[{"rN", ",", " ", 
               RowBox[{"{", 
                RowBox[{"partDistr", "[", 
                 RowBox[{"[", "wellNum", "]"}], "]"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Pbase", " ", "=", " ", "Sbase"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Pbase", " ", "=", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Symbol", "[", 
                    RowBox[{"\"\<k\>\"", "<>", 
                    RowBox[{"ToString", "[", "#", "]"}]}], "]"}], ")"}], 
                    "&"}], "/@", " ", "#"}], ")"}], " ", "&"}], "/@", " ", 
                "Sbase"}]}], " ", ";"}], "*)"}], "\[IndentingNewLine]", " ", 
            RowBox[{"Srest", " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Complement", "[", 
                RowBox[{"rN", ",", " ", "#"}], "]"}], " ", "&"}], "/@", " ", 
              "Sbase"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Prest", " ", "=", " ", "Srest"}], ";", 
            "\[IndentingNewLine]", " ", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Prest", " ", "=", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Symbol", "[", 
                    RowBox[{"\"\<k\>\"", "<>", 
                    RowBox[{"ToString", "[", "#", "]"}]}], "]"}], ")"}], 
                    "&"}], "/@", " ", "#"}], ")"}], " ", "&"}], "/@", " ", 
                "Srest"}]}], " ", ";"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"Prest1", " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Permutations", "[", "#", "]"}], "&"}], "/@", 
              "Prest"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"wellNum", " ", "\[NotEqual]", " ", "2"}], ",", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"(", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"wellNum", " ", "\[Equal]", " ", "1"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(", "\[IndentingNewLine]", 
                  RowBox[{"moms", "=", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Join", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Pbase", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "}"}], ",", " ", 
                    RowBox[{"Prest1", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", " ", "1"}], "]"}], 
                    "&"}], "/@", " ", 
                    RowBox[{"Range", "[", 
                    RowBox[{"1", ",", " ", 
                    RowBox[{"Length", "[", "Pbase", "]"}]}], "]"}]}], ",", 
                    " ", "2"}], "]"}]}], "\[IndentingNewLine]", ")"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(", "\[IndentingNewLine]", 
                  RowBox[{"moms", " ", "=", " ", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Join", ",", " ", 
                    RowBox[{"Prest1", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Pbase", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "}"}], ",", " ", "1"}], 
                    "]"}], "&"}], "/@", " ", 
                    RowBox[{"Range", "[", 
                    RowBox[{"1", ",", " ", 
                    RowBox[{"Length", "[", "Pbase", "]"}]}], "]"}]}], ",", 
                    " ", "2"}], "]"}]}], "\[IndentingNewLine]", ")"}]}], 
                "]"}], "\[IndentingNewLine]", ")"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"(", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Prest2", " ", "=", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"partDistr", "[", 
                    RowBox[{"[", 
                    RowBox[{"wellNum", "-", "1"}], "]"}], "]"}], "+", " ", 
                    "1"}], " ", ";;", " ", 
                    RowBox[{"N", "-", 
                    RowBox[{"partDistr", "[", 
                    RowBox[{"[", "wellNum", "]"}], "]"}]}]}], "]"}], "]"}], 
                    ")"}], "&"}], "/@", " ", "#"}], ")"}], " ", "&"}], "/@", 
                  " ", "Prest1"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"Prest1", " ", "=", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", " ", ";;", " ", 
                    RowBox[{"partDistr", "[", 
                    RowBox[{"[", 
                    RowBox[{"wellNum", " ", "-", "1"}], "]"}], "]"}]}], "]"}],
                     "]"}], ")"}], "&"}], "/@", " ", "#"}], ")"}], " ", "&"}],
                   "/@", " ", "Prest1"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"moms", " ", "=", " ", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"Join", ",", " ", 
                    RowBox[{"Prest1", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Pbase", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "}"}], ",", " ", "1"}], 
                    "]"}], "&"}], "/@", " ", 
                    RowBox[{"Range", "[", 
                    RowBox[{"1", ",", " ", 
                    RowBox[{"Length", "[", "Pbase", "]"}]}], "]"}]}], ",", 
                   " ", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"moms", " ", "=", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"moms", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", " ", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Prest2", ",", " ", "1"}], "]"}], "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], "]"}], ")"}], " ", 
                   "&"}], "/@", " ", 
                  RowBox[{"Range", "[", 
                   RowBox[{"1", ",", " ", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "moms", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}]}], 
               "\[IndentingNewLine]", ")"}]}], "]"}]}], "\[IndentingNewLine]",
            ")"}]}], " ", "]"}]}], "\[IndentingNewLine]", ")"}]}], "]"}]}], 
   "\n", 
   RowBox[{
    RowBox[{"generateBaseScatter", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", " ", "3"}], "]"}], "[", 
    
    RowBox[{"[", 
     RowBox[{"1", ";;", "10"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7086423146114607`*^9, 3.7086423457092657`*^9}, {
   3.708642383516906*^9, 3.708642503331566*^9}, {3.708642582173778*^9, 
   3.708642585082529*^9}, {3.7086426209384813`*^9, 3.708642696339993*^9}, {
   3.708642729627775*^9, 3.708642777112418*^9}, {3.708642847000033*^9, 
   3.708642934862468*^9}, {3.708642975758511*^9, 3.70864300816616*^9}, {
   3.708643041533893*^9, 3.7086431111564198`*^9}, {3.708643143868042*^9, 
   3.7086431951793947`*^9}, {3.70864323464363*^9, 3.7086432376509333`*^9}, {
   3.708643291786232*^9, 3.708643321291391*^9}, {3.708643356019066*^9, 
   3.708643373289412*^9}, {3.708643779405015*^9, 3.708643849155761*^9}, {
   3.708643883316739*^9, 3.708643916954925*^9}, {3.708644030939267*^9, 
   3.708644106923922*^9}, {3.708644139345083*^9, 3.708644188311857*^9}, {
   3.708644281552534*^9, 3.708644282976089*^9}, {3.708644314638463*^9, 
   3.7086443609667463`*^9}, {3.7086444329901543`*^9, 3.708644486726042*^9}, {
   3.708644541109522*^9, 3.708644623426799*^9}, {3.708644684347068*^9, 
   3.708644723537655*^9}, {3.7086447558497*^9, 3.7086447675533524`*^9}, {
   3.708644851784239*^9, 3.7086448758974247`*^9}, {3.708644950167326*^9, 
   3.708645035518209*^9}, {3.708645110901907*^9, 3.708645141908798*^9}, {
   3.708653191863968*^9, 3.7086532018635798`*^9}, {3.708653270128154*^9, 
   3.70865332751812*^9}, {3.70865337491012*^9, 3.708653450131687*^9}, {
   3.708653525547414*^9, 3.708653528155163*^9}, {3.7086535604546223`*^9, 
   3.708653587314*^9}, {3.708653634474389*^9, 3.7086536658657837`*^9}, {
   3.7086537096738243`*^9, 3.708653748256241*^9}, {3.708653796016288*^9, 
   3.70865396221384*^9}, {3.7086540073886347`*^9, 3.7086541081805696`*^9}, 
   3.7086541415251513`*^9, {3.7086541740690603`*^9, 3.708654176684272*^9}, {
   3.708654247549412*^9, 3.708654279019848*^9}, 3.708654363553602*^9, {
   3.7086544021366253`*^9, 3.708654407224491*^9}, {3.7086544524479322`*^9, 
   3.708654574335413*^9}, {3.708654698622472*^9, 3.708654725253706*^9}, {
   3.708654773286652*^9, 3.70865495852247*^9}, {3.7086549964187393`*^9, 
   3.70865502702777*^9}, {3.708655067625209*^9, 3.7086552183835907`*^9}, 
   3.708655590581773*^9, {3.7086556507309628`*^9, 3.708655651075048*^9}, {
   3.7086557156266813`*^9, 3.708655756633379*^9}, {3.708655787714061*^9, 
   3.7086557886255217`*^9}, 3.708655820266889*^9, {3.708656174173316*^9, 
   3.7086562416340017`*^9}, {3.708656275147336*^9, 3.708656293218451*^9}, {
   3.708656372108119*^9, 3.708656380347077*^9}, {3.7086564434735727`*^9, 
   3.7086565705132113`*^9}, {3.708656732933948*^9, 3.708656788660935*^9}, {
   3.708725567113662*^9, 3.7087255684731007`*^9}, {3.7087264196889668`*^9, 
   3.708726421328047*^9}, {3.708727129938842*^9, 3.708727139641799*^9}, {
   3.7087271711771603`*^9, 3.708727225887272*^9}, {3.708727738922823*^9, 
   3.7087277573216743`*^9}, {3.708728109118354*^9, 3.708728113317734*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5", ",", "6", ",", "1", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "6", ",", "5", ",", "1", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "4", ",", "6", ",", "1", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "6", ",", "4", ",", "1", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6", ",", "4", ",", "5", ",", "1", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6", ",", "5", ",", "4", ",", "1", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "5", ",", "6", ",", "1", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "6", ",", "5", ",", "1", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "3", ",", "6", ",", "1", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6", ",", "3", ",", "1", ",", "2"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.708727146511842*^9, {3.708727190879101*^9, 3.708727226484421*^9}, {
   3.708727739957306*^9, 3.708727757807588*^9}, 3.708728113768704*^9, 
   3.708728677636249*^9, 3.708739333953959*^9, 3.70874056315377*^9, 
   3.708742638462213*^9, 3.7087428344836597`*^9, 3.7087429409617023`*^9, 
   3.708744087586025*^9, 3.708894578445684*^9, 3.708920468512425*^9, 
   3.7113126649111557`*^9, 3.7113145096445312`*^9, 3.711318200194117*^9, 
   3.711319297548419*^9, 3.7113198766949377`*^9, 3.7113202943062553`*^9, 
   3.711321532557173*^9, 3.711322418554678*^9, 3.7113348896174927`*^9, 
   3.7113349335215282`*^9, 3.71133641833453*^9, 3.7113376608866253`*^9, 
   3.711337908379036*^9, 3.711339285063006*^9, 3.711340712367938*^9, 
   3.7113542723659277`*^9, 3.711354376061657*^9, 3.711406136555962*^9, 
   3.711836848725235*^9, 3.711928254811112*^9, 3.7119406507930317`*^9, 
   3.71194076578753*^9, 3.712867520122181*^9, 3.713150239853265*^9, 
   3.7172795159731827`*^9, 3.733800921412549*^9, 3.7402579942710648`*^9, 
   3.740265787254952*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Generate", " ", "scattering", " ", "permutations", " ", "which", " ", 
    "will", " ", "have", " ", "to", " ", "applied", " ", "recursively"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"generateRecursiveScatter", "[", "partDistr_", "]"}], " ", ":=", 
    " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rN", ",", "N", ",", "P", ",", " ", "S"}], "}"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"N", "=", 
         RowBox[{"Total", "[", "partDistr", "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"rN", " ", "=", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", " ", "N"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"P", "=", " ", 
         RowBox[{"Permutations", "[", "rN", "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{";", "\[IndentingNewLine]", 
         RowBox[{"S", " ", "=", " ", 
          RowBox[{"Subsets", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              RowBox[{"partDistr", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"S", " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{"S", ",", " ", 
            RowBox[{"Subsets", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"partDistr", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", " ", 
                RowBox[{"N", "-", 
                 RowBox[{"partDistr", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}], ",", " ", 
              RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"S", " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{"S", ",", "  ", 
            RowBox[{"Subsets", "[", 
             RowBox[{
              RowBox[{"Range", "[", " ", 
               RowBox[{
                RowBox[{"N", "-", 
                 RowBox[{"partDistr", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "+", "1"}], ",", " ", "N"}],
                "]"}], ",", " ", 
              RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"swapAllMom", "[", 
            RowBox[{"P", ",", " ", "#"}], "]"}], "&"}], "/@", " ", "S"}]}], 
        "*)"}], "\[IndentingNewLine]", ")"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"generateRecursiveScatter", "[", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "10"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQvVNtl8rVha8dOz6fNATRXgfvm4JoLqscGxDdJfTH
B0RzRE8MANFuOQvCQPSJb+9iQbQQS3ISiJbsWw6mtY1bM0E0r/NEML3DxqYQ
RK81fFYGohuOv24D0Tc5H3aBaOsPkyaCaGHtE2DavCDr8jUgPev3jBsgmsnC
b/p1kPq2fDCd5B6wEkQfXbUGTKsUzdoNolPCF+0F0bqbaw6C6BK77KMgetfE
9l+3gbQ/8wueO0D6X3OwOIgu3C2nAKJNVt9QAdHnI60MQPSPg9vMQLRfNqc5
iD6ROMkGRP9aoWkHogFEYa5p
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "6", ",", "5"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "4", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "6", ",", "4"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "6", ",", "4", ",", "5"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "6", ",", "5", ",", "4"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "3", ",", "5", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "3", ",", "6", ",", "5"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "5", ",", "3", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "5", ",", "6", ",", "3"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.708739841969841*^9, {3.708740015709914*^9, 3.708740026689919*^9}, {
   3.708740073964135*^9, 3.708740081611373*^9}, 3.7087405632053547`*^9, 
   3.708742638513296*^9, 3.708742834550048*^9, 3.708742941012158*^9, 
   3.708744087737142*^9, 3.7088945784919786`*^9, 3.7089204685633507`*^9, 
   3.711312664960992*^9, 3.711314509694283*^9, 3.711318200245837*^9, 
   3.71131929759792*^9, 3.7113198767439613`*^9, 3.711320294356138*^9, 
   3.7113215325922117`*^9, 3.711322418605474*^9, 3.711334889667089*^9, 
   3.711334933572212*^9, 3.711336418383772*^9, 3.711337660936961*^9, 
   3.7113379084296017`*^9, 3.711339285113309*^9, 3.711340712419832*^9, 
   3.711354272416029*^9, 3.7113543761107483`*^9, 3.711406136605659*^9, 
   3.71183684877394*^9, 3.711928254860862*^9, 3.711940650842936*^9, 
   3.7119407658428392`*^9, 3.71286752017072*^9, 3.713150239903213*^9, 
   3.717279516022181*^9, 3.7338009214625387`*^9, 3.7402579943210783`*^9, 
   3.740265787306121*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"generateAdjSwaps", "[", 
   RowBox[{"from_", ",", " ", "to_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"#", ",", " ", 
      RowBox[{"#", "+", "1"}]}], "}"}], " ", "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"from", ",", " ", 
     RowBox[{"to", "-", "1"}]}], "]"}]}]}], "\n", 
 RowBox[{"generateAdjSwaps", "[", 
  RowBox[{"2", ",", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.708741490685124*^9, 3.7087414975855494`*^9}, {
  3.708743341443944*^9, 3.708743436043007*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.708743423658681*^9, 3.708743436464528*^9}, 
   3.708744087844911*^9, 3.708894578526656*^9, 3.7089204686123857`*^9, 
   3.711312665011423*^9, 3.711314509743135*^9, 3.71131820029445*^9, 
   3.7113192976494226`*^9, 3.711319876793839*^9, 3.711320294407086*^9, 
   3.711321532626202*^9, 3.711322418655423*^9, 3.7113348897177687`*^9, 
   3.711334933620846*^9, 3.7113364184346113`*^9, 3.711337660986248*^9, 
   3.7113379084788513`*^9, 3.711339285163189*^9, 3.711340712468913*^9, 
   3.711354272467461*^9, 3.7113543761623507`*^9, 3.7114061366562033`*^9, 
   3.711836848824766*^9, 3.7119282549116697`*^9, 3.711940650892268*^9, 
   3.71194076588914*^9, 3.7128675202226267`*^9, 3.7131502399532948`*^9, 
   3.717279516072714*^9, 3.7338009215134478`*^9, 3.7402579943719587`*^9, 
   3.740265787356172*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scattering in the left trap", "Subsubsection",
 CellChangeTimes->{{3.686523693363597*^9, 3.6865236998356247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Scattering", " ", "in", " ", "one", " ", "block"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"scatterLeftOneBlock", "[", 
     RowBox[{"X_", ",", " ", "nL_", ",", " ", "nR_"}], "]"}], " ", ":=", " ", 
    
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"S", ",", "P", ",", " ", "Ep", ",", " ", "PP"}], "}"}], ",", 
      " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nL", ">", "1"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"S", " ", "=", " ", 
           RowBox[{"generateAdjSwaps", "[", 
            RowBox[{"1", ",", " ", "nL"}], "]"}]}], ";", " ", 
          RowBox[{"P", "=", " ", 
           RowBox[{"generateRecursiveScatter", "[", 
            RowBox[{"{", 
             RowBox[{"nL", ",", " ", 
              RowBox[{
               RowBox[{"Length", "[", "X", "]"}], "-", "nR", "-", "nL"}], ",",
               " ", "nR"}], "}"}], "]"}]}], ";", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"generateBaseScatter", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"nL", ",", " ", 
                RowBox[{
                 RowBox[{"Length", "[", "X", "]"}], "-", "nR", "-", "nL"}], 
                ",", " ", "nR"}], "}"}], ",", " ", "1"}], "]"}], ";"}], 
           "*)"}], 
          RowBox[{"Ep", " ", "=", " ", 
           RowBox[{"Tuples", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", " ", 
             RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"PP", " ", "=", " ", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Outer", "[", 
              RowBox[{"Times", ",", " ", "P", ",", " ", "Ep", ",", " ", "1"}],
               "]"}], ",", "1"}], "]"}]}], ";", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"swapRule", "[", 
               RowBox[{"PP", ",", " ", "#", ",", " ", "nL", ",", " ", "nR"}], 
               "]"}], ")"}], "&"}], "/@", "S"}], "]"}]}], ")"}], ",", " ", 
        RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], "\n", 
   RowBox[{"scatterLeftOneBlock", "[", 
    RowBox[{"vars", ",", " ", 
     RowBox[{"Length", "[", "vars", "]"}], ",", " ", "0"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQLZXnKb+s/LVj0/oDiiBaInvLVRAdl6J5DUT/uOAx
dfXC144V8V6zQHRk+8f5IHpCI8cCEP1KTv0siP7UcQ5MF5g43AXR5zxSwXTP
nT6xNUB6nYGQAoje1voxEESv9asLA9G3WB0KQHTza/YyEF3BeHPuZiB9RqJ+
HogOvtVwGkQ7z/1wHkQ/frf3CoiuS3oOptOld7pdA9JV4ae8QHSeOmcGiF52
yRdMH5ic2nIdSIedKG8D0VY6MidBtJTqnfMg+vjaGZtuA+m0JXnbQfSnO6xO
d4B0W5AAmN4zYW8NiL70eUItiHY78v7FXSBtlGX5CkQDANuSuZA=
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k1"}], "+", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"-", "k1"}], "+", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k1"}], "-", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"-", "k1"}], "-", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{"k1", "+", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k1", "-", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
       "]"}]}], 
     RowBox[{"k1", "-", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7086404782186327`*^9, 3.70864051298241*^9, 3.708653730339408*^9, 
   3.708657364891491*^9, 3.708658100625198*^9, 3.708724728522581*^9, 
   3.7087272589248257`*^9, 3.70872768731067*^9, {3.708727872931786*^9, 
   3.708727899902541*^9}, {3.708728121083119*^9, 3.708728131899053*^9}, 
   3.708728179764613*^9, 3.708728684141738*^9, 3.7087287949022293`*^9, {
   3.708730406109819*^9, 3.7087304205291567`*^9}, {3.708730984930438*^9, 
   3.708731007344635*^9}, {3.7087389753994303`*^9, 3.708739003825527*^9}, 
   3.70873927273169*^9, 3.7087393340547523`*^9, 3.708740115830832*^9, 
   3.708740563402211*^9, 3.708740593642476*^9, 3.7087426386652308`*^9, 
   3.708742834602683*^9, 3.708742941084505*^9, 3.7087435326154737`*^9, 
   3.708744087886149*^9, 3.708894578576079*^9, 3.7089204686630297`*^9, 
   3.711312665061089*^9, 3.7113145097952337`*^9, 3.711318200344664*^9, 
   3.7113192976977882`*^9, 3.711319876844295*^9, 3.711320294456284*^9, 
   3.711321532676125*^9, 3.711322418703952*^9, 3.7113348897676487`*^9, 
   3.7113349336720467`*^9, 3.7113364184835033`*^9, 3.711337661035865*^9, 
   3.711337908529324*^9, 3.711339285213336*^9, 3.711340712519643*^9, 
   3.711354272516349*^9, 3.7113543762126513`*^9, 3.7114061367059507`*^9, 
   3.711836848874264*^9, 3.7119282549605618`*^9, 3.71194065094211*^9, 
   3.7119407659381638`*^9, 3.712867520272357*^9, 3.713150240003798*^9, 
   3.717279516123282*^9, 3.7338009215628767`*^9, 3.7402579944219313`*^9, 
   3.740265787438457*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"scatterLeft", "[", "vars_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nL", ",", " ", "nR"}], "}"}], ",", " ", 
    RowBox[{"(", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nL", " ", "=", " ", "#"}], ";", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"nR", " ", "=", " ", "#"}], ";", 
              RowBox[{"scatterLeftOneBlock", "[", 
               RowBox[{"vars", ",", " ", "nL", ",", " ", "nR"}], "]"}]}], 
             ")"}], "&"}], "/@", " ", 
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", " ", 
             RowBox[{
              RowBox[{"Length", "[", "vars", "]"}], "-", "nL"}]}], "]"}]}]}], 
         ")"}], "&"}], "/@", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", " ", 
         RowBox[{"Length", "[", "vars", "]"}]}], "]"}]}], "]"}], ")"}]}], 
   "]"}]}], "\n", 
 RowBox[{"scatterLeft", "[", "vars", "]"}]}], "Input",
 CellChangeTimes->{{3.70874223974641*^9, 3.708742267206896*^9}, {
   3.708742305991981*^9, 3.708742326761813*^9}, 3.7087424266159782`*^9, {
   3.708742481333397*^9, 3.7087424845918818`*^9}, {3.70874252744524*^9, 
   3.70874252776448*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k1"}], "+", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"-", "k1"}], "+", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k1"}], "-", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"-", "k1"}], "-", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{"k1", "+", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k1", "-", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
       "]"}]}], 
     RowBox[{"k1", "-", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}]}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQB+Kq6RyRdxe+drwRVZQMohUnr8oC0e3+0gUg2srkei2I
5roeMg1EF/gsWQyiTSom/wDRm778NboHpCsYQtapL3rtuOj8tCATIJ00QTn5
yLLXjifYdnseBdLn5vGIHwfSPp/NF4DosBlzXoBoHqMLMieAdJbu9O0gWsQw
Qu0kkJ6naWV7Hki7SW93AtFCioF/QLTfwUXTLwDprvZJ20B0X9aKpItAOs5b
WPQSkFbREtpyA0g/SuU4CKKtYiXYPwHpzxNkw44sf+0YEPTg+wcg7bknnvU7
kJaet18YRGu4c83YvfK1o+8exiWuq147Kk1tfay66bVj41Tj3ysuAv0n4H/z
593Xjoe2FCz/C6QB7ryrxg==
  "]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scattering in the right trap", "Subsubsection",
 CellChangeTimes->{{3.708744154354991*^9, 3.708744167906354*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Scattering", " ", "in", " ", "one", " ", "block"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"scatterRightOneBlock", "[", 
     RowBox[{"X_", ",", " ", "nL_", ",", " ", "nR_"}], "]"}], " ", ":=", " ", 
    
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"S", ",", "P", ",", " ", "Ep", ",", " ", "PP"}], "}"}], ",", 
      " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nR", ">", "1"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"S", " ", "=", " ", 
           RowBox[{"generateAdjSwaps", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "X", "]"}], "-", "nR", "+", "1"}], ",", 
             " ", 
             RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], ";", " ", 
          RowBox[{"P", "=", " ", 
           RowBox[{"generateRecursiveScatter", "[", 
            RowBox[{"{", 
             RowBox[{"nL", ",", " ", 
              RowBox[{
               RowBox[{"Length", "[", "X", "]"}], "-", "nR", "-", "nL"}], ",",
               " ", "nR"}], "}"}], "]"}]}], ";", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"generateBaseScatter", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"nL", ",", " ", 
                RowBox[{
                 RowBox[{"Length", "[", "X", "]"}], "-", "nR", "-", "nL"}], 
                ",", " ", "nR"}], "}"}], ",", " ", "1"}], "]"}], ";"}], 
           "*)"}], 
          RowBox[{"Ep", " ", "=", " ", 
           RowBox[{"Tuples", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", " ", 
             RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"PP", " ", "=", " ", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Outer", "[", 
              RowBox[{"Times", ",", " ", "P", ",", " ", "Ep", ",", " ", "1"}],
               "]"}], ",", "1"}], "]"}]}], ";", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"swapRule", "[", 
               RowBox[{"PP", ",", " ", "#", ",", " ", "nL", ",", " ", "nR"}], 
               "]"}], ")"}], "&"}], "/@", "S"}], "]"}]}], ")"}], ",", " ", 
        RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], "\n", 
   RowBox[{"scatterRightOneBlock", "[", 
    RowBox[{"vars", ",", " ", "0", ",", 
     RowBox[{"Length", "[", "vars", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.70874419755554*^9, 3.708744221636772*^9}, {
  3.708744251658085*^9, 3.7087442794452972`*^9}, {3.708744318010038*^9, 
  3.708744332585099*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k1"}], "+", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"-", "k1"}], "+", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k1"}], "-", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"-", "k1"}], "-", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{"k1", "+", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k1", "-", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
       "]"}]}], 
     RowBox[{"k1", "-", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7087443207527246`*^9, 3.708744333815419*^9}, 
   3.708894578660486*^9, 3.708920468797089*^9, 3.7113126651614513`*^9, 
   3.7113145098937674`*^9, 3.711318200445181*^9, 3.711319297797418*^9, 
   3.711319876943613*^9, 3.711320294556069*^9, 3.7113215327740583`*^9, 
   3.711322418804352*^9, 3.711334889868013*^9, 3.71133493377157*^9, 
   3.7113364185850763`*^9, 3.711337661136685*^9, 3.711337908629867*^9, 
   3.711339285312585*^9, 3.7113407126869507`*^9, 3.711354272617695*^9, 
   3.71135437631141*^9, 3.711406136859478*^9, 3.7118368489749727`*^9, 
   3.71192825506039*^9, 3.711940651042879*^9, 3.711940766037405*^9, 
   3.7128675203710003`*^9, 3.713150240103243*^9, 3.7172795162237577`*^9, 
   3.733800921662558*^9, 3.740257994525139*^9, 3.740265787573806*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"scatterRight", "[", "vars_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nL", ",", " ", "nR"}], "}"}], ",", " ", 
    RowBox[{"(", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nL", " ", "=", " ", "#"}], ";", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"nR", " ", "=", " ", "#"}], ";", 
              RowBox[{"scatterRightOneBlock", "[", 
               RowBox[{"vars", ",", " ", "nL", ",", " ", "nR"}], "]"}]}], 
             ")"}], "&"}], "/@", " ", 
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", " ", 
             RowBox[{
              RowBox[{"Length", "[", "vars", "]"}], "-", "nL"}]}], "]"}]}]}], 
         ")"}], "&"}], "/@", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", " ", 
         RowBox[{"Length", "[", "vars", "]"}]}], "]"}]}], "]"}], ")"}]}], 
   "]"}]}], "\n", 
 RowBox[{"scatterRight", "[", "vars", "]"}]}], "Input",
 CellChangeTimes->{{3.7087445496952868`*^9, 3.70874458703878*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k1"}], "+", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"-", "k1"}], "+", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k1"}], "-", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"-", "k1"}], "-", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{"k1", "+", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k1", "-", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
       "]"}]}], 
     RowBox[{"k1", "-", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.708744588718245*^9, 3.7088945787086143`*^9, 
  3.708920468879471*^9, 3.71131266521163*^9, 3.711314509944387*^9, 
  3.7113182004950953`*^9, 3.711319297849257*^9, 3.711319876994482*^9, 
  3.711320294606285*^9, 3.711321532826127*^9, 3.711322418855336*^9, 
  3.7113348899182377`*^9, 3.7113349338217688`*^9, 3.711336418633809*^9, 
  3.711337661185046*^9, 3.7113379087333927`*^9, 3.711339285363229*^9, 
  3.7113407127685013`*^9, 3.7113542726660213`*^9, 3.71135437636138*^9, 
  3.7114061369059763`*^9, 3.711836849024993*^9, 3.711928255111156*^9, 
  3.711940651092804*^9, 3.711940766089343*^9, 3.712867520421414*^9, 
  3.7131502401543493`*^9, 3.717279516274665*^9, 3.733800921712988*^9, 
  3.7402579946997128`*^9, 3.740265787621804*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scattering in the middle trap", "Subsubsection",
 CellChangeTimes->{{3.708744789084263*^9, 3.7087447937476063`*^9}, {
  3.708804264582912*^9, 3.708804289053368*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Scattering", " ", "in", " ", "one", " ", "block"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"scatterMiddleOneBlock", "[", 
     RowBox[{"X_", ",", " ", "nL_", ",", " ", "nR_"}], "]"}], " ", ":=", " ", 
    
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"S", ",", "P", ",", " ", "Ep", ",", " ", "PP"}], "}"}], ",", 
      " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "X", "]"}], " ", "-", " ", "nR", " ", "-", 
          " ", "nL"}], ">", "1"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"S", " ", "=", " ", 
           RowBox[{"generateAdjSwaps", "[", 
            RowBox[{
             RowBox[{"nL", "+", "1"}], ",", " ", 
             RowBox[{
              RowBox[{"Length", "[", "X", "]"}], "-", "nR"}]}], "]"}]}], ";", 
          " ", 
          RowBox[{"P", "=", " ", 
           RowBox[{"generateRecursiveScatter", "[", 
            RowBox[{"{", 
             RowBox[{"nL", ",", " ", 
              RowBox[{
               RowBox[{"Length", "[", "X", "]"}], "-", "nR", "-", "nL"}], ",",
               " ", "nR"}], "}"}], "]"}]}], ";", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"generateBaseScatter", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"nL", ",", " ", 
                RowBox[{
                 RowBox[{"Length", "[", "X", "]"}], "-", "nR", "-", "nL"}], 
                ",", " ", "nR"}], "}"}], ",", " ", "1"}], "]"}], ";"}], 
           "*)"}], 
          RowBox[{"Ep", " ", "=", " ", 
           RowBox[{"Tuples", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", " ", 
             RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"PP", " ", "=", " ", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Outer", "[", 
              RowBox[{"Times", ",", " ", "P", ",", " ", "Ep", ",", " ", "1"}],
               "]"}], ",", "1"}], "]"}]}], ";", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"swapRule", "[", 
               RowBox[{"PP", ",", " ", "#", ",", " ", "nL", ",", " ", "nR"}], 
               "]"}], ")"}], "&"}], "/@", "S"}], "]"}]}], ")"}], ",", " ", 
        RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], "\n", 
   RowBox[{"scatterMiddleOneBlock", "[", 
    RowBox[{"vars", ",", " ", "0", ",", "0"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.708804287266388*^9, 3.7088043299174843`*^9}, {
  3.708804372941312*^9, 3.708804451080605*^9}, {3.708804531395699*^9, 
  3.708804531899336*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k1"}], "+", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"-", "k1"}], "+", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k1"}], "-", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"-", "k1"}], "-", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{"k1", "+", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k1", "-", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
       "]"}]}], 
     RowBox[{"k1", "-", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.708804377517243*^9, 3.70880445142649*^9}, 
   3.7088045324320517`*^9, 3.708894578758746*^9, 3.7089204689297953`*^9, 
   3.711312665261135*^9, 3.711314509993754*^9, 3.711318200544303*^9, 
   3.711319297898251*^9, 3.711319877044022*^9, 3.711320294655447*^9, 
   3.711321532875123*^9, 3.711322418905651*^9, 3.711334889967017*^9, 
   3.711334933871743*^9, 3.71133641868407*^9, 3.711337661235865*^9, 
   3.711337908779533*^9, 3.711339285414151*^9, 3.711340712819108*^9, 
   3.711354272716498*^9, 3.711354376410483*^9, 3.711406136956663*^9, 
   3.711836849074808*^9, 3.711928255160138*^9, 3.7119406511428013`*^9, 
   3.71194076613901*^9, 3.7128675204721193`*^9, 3.713150240355485*^9, 
   3.717279516323572*^9, 3.7338009217633963`*^9, 3.740257994725362*^9, 
   3.740265787671063*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"scatterMiddle", "[", "vars_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nL", ",", " ", "nR"}], "}"}], ",", " ", 
    RowBox[{"(", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nL", " ", "=", " ", "#"}], ";", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"nR", " ", "=", " ", "#"}], ";", 
              RowBox[{"scatterMiddleOneBlock", "[", 
               RowBox[{"vars", ",", " ", "nL", ",", " ", "nR"}], "]"}]}], 
             ")"}], "&"}], "/@", " ", 
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", " ", 
             RowBox[{
              RowBox[{"Length", "[", "vars", "]"}], "-", "nL"}]}], "]"}]}]}], 
         ")"}], "&"}], "/@", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", " ", 
         RowBox[{"Length", "[", "vars", "]"}]}], "]"}]}], "]"}], ")"}]}], 
   "]"}]}], "\n", 
 RowBox[{"scatterMiddle", "[", "vars", "]"}]}], "Input",
 CellChangeTimes->{{3.7088045551471767`*^9, 3.7088046046104193`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k1"}], "+", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"-", "k1"}], "+", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k1"}], "-", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"-", "k1"}], "-", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k1", "+", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{"k1", "+", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k1", "-", "k2", "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
       "]"}]}], 
     RowBox[{"k1", "-", "k2", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "c", " ", "m"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.708804579693883*^9, 3.708804605784955*^9}, 
   3.708894578809453*^9, 3.7089204689800673`*^9, 3.711312665310905*^9, 
   3.711314510043605*^9, 3.711318200595509*^9, 3.711319297947466*^9, 
   3.71131987709433*^9, 3.711320294741013*^9, 3.711321533044279*^9, 
   3.711322418953919*^9, 3.711334890016932*^9, 3.7113349339218082`*^9, 
   3.711336418734026*^9, 3.711337661286235*^9, 3.711337908829205*^9, 
   3.711339285463469*^9, 3.711340712868772*^9, 3.711354272766966*^9, 
   3.711354376460339*^9, 3.711406137007098*^9, 3.711836849124744*^9, 
   3.711928255209815*^9, 3.711940651192881*^9, 3.7119407661881866`*^9, 
   3.712867520522586*^9, 3.7131502404049377`*^9, 3.717279516373274*^9, 
   3.733800921814942*^9, 3.740257994771964*^9, 3.740265787723607*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reflection", "Subsection",
 CellChangeTimes->{{3.7088051518124332`*^9, 3.708805154764003*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"If", " ", "the", " ", "leftmost", " ", 
     RowBox[{"(", "rightmost", ")"}], " ", "particle", " ", "which", " ", 
     "is", " ", "in", " ", "the", " ", "left", " ", 
     RowBox[{"(", "right", ")"}], " ", "trap", " ", "reflects", " ", "agains",
      " ", "the", " ", "left", " ", "wall"}], " ", "\[Rule]", " ", 
    RowBox[{"its", " ", "momentum", " ", "is", " ", "inversed"}]}], " ", 
   "*)"}], " "}]], "Input"],

Cell[CellGroupData[{

Cell["Left reflection", "Subsubsection",
 CellChangeTimes->{{3.708805168212348*^9, 3.708805175451742*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "General", " ", "condition", " ", "for", " ", "reflection", " ", "of", " ",
     "the", " ", 
    RowBox[{"pNum", "'"}], "s", " ", "particle", " ", "from", " ", "the", " ",
     "left", " ", 
    RowBox[{"wall", ".", " ", "Does"}], " ", "not", " ", "yet", " ", "check", 
    " ", "for", " ", "number", " ", "of", " ", "particles", " ", "in", " ", 
    "the", " ", "left", " ", 
    RowBox[{"well", ".", " ", "L"}], " ", "is", " ", "the", " ", "length", 
    " ", "of", " ", "the", " ", "whole", " ", "system", " ", "from", " ", 
    "one", " ", "wall", " ", "to", " ", "another"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"leftReflectionGen", "[", 
     RowBox[{
     "X_", ",", " ", "nL_", ",", " ", "nR_", ",", " ", "L_", ",", " ", 
      "pNum_"}], "]"}], " ", ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "Epp", ",", "P", ",", "Epm", ",", "PP", ",", "PM", ",", " ", "K"}], 
       "}"}], ",", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"P", "=", " ", 
         RowBox[{"Permutations", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Symbol", "[", 
             RowBox[{"\"\<k\>\"", "<>", 
              RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", " ", 
             RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Epp", " ", "=", " ", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", 
                   RowBox[{"pNum", "-", "1"}]}], "]"}], "]"}], ",", "1", ",", 
                " ", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"pNum", "+", "1"}], ";;", 
                   RowBox[{"Length", "[", "#", "]"}]}], "]"}], "]"}]}], "}"}],
               ",", " ", "1"}], "]"}], " ", "&"}], "/@", 
           RowBox[{"Tuples", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", " ", 
             RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", " ", 
        RowBox[{"Epm", " ", "=", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", 
                   RowBox[{"pNum", "-", "1"}]}], "]"}], "]"}], ",", 
                RowBox[{"-", "1"}], ",", " ", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"pNum", "+", "1"}], ";;", 
                   RowBox[{"Length", "[", "#", "]"}]}], "]"}], "]"}]}], "}"}],
               ",", " ", "1"}], "]"}], " ", "&"}], "/@", 
           RowBox[{"Tuples", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", " ", 
             RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Epp", " ", "=", " ", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", " ", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ";;", 
                    RowBox[{"Length", "[", "#", "]"}]}], "]"}], "]"}]}], 
                 "}"}], ",", " ", "1"}], "]"}], " ", "&"}], "/@", 
             RowBox[{"Tuples", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", " ", 
               RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"Epm", " ", "=", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", " ", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ";;", 
                    RowBox[{"Length", "[", "#", "]"}]}], "]"}], "]"}]}], 
                 "}"}], ",", " ", "1"}], "]"}], " ", "&"}], "/@", 
             RowBox[{"Tuples", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", " ", 
               RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], "]"}]}], ";"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"PP", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Outer", "[", 
            RowBox[{"Times", ",", " ", "P", ",", " ", "Epp", ",", " ", "1"}], 
            "]"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"PM", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Outer", "[", 
            RowBox[{"Times", ",", " ", "P", ",", " ", "Epm", ",", " ", "1"}], 
            "]"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"K", " ", "=", " ", 
             RowBox[{"PP", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], ";", 
            RowBox[{
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\"\<\[ScriptCapitalA]\>\"", ",", " ", 
                RowBox[{"ToString", "[", "nL", "]"}], ",", 
                RowBox[{"ToString", "[", "nR", "]"}]}], "]"}], "[", " ", 
              RowBox[{"ToString", "[", 
               RowBox[{"PM", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}], "\[Rule]", " ", 
             
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], " ", 
                 RowBox[{"K", "[", 
                  RowBox[{"[", "pNum", "]"}], "]"}], "L"}], "]"}]}], 
              RowBox[{"Product", "[", 
               RowBox[{
                FractionBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"K", "[", 
                    RowBox[{"[", "pNum", "]"}], "]"}], "2"], "-", 
                  SuperscriptBox[
                   RowBox[{"K", "[", 
                    RowBox[{"[", "l", "]"}], "]"}], "2"], " ", "+", " ", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"(", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "m"}], 
                    ")"}], 
                    SuperscriptBox["\[HBar]", "2"]], 
                   RowBox[{"K", "[", 
                    RowBox[{"[", "pNum", "]"}], "]"}]}], "-", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"c", " ", "m"}], ")"}], 
                    SuperscriptBox["\[HBar]", "2"]], ")"}], "2"]}], 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"K", "[", 
                    RowBox[{"[", "pNum", "]"}], "]"}], "2"], "-", 
                  SuperscriptBox[
                   RowBox[{"K", "[", 
                    RowBox[{"[", "l", "]"}], "]"}], "2"], " ", "-", " ", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"(", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "m"}], 
                    ")"}], 
                    SuperscriptBox["\[HBar]", "2"]], 
                   RowBox[{"K", "[", 
                    RowBox[{"[", "pNum", "]"}], "]"}]}], "-", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"c", " ", "m"}], ")"}], 
                    SuperscriptBox["\[HBar]", "2"]], ")"}], "2"]}]], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"l", ",", " ", "1", ",", " ", 
                  RowBox[{"pNum", "-", "1"}]}], "}"}]}], "]"}], 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\"\<\[ScriptCapitalA]\>\"", ",", " ", 
                 RowBox[{"ToString", "[", "nL", "]"}], ",", 
                 RowBox[{"ToString", "[", "nR", "]"}]}], "]"}], "[", " ", 
               RowBox[{"ToString", "[", 
                RowBox[{"PP", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}]}]}]}], ")"}], 
          "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", " ", 
           RowBox[{"Length", "[", "PP", "]"}]}], "]"}]}]}], ")"}]}], "]"}]}], 
   "\n", 
   RowBox[{"leftReflectionGen", "[", 
    RowBox[{
    "vars", ",", " ", "nL", ",", " ", "nR", ",", " ", "L", ",", " ", "2"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7088052573825073`*^9, 3.708805276275015*^9}, {
   3.708805475018572*^9, 3.7088054767070303`*^9}, {3.70880559921478*^9, 
   3.7088056323532257`*^9}, {3.708805675336986*^9, 3.708805680984994*^9}, {
   3.708805757552177*^9, 3.708805777783516*^9}, {3.708805837735218*^9, 
   3.708805837926457*^9}, {3.708805878550976*^9, 3.70880588391206*^9}, {
   3.7088059144380217`*^9, 3.708805966310626*^9}, {3.708806493545204*^9, 
   3.7088065171114492`*^9}, {3.708806570119109*^9, 3.7088066497206087`*^9}, {
   3.708806681375705*^9, 3.7088067366941357`*^9}, {3.708806822148827*^9, 
   3.7088068263827953`*^9}, {3.708806862460123*^9, 3.7088068629236*^9}, {
   3.708806909221609*^9, 3.7088069486762457`*^9}, {3.708807011074006*^9, 
   3.708807113249689*^9}, {3.708807156889391*^9, 3.708807376551755*^9}, 
   3.70880740894566*^9, {3.7088074503105097`*^9, 3.708807454502706*^9}, {
   3.708807561373199*^9, 3.7088075988383303`*^9}, {3.708807734749263*^9, 
   3.708807787234767*^9}, {3.708807948059278*^9, 3.7088079598170557`*^9}, {
   3.708808081497294*^9, 3.708808126039935*^9}, {3.7088081997743397`*^9, 
   3.708808200125764*^9}, {3.708808355158289*^9, 3.708808369317013*^9}, {
   3.708808453645255*^9, 3.708808468868986*^9}, {3.708808505348901*^9, 
   3.708808506372471*^9}, 3.708808552965447*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["k1", "2"]}], "+", 
         SuperscriptBox["k2", "2"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          SuperscriptBox["\[HBar]", "4"]], "+", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
          
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k1", "2"]}], "+", 
       SuperscriptBox["k2", "2"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox["\[HBar]", "4"]], "-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["k1", "2"]}], "+", 
         SuperscriptBox["k2", "2"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          SuperscriptBox["\[HBar]", "4"]], "+", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
          
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k1, k2}\"\>",
         "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k1", "2"]}], "+", 
       SuperscriptBox["k2", "2"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox["\[HBar]", "4"]], "-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k1", "2"], "-", 
         SuperscriptBox["k2", "2"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          SuperscriptBox["\[HBar]", "4"]], "+", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
          
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
        "]"}]}], 
      RowBox[{
       SuperscriptBox["k1", "2"], "-", 
       SuperscriptBox["k2", "2"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox["\[HBar]", "4"]], "-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k1", "2"], "-", 
         SuperscriptBox["k2", "2"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          SuperscriptBox["\[HBar]", "4"]], "+", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
          
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k2, k1}\"\>",
         "]"}]}], 
      RowBox[{
       SuperscriptBox["k1", "2"], "-", 
       SuperscriptBox["k2", "2"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox["\[HBar]", "4"]], "-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7088080996699333`*^9, 3.708808127009391*^9}, 
   3.708808201767988*^9, 3.708808556604562*^9, 3.708894578870632*^9, 
   3.70892046904102*^9, 3.711312665394812*^9, 3.711314510105184*^9, 
   3.7113182006742268`*^9, 3.711319297999681*^9, 3.7113198771781807`*^9, 
   3.7113202948244953`*^9, 3.711321533164497*^9, 3.7113224190171843`*^9, 
   3.711334890070445*^9, 3.7113349339745197`*^9, 3.711336418813299*^9, 
   3.711337661365451*^9, 3.711337908913644*^9, 3.711339285514908*^9, 
   3.711340712985297*^9, 3.7113542728192053`*^9, 3.7113543765149393`*^9, 
   3.711406137089468*^9, 3.71183684917656*^9, 3.711928255294693*^9, 
   3.711940651253934*^9, 3.711940766240467*^9, 3.7128675206048527`*^9, 
   3.713150240468265*^9, 3.717279516479493*^9, 3.733800921874885*^9, 
   3.740257994833139*^9, 3.740265787805579*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"leftReflection", "[", 
   RowBox[{"X_", ",", " ", "L_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nl", ",", " ", "nlnr", ",", " ", "nL", ",", " ", "nR"}], "}"}], 
    ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nlnr", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"nl", "=", "#1"}], ";", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"nl", ",", "#1"}], "}"}], " ", "&"}], "/@", " ", 
               RowBox[{"Range", "[", 
                RowBox[{"0", ",", " ", 
                 RowBox[{
                  RowBox[{"Length", "[", "X", "]"}], " ", "-", " ", "nl"}]}], 
                "]"}]}]}], " ", ")"}], "&"}], " ", "/@", " ", 
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", " ", 
             RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], ",", " ", "1"}], 
         "]"}]}], ";", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nL", " ", "=", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", 
           RowBox[{"nR", "=", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", 
           RowBox[{
            RowBox[{
             RowBox[{"leftReflectionGen", "[", 
              RowBox[{
              "X", ",", " ", "nL", ",", " ", "nR", ",", " ", "L", ",", " ", 
               "#"}], "]"}], " ", "&"}], "/@", " ", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", " ", "nL"}], "]"}]}]}], ")"}], "&"}], "/@", 
        " ", "nlnr"}]}], " ", ")"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{"leftReflection", "[", 
  RowBox[{"vars", ",", " ", "L"}], "]"}]}], "Input",
 CellChangeTimes->{{3.708806164242712*^9, 3.708806165842148*^9}, 
   3.708806212477332*^9, {3.708808759664537*^9, 3.7088089554566402`*^9}, {
   3.70880900058191*^9, 3.708809000757272*^9}, {3.708809120348447*^9, 
   3.708809122324726*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["k1", "2"]}], "+", 
         SuperscriptBox["k2", "2"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          SuperscriptBox["\[HBar]", "4"]], "+", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
          
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k1", "2"]}], "+", 
       SuperscriptBox["k2", "2"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox["\[HBar]", "4"]], "-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["k1", "2"]}], "+", 
         SuperscriptBox["k2", "2"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          SuperscriptBox["\[HBar]", "4"]], "+", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
          
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k1", "2"]}], "+", 
       SuperscriptBox["k2", "2"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox["\[HBar]", "4"]], "-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k1", "2"], "-", 
         SuperscriptBox["k2", "2"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          SuperscriptBox["\[HBar]", "4"]], "+", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
          
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
        "]"}]}], 
      RowBox[{
       SuperscriptBox["k1", "2"], "-", 
       SuperscriptBox["k2", "2"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox["\[HBar]", "4"]], "-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k1", "2"], "-", 
         SuperscriptBox["k2", "2"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          SuperscriptBox["\[HBar]", "4"]], "+", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
          
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
        "]"}]}], 
      RowBox[{
       SuperscriptBox["k1", "2"], "-", 
       SuperscriptBox["k2", "2"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox["\[HBar]", "4"]], "-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7088062138435373`*^9, {3.708808227837565*^9, 3.708808232911767*^9}, 
   3.708808873469413*^9, 3.708808925236766*^9, 3.708808955774939*^9, 
   3.708809002062538*^9, 3.708809123439941*^9, 3.708894578895792*^9, 
   3.708920469068541*^9, 3.7113126654446373`*^9, 3.711314510135809*^9, 
   3.7113182007283773`*^9, 3.7113192980480747`*^9, 3.7113198772837133`*^9, 
   3.711320294871623*^9, 3.711321533218977*^9, 3.71132241905554*^9, 
   3.7113348901171007`*^9, 3.711334934021291*^9, 3.7113364188503933`*^9, 
   3.711337661404187*^9, 3.711337908962628*^9, 3.711339285562509*^9, 
   3.71134071306999*^9, 3.711354272867729*^9, 3.711354376560912*^9, 
   3.711406137139812*^9, 3.711836849224695*^9, 3.711928255413192*^9, 
   3.711940651283828*^9, 3.71194076628862*^9, 3.712867520708508*^9, 
   3.713150240509083*^9, 3.717279516552721*^9, 3.733800921904666*^9, 
   3.740257994861326*^9, 3.740265787905641*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Right reflection", "Subsubsection",
 CellChangeTimes->{{3.708809702101631*^9, 3.7088097050130367`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "General", " ", "condition", " ", "for", " ", "reflection", " ", "of", " ",
     "the", " ", 
    RowBox[{"pNum", "'"}], "s", " ", "particle", " ", "from", " ", "the", " ",
     "right", " ", 
    RowBox[{"wall", ".", " ", "Does"}], " ", "not", " ", "yet", " ", "check", 
    " ", "for", " ", "number", " ", "of", " ", "particles", " ", "in", " ", 
    "the", " ", "right", " ", 
    RowBox[{"well", ".", " ", "L"}], " ", "is", " ", "the", " ", "length", 
    " ", "of", " ", "the", " ", "whole", " ", "system", " ", "from", " ", 
    "one", " ", "wall", " ", "to", " ", "another"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"rightReflectionGen", "[", 
     RowBox[{
     "X_", ",", " ", "nL_", ",", " ", "nR_", ",", " ", "L_", ",", " ", 
      "pNum_"}], "]"}], " ", ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "Epp", ",", "P", ",", "Epm", ",", "PP", ",", "PM", ",", " ", "K"}], 
       "}"}], ",", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"P", "=", " ", 
         RowBox[{"Permutations", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Symbol", "[", 
             RowBox[{"\"\<k\>\"", "<>", 
              RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", " ", 
             RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Epp", " ", "=", " ", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", 
                   RowBox[{"pNum", "-", "1"}]}], "]"}], "]"}], ",", "1", ",", 
                " ", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"pNum", "+", "1"}], ";;", 
                   RowBox[{"Length", "[", "#", "]"}]}], "]"}], "]"}]}], "}"}],
               ",", " ", "1"}], "]"}], " ", "&"}], "/@", 
           RowBox[{"Tuples", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", " ", 
             RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", " ", 
        RowBox[{"Epm", " ", "=", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", 
                   RowBox[{"pNum", "-", "1"}]}], "]"}], "]"}], ",", 
                RowBox[{"-", "1"}], ",", " ", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"pNum", "+", "1"}], ";;", 
                   RowBox[{"Length", "[", "#", "]"}]}], "]"}], "]"}]}], "}"}],
               ",", " ", "1"}], "]"}], " ", "&"}], "/@", 
           RowBox[{"Tuples", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", " ", 
             RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Epp", " ", "=", " ", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", " ", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ";;", 
                    RowBox[{"Length", "[", "#", "]"}]}], "]"}], "]"}]}], 
                 "}"}], ",", " ", "1"}], "]"}], " ", "&"}], "/@", 
             RowBox[{"Tuples", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", " ", 
               RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"Epm", " ", "=", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", " ", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ";;", 
                    RowBox[{"Length", "[", "#", "]"}]}], "]"}], "]"}]}], 
                 "}"}], ",", " ", "1"}], "]"}], " ", "&"}], "/@", 
             RowBox[{"Tuples", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", " ", 
               RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], "]"}]}], ";"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"PP", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Outer", "[", 
            RowBox[{"Times", ",", " ", "P", ",", " ", "Epp", ",", " ", "1"}], 
            "]"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"PM", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Outer", "[", 
            RowBox[{"Times", ",", " ", "P", ",", " ", "Epm", ",", " ", "1"}], 
            "]"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"K", " ", "=", " ", 
             RowBox[{"PP", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], ";", 
            RowBox[{
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\"\<\[ScriptCapitalA]\>\"", ",", " ", 
                RowBox[{"ToString", "[", "nL", "]"}], ",", 
                RowBox[{"ToString", "[", "nR", "]"}]}], "]"}], "[", " ", 
              RowBox[{"ToString", "[", 
               RowBox[{"PM", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}], "\[Rule]", " ", 
             
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Exp", "[", 
                RowBox[{"\[ImaginaryI]", " ", 
                 RowBox[{"K", "[", 
                  RowBox[{"[", "pNum", "]"}], "]"}], "L"}], "]"}]}], 
              RowBox[{"Product", "[", 
               RowBox[{
                FractionBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"K", "[", 
                    RowBox[{"[", "pNum", "]"}], "]"}], "2"], "-", 
                  SuperscriptBox[
                   RowBox[{"K", "[", 
                    RowBox[{"[", "l", "]"}], "]"}], "2"], " ", "-", " ", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"(", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "m"}], 
                    ")"}], 
                    SuperscriptBox["\[HBar]", "2"]], 
                   RowBox[{"K", "[", 
                    RowBox[{"[", "pNum", "]"}], "]"}]}], "-", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"c", " ", "m"}], ")"}], 
                    SuperscriptBox["\[HBar]", "2"]], ")"}], "2"]}], 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"K", "[", 
                    RowBox[{"[", "pNum", "]"}], "]"}], "2"], "-", 
                  SuperscriptBox[
                   RowBox[{"K", "[", 
                    RowBox[{"[", "l", "]"}], "]"}], "2"], " ", "+", " ", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"(", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "m"}], 
                    ")"}], 
                    SuperscriptBox["\[HBar]", "2"]], 
                   RowBox[{"K", "[", 
                    RowBox[{"[", "pNum", "]"}], "]"}]}], "-", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"c", " ", "m"}], ")"}], 
                    SuperscriptBox["\[HBar]", "2"]], ")"}], "2"]}]], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"l", ",", " ", 
                  RowBox[{"pNum", "+", "1"}], ",", " ", 
                  RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}], 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\"\<\[ScriptCapitalA]\>\"", ",", " ", 
                 RowBox[{"ToString", "[", "nL", "]"}], ",", 
                 RowBox[{"ToString", "[", "nR", "]"}]}], "]"}], "[", " ", 
               RowBox[{"ToString", "[", 
                RowBox[{"PP", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}]}]}]}], ")"}], 
          "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", " ", 
           RowBox[{"Length", "[", "PP", "]"}]}], "]"}]}]}], ")"}]}], "]"}]}], 
   "\n", 
   RowBox[{"rightReflectionGen", "[", 
    RowBox[{
    "vars", ",", " ", "nL", ",", " ", "nR", ",", " ", "L", ",", " ", "1"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.70880974899156*^9, 3.708809768598219*^9}, {
   3.708810565575211*^9, 3.708810567446718*^9}, {3.708810942794903*^9, 
   3.708810955259221*^9}, 3.708810986114332*^9, 3.708811027721246*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k1", "2"], "-", 
         SuperscriptBox["k2", "2"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          SuperscriptBox["\[HBar]", "4"]], "-", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
          
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
        "]"}]}], 
      RowBox[{
       SuperscriptBox["k1", "2"], "-", 
       SuperscriptBox["k2", "2"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox["\[HBar]", "4"]], "+", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k1", "2"], "-", 
         SuperscriptBox["k2", "2"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          SuperscriptBox["\[HBar]", "4"]], "-", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
          
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k1, -k2}\"\>",
         "]"}]}], 
      RowBox[{
       SuperscriptBox["k1", "2"], "-", 
       SuperscriptBox["k2", "2"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox["\[HBar]", "4"]], "+", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["k1", "2"]}], "+", 
         SuperscriptBox["k2", "2"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          SuperscriptBox["\[HBar]", "4"]], "-", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
          
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k1", "2"]}], "+", 
       SuperscriptBox["k2", "2"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox["\[HBar]", "4"]], "+", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["k1", "2"]}], "+", 
         SuperscriptBox["k2", "2"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          SuperscriptBox["\[HBar]", "4"]], "-", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
          
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"nL\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k2, -k1}\"\>",
         "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k1", "2"]}], "+", 
       SuperscriptBox["k2", "2"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox["\[HBar]", "4"]], "+", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.708810996287026*^9, 3.7088110286901197`*^9, 
  3.708894578941987*^9, 3.708920469113078*^9, 3.711312665611774*^9, 
  3.711314510193865*^9, 3.7113182007798653`*^9, 3.711319298099819*^9, 
  3.7113198773305807`*^9, 3.711320294923025*^9, 3.7113215332695513`*^9, 
  3.711322419120714*^9, 3.711334890166971*^9, 3.711334934072096*^9, 
  3.711336418900013*^9, 3.7113376614528227`*^9, 3.711337909013506*^9, 
  3.7113392856155157`*^9, 3.711340713147818*^9, 3.711354272917392*^9, 
  3.711354376611292*^9, 3.7114061371897383`*^9, 3.7118368492749987`*^9, 
  3.711928255463565*^9, 3.711940651342204*^9, 3.711940766339019*^9, 
  3.71286752075631*^9, 3.713150240571334*^9, 3.71727951660703*^9, 
  3.733800922064458*^9, 3.740257994905044*^9, 3.7402657879556704`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rightReflection", "[", 
   RowBox[{"X_", ",", " ", "L_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nl", ",", " ", "nlnr", ",", " ", "nL", ",", " ", "nR"}], "}"}], 
    ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nlnr", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"nl", "=", "#1"}], ";", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"nl", ",", "#1"}], "}"}], " ", "&"}], "/@", " ", 
               RowBox[{"Range", "[", 
                RowBox[{"1", ",", " ", 
                 RowBox[{
                  RowBox[{"Length", "[", "X", "]"}], " ", "-", " ", "nl"}]}], 
                "]"}]}]}], " ", ")"}], "&"}], " ", "/@", " ", 
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", " ", 
             RowBox[{"Length", "[", "X", "]"}]}], "]"}]}], ",", " ", "1"}], 
         "]"}]}], ";", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nL", " ", "=", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", 
           RowBox[{"nR", "=", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", 
           RowBox[{
            RowBox[{
             RowBox[{"rightReflectionGen", "[", 
              RowBox[{
              "X", ",", " ", "nL", ",", " ", "nR", ",", " ", "L", ",", " ", 
               "#"}], "]"}], " ", "&"}], "/@", " ", 
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "X", "]"}], "-", "nR", " ", "+", " ", 
               "1"}], ",", " ", 
              RowBox[{"Length", "[", "X", "]"}]}], "]"}]}]}], ")"}], "&"}], "/@",
         " ", "nlnr"}]}], " ", ")"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{"rightReflection", "[", 
  RowBox[{"vars", ",", " ", "L"}], "]"}]}], "Input",
 CellChangeTimes->{{3.708811129743389*^9, 3.708811133879339*^9}, {
  3.708811264269994*^9, 3.708811301846545*^9}, {3.70881139091713*^9, 
  3.708811394180667*^9}, {3.708811444619335*^9, 3.708811453547502*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k1", "2"], "-", 
         SuperscriptBox["k2", "2"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          SuperscriptBox["\[HBar]", "4"]], "-", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
          
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
        "]"}]}], 
      RowBox[{
       SuperscriptBox["k1", "2"], "-", 
       SuperscriptBox["k2", "2"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox["\[HBar]", "4"]], "+", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k1", "2"], "-", 
         SuperscriptBox["k2", "2"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          SuperscriptBox["\[HBar]", "4"]], "-", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
          
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
        "]"}]}], 
      RowBox[{
       SuperscriptBox["k1", "2"], "-", 
       SuperscriptBox["k2", "2"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox["\[HBar]", "4"]], "+", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["k1", "2"]}], "+", 
         SuperscriptBox["k2", "2"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          SuperscriptBox["\[HBar]", "4"]], "-", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
          
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k1", "2"]}], "+", 
       SuperscriptBox["k2", "2"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox["\[HBar]", "4"]], "+", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["k1", "2"]}], "+", 
         SuperscriptBox["k2", "2"], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          SuperscriptBox["\[HBar]", "4"]], "-", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
          
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k1", "2"]}], "+", 
       SuperscriptBox["k2", "2"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["m", "2"]}], 
        SuperscriptBox["\[HBar]", "4"]], "+", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
      "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}]]}], " ", 
     RowBox[{
      SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
       RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
      "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.708811320143437*^9, 3.708811454990882*^9, 
  3.7088945789938917`*^9, 3.708920469162608*^9, 3.71131266566397*^9, 
  3.71131451024415*^9, 3.7113182008286057`*^9, 3.711319298147303*^9, 
  3.711319877378346*^9, 3.7113202951221046`*^9, 3.711321533309428*^9, 
  3.711322419238545*^9, 3.711334890217157*^9, 3.71133493412171*^9, 
  3.7113364189518347`*^9, 3.7113376615030003`*^9, 3.7113379090620127`*^9, 
  3.711339285663794*^9, 3.711340713186007*^9, 3.711354272965808*^9, 
  3.7113543766613407`*^9, 3.7114061372386436`*^9, 3.7118368493531923`*^9, 
  3.711928255511364*^9, 3.7119406513957777`*^9, 3.7119407663875647`*^9, 
  3.712867520804986*^9, 3.7131502406203423`*^9, 3.7172795166567297`*^9, 
  3.73380092211304*^9, 3.7402579949546413`*^9, 3.740265788006227*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scattering with the barriers", "Subsection",
 CellChangeTimes->{{3.7088936595834627`*^9, 3.708893666990842*^9}}],

Cell[CellGroupData[{

Cell["Scattering to the left with the \[Beta]-barrier", "Subsubsection",
 CellChangeTimes->{{3.708893674766788*^9, 3.708893689470626*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"betaBarrScatGen", "[", 
   RowBox[{"X_", ",", " ", "nL_", ",", " ", "L_", ",", " ", "pNum_"}], "]"}], 
  " ", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "N", ",", "Epp", ",", "P", ",", "PP", ",", " ", "K", ",", " ", 
      "\[ScriptCapitalR]"}], "}"}], ",", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"N", "=", 
       RowBox[{"Length", "[", "X", "]"}]}], ";", 
      RowBox[{"P", "=", " ", 
       RowBox[{"Permutations", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Symbol", "[", 
           RowBox[{"\"\<k\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", " ", "N"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Epp", " ", "=", " ", 
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", " ", "N"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PP", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", " ", "P", ",", " ", "Epp", ",", " ", "1"}], 
          "]"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"K", " ", "=", " ", 
           RowBox[{"PP", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], ";", 
          RowBox[{"\[ScriptCapitalR]", "=", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Exp", "[", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"K", "[", 
                RowBox[{"[", "pNum", "]"}], "]"}], "L"}], "]"}]}], 
            RowBox[{"Product", "[", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"K", "[", 
                  RowBox[{"[", "pNum", "]"}], "]"}], "2"], "-", 
                SuperscriptBox[
                 RowBox[{"K", "[", 
                  RowBox[{"[", "l", "]"}], "]"}], "2"], " ", "-", " ", 
                RowBox[{
                 FractionBox[
                  RowBox[{"(", 
                   RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "m"}], 
                   ")"}], 
                  SuperscriptBox["\[HBar]", "2"]], 
                 RowBox[{"K", "[", 
                  RowBox[{"[", "pNum", "]"}], "]"}]}], "-", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"c", " ", "m"}], ")"}], 
                   SuperscriptBox["\[HBar]", "2"]], ")"}], "2"]}], 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"K", "[", 
                  RowBox[{"[", "pNum", "]"}], "]"}], "2"], "-", 
                SuperscriptBox[
                 RowBox[{"K", "[", 
                  RowBox[{"[", "l", "]"}], "]"}], "2"], " ", "+", " ", 
                RowBox[{
                 FractionBox[
                  RowBox[{"(", 
                   RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "m"}], 
                   ")"}], 
                  SuperscriptBox["\[HBar]", "2"]], 
                 RowBox[{"K", "[", 
                  RowBox[{"[", "pNum", "]"}], "]"}]}], "-", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"c", " ", "m"}], ")"}], 
                   SuperscriptBox["\[HBar]", "2"]], ")"}], "2"]}]], ",", " ", 
              
              RowBox[{"{", 
               RowBox[{"l", ",", " ", 
                RowBox[{"pNum", "+", "1"}], ",", " ", "N"}], "}"}]}], 
             "]"}]}]}], ";", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<\[ScriptCapitalA]\>\"", ",", " ", 
              RowBox[{"ToString", "[", "nL", "]"}], ",", 
              RowBox[{"ToString", "[", 
               RowBox[{"N", "-", "pNum", " ", "+", " ", "1"}], "]"}]}], "]"}],
             "[", " ", 
            RowBox[{"ToString", "[", "K", "]"}], "]"}], "\[Rule]", " ", 
           RowBox[{
            FractionBox[
             RowBox[{"(", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"K", "[", 
                RowBox[{"[", "pNum", "]"}], "]"}]}], ")"}], 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"K", "[", 
                RowBox[{"[", "pNum", "]"}], "]"}]}], "-", 
              FractionBox[
               RowBox[{"(", 
                RowBox[{"2", "m", " ", "\[Beta]"}], ")"}], 
               SuperscriptBox["\[HBar]", "2"]], " ", "-", " ", 
              RowBox[{
               FractionBox[
                RowBox[{"(", 
                 RowBox[{"2", "m", " ", "\[Beta]"}], ")"}], 
                SuperscriptBox["\[HBar]", "2"]], "\[ScriptCapitalR]", " ", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "\[ImaginaryI]", " ", 
                 RowBox[{"K", "[", 
                  RowBox[{"[", "pNum", "]"}], "]"}], "xR"}], "]"}]}]}]], 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"\"\<\[ScriptCapitalA]\>\"", ",", " ", 
               RowBox[{"ToString", "[", "nL", "]"}], ",", 
               RowBox[{"ToString", "[", 
                RowBox[{"N", "-", "pNum"}], "]"}]}], "]"}], "[", " ", 
             RowBox[{"ToString", "[", "K", "]"}], "]"}]}]}]}], ")"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", " ", 
         RowBox[{"Length", "[", "PP", "]"}]}], "]"}]}]}], ")"}]}], 
   "]"}]}], "\n", 
 RowBox[{"betaBarrScatGen", "[", 
  RowBox[{"vars", ",", " ", "nL", ",", " ", "L", ",", " ", "1"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.708893842119536*^9, 3.708893989628981*^9}, {
   3.7088940462938232`*^9, 3.708894084212096*^9}, {3.70889413537294*^9, 
   3.708894219142317*^9}, {3.7088942808983717`*^9, 3.708894404016533*^9}, 
   3.708894441906517*^9, 3.708894658799157*^9, {3.708894741358202*^9, 
   3.7088948351664057`*^9}, {3.7088948656603413`*^9, 3.708894946227579*^9}, {
   3.708894990277252*^9, 3.708895007773262*^9}, {3.708895068100523*^9, 
   3.7088950916596622`*^9}, {3.708895122402874*^9, 3.708895137818087*^9}, {
   3.7088952977701283`*^9, 3.708895374170223*^9}, {3.708895417624188*^9, 
   3.708895434568746*^9}, {3.708895487503109*^9, 3.7088955135692787`*^9}, 
   3.708895606964875*^9, {3.708895902722783*^9, 3.7088959296586437`*^9}, {
   3.7088960389525967`*^9, 3.708896039455855*^9}, {3.7088964551491756`*^9, 
   3.7088964617483797`*^9}, {3.7088967379078617`*^9, 3.708896742954707*^9}, 
   3.708900437713193*^9, {3.708900468172757*^9, 3.7089004762037992`*^9}, {
   3.708900678451064*^9, 3.708900683130938*^9}, {3.711317512300654*^9, 
   3.711317512310392*^9}, {3.711334607297823*^9, 3.711334624600565*^9}, {
   3.711334693289175*^9, 3.711334695512351*^9}, {3.711334786983101*^9, 
   3.711334872556612*^9}, 3.711334927805334*^9, {3.711337773106287*^9, 
   3.7113377771282177`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"nL\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"nL\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "k1"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xR"}]}]], " ", 
        "m", " ", "\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k1", "2"], "-", 
          SuperscriptBox["k2", "2"], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           SuperscriptBox["\[HBar]", "4"]], "-", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
           SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k1", "2"], "-", 
          SuperscriptBox["k2", "2"], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           SuperscriptBox["\[HBar]", "4"]], "+", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
           SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
        SuperscriptBox["\[HBar]", "2"]}]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"nL\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"nL\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "k1"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xR"}]}]], " ", 
        "m", " ", "\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k1", "2"], "-", 
          SuperscriptBox["k2", "2"], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           SuperscriptBox["\[HBar]", "4"]], "-", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
           SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k1", "2"], "-", 
          SuperscriptBox["k2", "2"], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           SuperscriptBox["\[HBar]", "4"]], "+", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
           SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
        SuperscriptBox["\[HBar]", "2"]}]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"nL\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"nL\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xR"}]}]], " ", 
         "m", " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["k1", "2"], "-", 
           SuperscriptBox["k2", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["m", "2"]}], 
            SuperscriptBox["\[HBar]", "4"]], "+", 
           FractionBox[
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
            SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["k1", "2"], "-", 
           SuperscriptBox["k2", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["m", "2"]}], 
            SuperscriptBox["\[HBar]", "4"]], "-", 
           FractionBox[
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
            SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
         SuperscriptBox["\[HBar]", "2"]}]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"nL\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"nL\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, -k2}\"\>",
         "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xR"}]}]], " ", 
         "m", " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["k1", "2"], "-", 
           SuperscriptBox["k2", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["m", "2"]}], 
            SuperscriptBox["\[HBar]", "4"]], "+", 
           FractionBox[
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
            SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["k1", "2"], "-", 
           SuperscriptBox["k2", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["m", "2"]}], 
            SuperscriptBox["\[HBar]", "4"]], "-", 
           FractionBox[
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
            SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
         SuperscriptBox["\[HBar]", "2"]}]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"nL\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"nL\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "k2"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xR"}]}]], " ", 
        "m", " ", "\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["k1", "2"]}], "+", 
          SuperscriptBox["k2", "2"], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           SuperscriptBox["\[HBar]", "4"]], "-", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
           SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["k1", "2"]}], "+", 
          SuperscriptBox["k2", "2"], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           SuperscriptBox["\[HBar]", "4"]], "+", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
           SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
        SuperscriptBox["\[HBar]", "2"]}]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"nL\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"nL\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "k2"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xR"}]}]], " ", 
        "m", " ", "\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["k1", "2"]}], "+", 
          SuperscriptBox["k2", "2"], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           SuperscriptBox["\[HBar]", "4"]], "-", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
           SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["k1", "2"]}], "+", 
          SuperscriptBox["k2", "2"], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           SuperscriptBox["\[HBar]", "4"]], "+", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
           SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
        SuperscriptBox["\[HBar]", "2"]}]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"nL\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"nL\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xR"}]}]], " ", 
         "m", " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["k1", "2"]}], "+", 
           SuperscriptBox["k2", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["m", "2"]}], 
            SuperscriptBox["\[HBar]", "4"]], "+", 
           FractionBox[
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
            SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["k1", "2"]}], "+", 
           SuperscriptBox["k2", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["m", "2"]}], 
            SuperscriptBox["\[HBar]", "4"]], "-", 
           FractionBox[
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
            SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
         SuperscriptBox["\[HBar]", "2"]}]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"nL\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"nL\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, -k1}\"\>",
         "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xR"}]}]], " ", 
         "m", " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["k1", "2"]}], "+", 
           SuperscriptBox["k2", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["m", "2"]}], 
            SuperscriptBox["\[HBar]", "4"]], "+", 
           FractionBox[
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
            SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["k1", "2"]}], "+", 
           SuperscriptBox["k2", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["m", "2"]}], 
            SuperscriptBox["\[HBar]", "4"]], "-", 
           FractionBox[
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
            SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
         SuperscriptBox["\[HBar]", "2"]}]]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.711318200879622*^9, 3.711319298198139*^9, 3.711319877426303*^9, 
   3.7113202951727467`*^9, 3.711321533359067*^9, 3.7113224192881107`*^9, {
   3.711334849344112*^9, 3.711334890301557*^9}, 3.71133493417304*^9, 
   3.7113364190011578`*^9, 3.711337661581081*^9, 3.711337909113525*^9, 
   3.71133928571346*^9, 3.711340713237253*^9, 3.711354273015473*^9, 
   3.7113543767104588`*^9, 3.711406137306274*^9, 3.711836849387999*^9, 
   3.711928255560218*^9, 3.711940651442371*^9, 3.711940766438345*^9, 
   3.712867520855455*^9, 3.713150240670122*^9, 3.717279516710505*^9, 
   3.733800922163555*^9, 3.7402579950038548`*^9, 3.7402657880559177`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"betaBarrScat", "[", 
   RowBox[{"X_", ",", " ", "L_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"nL", ",", " ", "pNum", ",", " ", "N"}], "}"}], ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"N", " ", "=", " ", 
       RowBox[{"Length", "[", "X", "]"}]}], ";", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nL", " ", "=", " ", "#"}], ";", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"pNum", " ", "=", " ", "#"}], ";", " ", 
               RowBox[{"betaBarrScatGen", "[", 
                RowBox[{
                "X", ",", " ", "nL", ",", " ", "L", ",", " ", "pNum"}], 
                "]"}]}], ")"}], "&"}], "/@", " ", 
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"nL", "+", "1"}], ",", " ", "N"}], "]"}]}]}], ")"}], 
         "&"}], "/@", " ", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"N", "-", "1"}]}], "]"}]}], "]"}]}], ")"}]}], "]"}]}], "\n", 
 RowBox[{"betaBarrScat", "[", 
  RowBox[{"vars", ",", " ", "L"}], "]"}]}], "Input",
 CellChangeTimes->{{3.708896137231208*^9, 3.708896145275222*^9}, {
  3.7088961864254303`*^9, 3.708896254445031*^9}, {3.708896293060795*^9, 
  3.708896371471039*^9}, {3.708896408932212*^9, 3.708896437483885*^9}, {
  3.7088966798736143`*^9, 3.70889671289671*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "k1"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xR"}]}]], " ", 
        "m", " ", "\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k1", "2"], "-", 
          SuperscriptBox["k2", "2"], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           SuperscriptBox["\[HBar]", "4"]], "-", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
           SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k1", "2"], "-", 
          SuperscriptBox["k2", "2"], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           SuperscriptBox["\[HBar]", "4"]], "+", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
           SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
        SuperscriptBox["\[HBar]", "2"]}]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "k1"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xR"}]}]], " ", 
        "m", " ", "\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k1", "2"], "-", 
          SuperscriptBox["k2", "2"], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           SuperscriptBox["\[HBar]", "4"]], "-", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
           SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k1", "2"], "-", 
          SuperscriptBox["k2", "2"], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           SuperscriptBox["\[HBar]", "4"]], "+", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
           SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
        SuperscriptBox["\[HBar]", "2"]}]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xR"}]}]], " ", 
         "m", " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["k1", "2"], "-", 
           SuperscriptBox["k2", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["m", "2"]}], 
            SuperscriptBox["\[HBar]", "4"]], "+", 
           FractionBox[
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
            SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["k1", "2"], "-", 
           SuperscriptBox["k2", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["m", "2"]}], 
            SuperscriptBox["\[HBar]", "4"]], "-", 
           FractionBox[
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
            SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
         SuperscriptBox["\[HBar]", "2"]}]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xR"}]}]], " ", 
         "m", " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["k1", "2"], "-", 
           SuperscriptBox["k2", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["m", "2"]}], 
            SuperscriptBox["\[HBar]", "4"]], "+", 
           FractionBox[
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
            SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["k1", "2"], "-", 
           SuperscriptBox["k2", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["m", "2"]}], 
            SuperscriptBox["\[HBar]", "4"]], "-", 
           FractionBox[
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
            SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
         SuperscriptBox["\[HBar]", "2"]}]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "k2"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xR"}]}]], " ", 
        "m", " ", "\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["k1", "2"]}], "+", 
          SuperscriptBox["k2", "2"], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           SuperscriptBox["\[HBar]", "4"]], "-", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
           SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["k1", "2"]}], "+", 
          SuperscriptBox["k2", "2"], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           SuperscriptBox["\[HBar]", "4"]], "+", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
           SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
        SuperscriptBox["\[HBar]", "2"]}]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "k2"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xR"}]}]], " ", 
        "m", " ", "\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["k1", "2"]}], "+", 
          SuperscriptBox["k2", "2"], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           SuperscriptBox["\[HBar]", "4"]], "-", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
           SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["k1", "2"]}], "+", 
          SuperscriptBox["k2", "2"], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           SuperscriptBox["\[HBar]", "4"]], "+", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
           SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
        SuperscriptBox["\[HBar]", "2"]}]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xR"}]}]], " ", 
         "m", " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["k1", "2"]}], "+", 
           SuperscriptBox["k2", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["m", "2"]}], 
            SuperscriptBox["\[HBar]", "4"]], "+", 
           FractionBox[
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
            SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["k1", "2"]}], "+", 
           SuperscriptBox["k2", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["m", "2"]}], 
            SuperscriptBox["\[HBar]", "4"]], "-", 
           FractionBox[
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
            SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
         SuperscriptBox["\[HBar]", "2"]}]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"2\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xR"}]}]], " ", 
         "m", " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["k1", "2"]}], "+", 
           SuperscriptBox["k2", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["m", "2"]}], 
            SuperscriptBox["\[HBar]", "4"]], "+", 
           FractionBox[
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
            SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["k1", "2"]}], "+", 
           SuperscriptBox["k2", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["m", "2"]}], 
            SuperscriptBox["\[HBar]", "4"]], "-", 
           FractionBox[
            RowBox[{
            "2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
            SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
         SuperscriptBox["\[HBar]", "2"]}]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "k2"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xR"}]}]], " ", 
        "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xR"}]}]], " ", 
         "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "k2"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xR"}]}]], " ", 
        "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xR"}]}]], " ", 
         "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "k1"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xR"}]}]], " ", 
        "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xR"}]}]], " ", 
         "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "k1"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xR"}]}]], " ", 
        "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xR"}]}]], " ", 
         "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "k2"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xR"}]}]], " ", 
        "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xR"}]}]], " ", 
         "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "k2"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xR"}]}]], " ", 
        "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xR"}]}]], " ", 
         "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "k1"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xR"}]}]], " ", 
        "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xR"}]}]], " ", 
         "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
       "]"}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "k1"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xR"}]}]], " ", 
        "m", " ", "\[Beta]"}], 
       SuperscriptBox["\[HBar]", "2"]]}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
        "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xR"}]}]], " ", 
         "m", " ", "\[Beta]"}], 
        SuperscriptBox["\[HBar]", "2"]]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7113182010133667`*^9, 3.711319298328014*^9, 
  3.711319877478228*^9, 3.711320295223811*^9, 3.711321533409883*^9, 
  3.7113224193678513`*^9, 3.711334890350753*^9, 3.711334934251462*^9, 
  3.71133641908529*^9, 3.7113376616365757`*^9, 3.7113379091631403`*^9, 
  3.711339285764494*^9, 3.7113407133042793`*^9, 3.7113542730953627`*^9, 
  3.7113543767760773`*^9, 3.7114061373768253`*^9, 3.711836849441147*^9, 
  3.711928255610621*^9, 3.711940651559429*^9, 3.711940766516922*^9, 
  3.712867520904841*^9, 3.713150240720619*^9, 3.717279516757102*^9, 
  3.73380092221332*^9, 3.740257995055303*^9, 3.7402657881044827`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scattering to the left with the \[Alpha]-barrier", "Subsubsection",
 CellChangeTimes->{{3.70889699121376*^9, 3.708897010132846*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"alphaBarrScatGen", "[", 
   RowBox[{"X_", ",", " ", "nR_", ",", " ", "L_", ",", " ", "pNum_"}], "]"}], 
  " ", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "N", ",", "Epp", ",", "P", ",", "PP", ",", " ", "K", ",", "  ", 
      "\[ScriptCapitalR]"}], "}"}], ",", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"N", "=", 
       RowBox[{"Length", "[", "X", "]"}]}], ";", 
      RowBox[{"P", "=", " ", 
       RowBox[{"Permutations", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Symbol", "[", 
           RowBox[{"\"\<k\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", " ", "N"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Epp", " ", "=", " ", 
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", " ", "N"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PP", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", " ", "P", ",", " ", "Epp", ",", " ", "1"}], 
          "]"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"K", " ", "=", " ", 
           RowBox[{"PP", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], ";", 
          RowBox[{"\[ScriptCapitalR]", "=", 
           RowBox[{
            RowBox[{"-", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               RowBox[{"K", "[", 
                RowBox[{"[", "pNum", "]"}], "]"}], "L"}], "]"}]}], 
            RowBox[{"Product", "[", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"K", "[", 
                  RowBox[{"[", "pNum", "]"}], "]"}], "2"], "-", 
                SuperscriptBox[
                 RowBox[{"K", "[", 
                  RowBox[{"[", "l", "]"}], "]"}], "2"], " ", "+", " ", 
                RowBox[{
                 FractionBox[
                  RowBox[{"(", 
                   RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "m"}], 
                   ")"}], 
                  SuperscriptBox["\[HBar]", "2"]], 
                 RowBox[{"K", "[", 
                  RowBox[{"[", "pNum", "]"}], "]"}]}], "-", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"c", " ", "m"}], ")"}], 
                   SuperscriptBox["\[HBar]", "2"]], ")"}], "2"]}], 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"K", "[", 
                  RowBox[{"[", "pNum", "]"}], "]"}], "2"], "-", 
                SuperscriptBox[
                 RowBox[{"K", "[", 
                  RowBox[{"[", "l", "]"}], "]"}], "2"], " ", "-", " ", 
                RowBox[{
                 FractionBox[
                  RowBox[{"(", 
                   RowBox[{"2", " ", "\[ImaginaryI]", " ", "c", " ", "m"}], 
                   ")"}], 
                  SuperscriptBox["\[HBar]", "2"]], 
                 RowBox[{"K", "[", 
                  RowBox[{"[", "pNum", "]"}], "]"}]}], "-", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"c", " ", "m"}], ")"}], 
                   SuperscriptBox["\[HBar]", "2"]], ")"}], "2"]}]], ",", " ", 
              
              RowBox[{"{", 
               RowBox[{"l", ",", " ", "1", ",", " ", 
                RowBox[{"pNum", "-", "1"}]}], "}"}]}], "]"}]}]}], ";", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<\[ScriptCapitalA]\>\"", ",", " ", 
              RowBox[{"ToString", "[", 
               RowBox[{"pNum", "-", "1"}], "]"}], ",", 
              RowBox[{"ToString", "[", "nR", "]"}]}], "]"}], "[", " ", 
            RowBox[{"ToString", "[", "K", "]"}], "]"}], "\[Rule]", " ", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"K", "[", 
                RowBox[{"[", "pNum", "]"}], "]"}]}], "+", 
              FractionBox[
               RowBox[{"(", 
                RowBox[{"2", "m", " ", "\[Alpha]"}], ")"}], 
               SuperscriptBox["\[HBar]", "2"]], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"(", 
                 RowBox[{"2", "m", " ", "\[Alpha]"}], ")"}], 
                SuperscriptBox["\[HBar]", "2"]], 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "\[ImaginaryI]", " ", 
                 RowBox[{"K", "[", 
                  RowBox[{"[", "pNum", "]"}], "]"}], "xL"}], "]"}], 
               "\[ScriptCapitalR]"}]}], 
             RowBox[{" ", 
              RowBox[{"(", 
               RowBox[{"\[ImaginaryI]", " ", 
                RowBox[{"K", "[", 
                 RowBox[{"[", "pNum", "]"}], "]"}]}], ")"}]}]], " ", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"\"\<\[ScriptCapitalA]\>\"", ",", " ", 
               RowBox[{"ToString", "[", "pNum", "]"}], ",", 
               RowBox[{"ToString", "[", "nR", "]"}]}], "]"}], "[", " ", 
             RowBox[{"ToString", "[", "K", "]"}], "]"}]}]}]}], ")"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", " ", 
         RowBox[{"Length", "[", "PP", "]"}]}], "]"}]}]}], ")"}]}], 
   "]"}]}], "\n", 
 RowBox[{"alphaBarrScatGen", "[", 
  RowBox[{"vars", ",", " ", "nR", ",", " ", "L", ",", " ", "1"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.708897760320656*^9, 3.7088977977363577`*^9}, {
   3.708897845568074*^9, 3.7088979142905483`*^9}, {3.708897967510274*^9, 
   3.708897979670632*^9}, {3.708898061055148*^9, 3.70889806999675*^9}, 
   3.708898104992824*^9, 3.708898156916799*^9, {3.7088983311944017`*^9, 
   3.708898333121786*^9}, {3.7088984242180367`*^9, 3.7088984319223223`*^9}, 
   3.708898931884457*^9, {3.708899251554941*^9, 3.708899300561743*^9}, 
   3.708899344177764*^9, {3.708899380505859*^9, 3.708899407832412*^9}, {
   3.7088995288792877`*^9, 3.708899598020748*^9}, {3.7089002348822203`*^9, 
   3.7089002794459963`*^9}, {3.70890035066978*^9, 3.7089003601170692`*^9}, {
   3.708900410165587*^9, 3.708900421932867*^9}, {3.7089018536644173`*^9, 
   3.708901877394454*^9}, {3.7089023364586887`*^9, 3.7089023534022923`*^9}, {
   3.708902412917094*^9, 3.708902422673753*^9}, 3.708902559226366*^9, {
   3.708902601323123*^9, 3.708902657576269*^9}, {3.7113174856533527`*^9, 
   3.711317485674385*^9}, {3.7113362876800823`*^9, 3.711336409679542*^9}, 
   3.71133765509779*^9, 3.711337701513254*^9, {3.7113378510011597`*^9, 
   3.711337853639482*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k1"}], "+", 
         FractionBox[
          RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xL"}]}]], 
           " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"1\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
        "]"}]}], "k1"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k1"}], "+", 
         FractionBox[
          RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xL"}]}]], 
           " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"1\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
        "]"}]}], "k1"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xL"}]}]], " ",
           "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"1\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
       "]"}]}], "k1"]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xL"}]}]], " ",
           "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"1\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
       "]"}]}], "k1"]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k2"}], "+", 
         FractionBox[
          RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xL"}]}]], 
           " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"1\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
        "]"}]}], "k2"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k2"}], "+", 
         FractionBox[
          RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xL"}]}]], 
           " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"1\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
        "]"}]}], "k2"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xL"}]}]], " ",
           "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"1\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
       "]"}]}], "k2"]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xL"}]}]], " ",
           "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"1\"\>", ",", "\<\"nR\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
       "]"}]}], "k2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.711318201144628*^9, 3.711319298464777*^9, 
  3.7113198775443697`*^9, 3.71132029528955*^9, 3.711321533474571*^9, 
  3.711322419438745*^9, 3.711334890400564*^9, 3.711334934304757*^9, 
  3.711336419134728*^9, 3.711337661686664*^9, 3.711337909212967*^9, 
  3.711339285813725*^9, 3.711340713364582*^9, 3.711354273149197*^9, 
  3.7113543768119583`*^9, 3.711406137474223*^9, 3.711836849492136*^9, 
  3.711928255661173*^9, 3.711940651587637*^9, 3.711940766571966*^9, 
  3.712867520959695*^9, 3.7131502407701674`*^9, 3.717279516806459*^9, 
  3.733800922263719*^9, 3.740257995104456*^9, 3.740265788156273*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"alphaBarrScat", "[", 
   RowBox[{"X_", ",", " ", "L_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"nR", ",", " ", "pNum", ",", " ", "N"}], "}"}], ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"N", " ", "=", " ", 
       RowBox[{"Length", "[", "X", "]"}]}], ";", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nR", " ", "=", " ", "#"}], ";", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"pNum", " ", "=", " ", "#"}], ";", " ", 
               RowBox[{"alphaBarrScatGen", "[", 
                RowBox[{
                "X", ",", " ", "nR", ",", " ", "L", ",", " ", "pNum"}], 
                "]"}]}], ")"}], "&"}], "/@", " ", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", " ", 
              RowBox[{"N", "-", " ", "nR"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        " ", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"N", "-", "1"}]}], "]"}]}], "]"}]}], ")"}]}], "]"}]}], "\n", 
 RowBox[{"alphaBarrScat", "[", 
  RowBox[{"vars", ",", " ", "L"}], "]"}]}], "Input",
 CellChangeTimes->{{3.708898672029521*^9, 3.708898720476344*^9}, {
   3.7088988406693277`*^9, 3.708898841339818*^9}, 3.708898937651678*^9, {
   3.70889916824863*^9, 3.708899170234365*^9}, {3.708899214728067*^9, 
   3.708899215207692*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k1"}], "+", 
         FractionBox[
          RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xL"}]}]], 
           " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
        "]"}]}], "k1"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k1"}], "+", 
         FractionBox[
          RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xL"}]}]], 
           " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
        "]"}]}], "k1"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xL"}]}]], " ",
           "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
       "]"}]}], "k1"]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xL"}]}]], " ",
           "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
       "]"}]}], "k1"]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k2"}], "+", 
         FractionBox[
          RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xL"}]}]], 
           " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
        "]"}]}], "k2"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k2"}], "+", 
         FractionBox[
          RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xL"}]}]], 
           " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
        "]"}]}], "k2"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xL"}]}]], " ",
           "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
       "]"}]}], "k2"]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xL"}]}]], " ",
           "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
       "]"}]}], "k2"]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k2"}], "+", 
         FractionBox[
          RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xL"}]}]], 
           " ", "m", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["k1", "2"]}], "+", 
             SuperscriptBox["k2", "2"], "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["c", "2"], " ", 
               SuperscriptBox["m", "2"]}], 
              SuperscriptBox["\[HBar]", "4"]], "+", 
             FractionBox[
              RowBox[{
              "2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
              SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["k1", "2"]}], "+", 
             SuperscriptBox["k2", "2"], "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["c", "2"], " ", 
               SuperscriptBox["m", "2"]}], 
              SuperscriptBox["\[HBar]", "4"]], "-", 
             FractionBox[
              RowBox[{
              "2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
              SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
           SuperscriptBox["\[HBar]", "2"]}]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
        "]"}]}], "k2"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xL"}]}]], " ",
           "m", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["k1", "2"]}], "+", 
            SuperscriptBox["k2", "2"], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["c", "2"], " ", 
              SuperscriptBox["m", "2"]}], 
             SuperscriptBox["\[HBar]", "4"]], "-", 
            FractionBox[
             RowBox[{
             "2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
             SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["k1", "2"]}], "+", 
            SuperscriptBox["k2", "2"], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["c", "2"], " ", 
              SuperscriptBox["m", "2"]}], 
             SuperscriptBox["\[HBar]", "4"]], "+", 
            FractionBox[
             RowBox[{
             "2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
             SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
          SuperscriptBox["\[HBar]", "2"]}]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
       "]"}]}], "k2"]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k2"}], "+", 
         FractionBox[
          RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xL"}]}]], 
           " ", "m", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["k1", "2"]}], "+", 
             SuperscriptBox["k2", "2"], "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["c", "2"], " ", 
               SuperscriptBox["m", "2"]}], 
              SuperscriptBox["\[HBar]", "4"]], "+", 
             FractionBox[
              RowBox[{
              "2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
              SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["k1", "2"]}], "+", 
             SuperscriptBox["k2", "2"], "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["c", "2"], " ", 
               SuperscriptBox["m", "2"]}], 
              SuperscriptBox["\[HBar]", "4"]], "-", 
             FractionBox[
              RowBox[{
              "2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
              SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
           SuperscriptBox["\[HBar]", "2"]}]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
        "]"}]}], "k2"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xL"}]}]], " ",
           "m", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["k1", "2"]}], "+", 
            SuperscriptBox["k2", "2"], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["c", "2"], " ", 
              SuperscriptBox["m", "2"]}], 
             SuperscriptBox["\[HBar]", "4"]], "-", 
            FractionBox[
             RowBox[{
             "2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
             SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["k1", "2"]}], "+", 
            SuperscriptBox["k2", "2"], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["c", "2"], " ", 
              SuperscriptBox["m", "2"]}], 
             SuperscriptBox["\[HBar]", "4"]], "+", 
            FractionBox[
             RowBox[{
             "2", " ", "\[ImaginaryI]", " ", "c", " ", "k2", " ", "m"}], 
             SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
          SuperscriptBox["\[HBar]", "2"]}]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
       "]"}]}], "k2"]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k1"}], "+", 
         FractionBox[
          RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xL"}]}]], 
           " ", "m", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["k1", "2"], "-", 
             SuperscriptBox["k2", "2"], "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["c", "2"], " ", 
               SuperscriptBox["m", "2"]}], 
              SuperscriptBox["\[HBar]", "4"]], "+", 
             FractionBox[
              RowBox[{
              "2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
              SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["k1", "2"], "-", 
             SuperscriptBox["k2", "2"], "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["c", "2"], " ", 
               SuperscriptBox["m", "2"]}], 
              SuperscriptBox["\[HBar]", "4"]], "-", 
             FractionBox[
              RowBox[{
              "2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
              SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
           SuperscriptBox["\[HBar]", "2"]}]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
        "]"}]}], "k1"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xL"}]}]], " ",
           "m", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["k1", "2"], "-", 
            SuperscriptBox["k2", "2"], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["c", "2"], " ", 
              SuperscriptBox["m", "2"]}], 
             SuperscriptBox["\[HBar]", "4"]], "-", 
            FractionBox[
             RowBox[{
             "2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
             SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["k1", "2"], "-", 
            SuperscriptBox["k2", "2"], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["c", "2"], " ", 
              SuperscriptBox["m", "2"]}], 
             SuperscriptBox["\[HBar]", "4"]], "+", 
            FractionBox[
             RowBox[{
             "2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
             SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
          SuperscriptBox["\[HBar]", "2"]}]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
       "]"}]}], "k1"]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k1"}], "+", 
         FractionBox[
          RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xL"}]}]], 
           " ", "m", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["k1", "2"], "-", 
             SuperscriptBox["k2", "2"], "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["c", "2"], " ", 
               SuperscriptBox["m", "2"]}], 
              SuperscriptBox["\[HBar]", "4"]], "+", 
             FractionBox[
              RowBox[{
              "2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
              SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["k1", "2"], "-", 
             SuperscriptBox["k2", "2"], "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["c", "2"], " ", 
               SuperscriptBox["m", "2"]}], 
              SuperscriptBox["\[HBar]", "4"]], "-", 
             FractionBox[
              RowBox[{
              "2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
              SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
           SuperscriptBox["\[HBar]", "2"]}]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
        "]"}]}], "k1"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"1\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xL"}]}]], " ",
           "m", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["k1", "2"], "-", 
            SuperscriptBox["k2", "2"], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["c", "2"], " ", 
              SuperscriptBox["m", "2"]}], 
             SuperscriptBox["\[HBar]", "4"]], "-", 
            FractionBox[
             RowBox[{
             "2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
             SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["k1", "2"], "-", 
            SuperscriptBox["k2", "2"], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["c", "2"], " ", 
              SuperscriptBox["m", "2"]}], 
             SuperscriptBox["\[HBar]", "4"]], "+", 
            FractionBox[
             RowBox[{
             "2", " ", "\[ImaginaryI]", " ", "c", " ", "k1", " ", "m"}], 
             SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
          SuperscriptBox["\[HBar]", "2"]}]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
       "]"}]}], "k1"]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k1"}], "+", 
         FractionBox[
          RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xL"}]}]], 
           " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, k2}\"\>", 
        "]"}]}], "k1"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k1"}], "+", 
         FractionBox[
          RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xL"}]}]], 
           " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k1, -k2}\"\>", 
        "]"}]}], "k1"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xL"}]}]], " ",
           "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, k2}\"\>", 
       "]"}]}], "k1"]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "xL"}]}]], " ",
           "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k1, -k2}\"\>", 
       "]"}]}], "k1"]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k2"}], "+", 
         FractionBox[
          RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xL"}]}]], 
           " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, k1}\"\>", 
        "]"}]}], "k2"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k2"}], "+", 
         FractionBox[
          RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", "L"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xL"}]}]], 
           " ", "m", " ", "\[Alpha]"}], 
          SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
         RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{k2, -k1}\"\>", 
        "]"}]}], "k2"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xL"}]}]], " ",
           "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, k1}\"\>", 
       "]"}]}], "k2"]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
      RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
     "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k2", " ", "L"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k2", " ", "xL"}]}]], " ",
           "m", " ", "\[Alpha]"}], 
         SuperscriptBox["\[HBar]", "2"]]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
        RowBox[{"\<\"1\"\>", ",", "\<\"1\"\>"}]], "[", "\<\"{-k2, -k1}\"\>", 
       "]"}]}], "k2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.711318201283811*^9, 3.71131929856318*^9, 
  3.711319877606221*^9, 3.711320295360764*^9, 3.711321533525467*^9, 
  3.7113224195117807`*^9, 3.711334890449623*^9, 3.711334934357545*^9, 
  3.711336419187441*^9, 3.711337661738517*^9, 3.7113379092624607`*^9, 
  3.711339285862196*^9, 3.711340713420576*^9, 3.711354273199853*^9, 
  3.711354376860388*^9, 3.711406137523192*^9, 3.7118368495422688`*^9, 
  3.711928255711564*^9, 3.711940651627939*^9, 3.71194076662216*^9, 
  3.7128675210090303`*^9, 3.713150240820551*^9, 3.717279516856483*^9, 
  3.733800922314109*^9, 3.740257995154105*^9, 3.74026578820607*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Apply to the wave function", "Subsection",
 CellChangeTimes->{{3.7086577271692142`*^9, 3.708657735417101*^9}, {
  3.708741149522561*^9, 3.708741149906157*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coefListFull", " ", "=", " ", 
   RowBox[{"generateCoefList", "[", "vars", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plainWavesListFull", " ", "=", " ", 
   RowBox[{"generatePlainWaveList", "[", "vars", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"partScatLeftRule", " ", "=", " ", 
   RowBox[{"scatterLeft", "[", "vars", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"partScatMiddleRule", " ", "=", " ", 
   RowBox[{"scatterMiddle", "[", "vars", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allCoefRules", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"partScatLeftRule", ",", "partScatMiddleRule"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allCoefRules", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "//.", "allCoefRules"}], ")"}]}], 
     "&"}], "/@", "allCoefRules"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"partScatRightRule", " ", "=", " ", 
   RowBox[{"scatterRight", "[", "vars", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allCoefRules", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"allCoefRules", ",", "partScatRightRule"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allCoefRules", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "//.", "allCoefRules"}], ")"}]}], 
     "&"}], "/@", "allCoefRules"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leftReflectionRule", " ", "=", " ", 
   RowBox[{"leftReflection", "[", 
    RowBox[{"vars", ",", " ", "L"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allCoefRules", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"allCoefRules", ",", "leftReflectionRule"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allCoefRules", " ", "=", " ", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
       RowBox[{"Simplify", "[", 
        RowBox[{"TrigToExp", "[", 
         RowBox[{"Simplify", "[", 
          RowBox[{"ComplexExpand", "[", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "//.", "allCoefRules"}], ")"}], 
           "]"}], "]"}], "]"}], "]"}]}], "&"}], "/@", "allCoefRules"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rightReflectionRule", " ", "=", " ", 
   RowBox[{"rightReflection", "[", 
    RowBox[{"vars", ",", " ", "L"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allCoefRules", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"allCoefRules", ",", "rightReflectionRule"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allCoefRules", " ", "=", " ", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "//.", "allCoefRules"}], ")"}]}], 
      "&"}], "/@", "allCoefRules"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"betaBarrScatRule", " ", "=", " ", 
   RowBox[{"betaBarrScat", "[", 
    RowBox[{"vars", ",", " ", "L"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allCoefRules", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"allCoefRules", ",", "betaBarrScatRule"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allCoefRules", " ", "=", " ", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "//.", "allCoefRules"}], ")"}]}], 
      "&"}], "/@", "allCoefRules"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphaBarrScatRule", " ", "=", " ", 
   RowBox[{"alphaBarrScat", "[", 
    RowBox[{"vars", ",", " ", "L"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allCoefRules", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"allCoefRules", ",", "alphaBarrScatRule"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"allCoefRules", " ", "=", " ", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "//.", "allCoefRules"}], ")"}]}], 
     "&"}], "/@", "allCoefRules"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", 
  RowBox[{
   RowBox[{"\[CapitalPsi]", "@@", "vars"}], ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.711922166736681*^9, 3.711922233501429*^9}, {
   3.711922279494424*^9, 3.7119223955123253`*^9}, {3.711922448989192*^9, 
   3.7119225380429*^9}, 3.7119227502090397`*^9, {3.711923019381145*^9, 
   3.7119230205730667`*^9}, {3.7119231852121983`*^9, 3.711923189403788*^9}, {
   3.7119232711330442`*^9, 3.711923295970686*^9}, {3.711923428019136*^9, 
   3.7119234350021133`*^9}, 3.71192352576088*^9, {3.711923776693883*^9, 
   3.711923785013178*^9}, {3.711924186929639*^9, 3.71192419272941*^9}, {
   3.711924260714123*^9, 3.711924265657811*^9}, {3.7119243102802353`*^9, 
   3.711924323441111*^9}, {3.711924358760713*^9, 3.7119244014568977`*^9}, 
   3.711924444501954*^9, {3.7119246805643272`*^9, 3.711924715196877*^9}, {
   3.7119248194828787`*^9, 3.711924839043479*^9}, {3.711925360070498*^9, 
   3.7119253734117327`*^9}, {3.711925716222335*^9, 3.711925726968285*^9}, {
   3.71192585934909*^9, 3.7119258660397253`*^9}, {3.711925896345189*^9, 
   3.711925903598575*^9}, {3.711926079335289*^9, 3.71192609814242*^9}, {
   3.711927410791644*^9, 3.711927445527154*^9}, {3.711927529042737*^9, 
   3.711927535999349*^9}, {3.7119283139117527`*^9, 3.711928323900963*^9}, {
   3.7119413147060547`*^9, 3.711941334304901*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
              RowBox[{"\<\"2\"\>", ",", "\<\"0\"\>"}]], 
             "[", "\<\"{k2, k1}\"\>", "]"}], "\[Rule]", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"c", " ", "m"}], "+", 
                 RowBox[{"\[ImaginaryI]", " ", 
                  RowBox[{"(", 
                   RowBox[{"k1", "-", "k2"}], ")"}], " ", 
                  SuperscriptBox["\[HBar]", "2"]}]}], ")"}], " ", 
               RowBox[{
                SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
                 RowBox[{"\<\"2\"\>", ",", 
                  TemplateBox[{"3"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 
                    7]& )]}]], "[", "\<\"{k1, k2}\"\>", "]"}]}], 
              RowBox[{
               RowBox[{"c", " ", "m"}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                RowBox[{"(", 
                 RowBox[{"k1", "-", "k2"}], ")"}], " ", 
                SuperscriptBox["\[HBar]", "2"]}]}]]}]}], ",", 
           TemplateBox[{"73"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{
            RowBox[{
             SubscriptBox["\<\"\[ScriptCapitalA]\"\>", 
              RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}]], 
             "[", "\<\"{-k2, -k1}\"\>", "]"}], "\[Rule]", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", 
               TemplateBox[{"4"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, FrameMargins -> 1, 
                  FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
               " ", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, FrameMargins -> 1, 
                  FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}], 
              RowBox[{"k2", " ", 
               RowBox[{"(", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 1, 
                   FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                ")"}], " ", 
               RowBox[{"(", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 1, 
                   FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                ")"}]}]]}]}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {2., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 471, 33541579013031026349, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{58., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 471, 33541579013031026349, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{45., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 471, 33541579013031026349, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{83., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[471]]], "Output",
 CellChangeTimes->{
  3.708913725279937*^9, 3.7089204695129013`*^9, 3.711312665962582*^9, 
   3.7113145107287703`*^9, 3.7113182014955683`*^9, 3.711319298729397*^9, 
   3.711319877681635*^9, 3.711320295435482*^9, 3.711321533592082*^9, 
   3.711322419584558*^9, 3.711334890517035*^9, 3.711334934421728*^9, 
   3.711336419233967*^9, 3.71133766178728*^9, 3.7113379093131247`*^9, 
   3.711339285913488*^9, 3.711340713468007*^9, 3.711354273249432*^9, 
   3.7113543769098167`*^9, 3.711406137572722*^9, 3.711836849592366*^9, {
   3.7119223539766607`*^9, 3.711922396393901*^9}, 3.711922457517536*^9, {
   3.711922502157058*^9, 3.711922538748811*^9}, 3.711922750600985*^9, 
   3.71192302154804*^9, 3.7119231898799973`*^9, 3.711923296957589*^9, 
   3.711923437539462*^9, 3.711923527747878*^9, 3.711923785459537*^9, 
   3.711924194740705*^9, 3.711924266061796*^9, {3.7119243619047327`*^9, 
   3.7119244017930717`*^9}, 3.711924445902791*^9, 3.711924716935564*^9, 
   3.711924850430294*^9, 3.711925929565708*^9, 3.7119261030922623`*^9, {
   3.711927419003993*^9, 3.7119274476733847`*^9}, 3.711928257457677*^9, 
   3.7119283246560698`*^9, 3.7119406525698643`*^9, 3.711940767501272*^9, 
   3.7119411716063557`*^9, 3.711941338526482*^9, 3.7128675223288116`*^9, 
   3.713150242485236*^9, 3.7172795182408733`*^9, 3.7338009236802187`*^9, 
   3.740257996331121*^9, 3.740265789384378*^9}],

Cell[BoxData[
 RowBox[{"{", "2", "}"}]], "Output",
 CellChangeTimes->{
  3.708913725279937*^9, 3.7089204695129013`*^9, 3.711312665962582*^9, 
   3.7113145107287703`*^9, 3.7113182014955683`*^9, 3.711319298729397*^9, 
   3.711319877681635*^9, 3.711320295435482*^9, 3.711321533592082*^9, 
   3.711322419584558*^9, 3.711334890517035*^9, 3.711334934421728*^9, 
   3.711336419233967*^9, 3.71133766178728*^9, 3.7113379093131247`*^9, 
   3.711339285913488*^9, 3.711340713468007*^9, 3.711354273249432*^9, 
   3.7113543769098167`*^9, 3.711406137572722*^9, 3.711836849592366*^9, {
   3.7119223539766607`*^9, 3.711922396393901*^9}, 3.711922457517536*^9, {
   3.711922502157058*^9, 3.711922538748811*^9}, 3.711922750600985*^9, 
   3.71192302154804*^9, 3.7119231898799973`*^9, 3.711923296957589*^9, 
   3.711923437539462*^9, 3.711923527747878*^9, 3.711923785459537*^9, 
   3.711924194740705*^9, 3.711924266061796*^9, {3.7119243619047327`*^9, 
   3.7119244017930717`*^9}, 3.711924445902791*^9, 3.711924716935564*^9, 
   3.711924850430294*^9, 3.711925929565708*^9, 3.7119261030922623`*^9, {
   3.711927419003993*^9, 3.7119274476733847`*^9}, 3.711928257457677*^9, 
   3.7119283246560698`*^9, 3.7119406525698643`*^9, 3.711940767501272*^9, 
   3.7119411716063557`*^9, 3.711941338526482*^9, 3.7128675223288116`*^9, 
   3.713150242485236*^9, 3.7172795182408733`*^9, 3.7338009236802187`*^9, 
   3.740257996331121*^9, 3.740265789395711*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"normCoefRules", " ", "=", " ", 
    RowBox[{"Sort", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"allCoefRules", "/.", 
       RowBox[{
        RowBox[{
         SubscriptBox["\"\<\[ScriptCapitalA]\>\"", 
          RowBox[{"\"\<2\>\"", ",", "\"\<0\>\""}]], "[", "\"\<{k1, k2}\>\"", 
         "]"}], "\[Rule]", "1"}]}], "]"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.711928339117186*^9, 3.711928371244351*^9}, 
   3.71286759297423*^9, 3.7128678420189753`*^9, {3.712868061224617*^9, 
   3.7128680783363323`*^9}, 3.712868406445298*^9, 3.740258040882637*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"#", ",", " ", 
      RowBox[{"normCoefRules", "[", 
       RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", " ", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", " ", 
      RowBox[{"Length", "[", "normCoefRules", "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"{", 
      RowBox[{"45", ",", "46"}], "}"}], "]"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.712868415351295*^9, 3.71286848241192*^9}, {
   3.7128685359980993`*^9, 3.712868557434855*^9}, 3.740258037560418*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"normCoefRules", "[", 
      RowBox[{"[", "45", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "/", 
    RowBox[{
     RowBox[{"normCoefRules", "[", 
      RowBox[{"[", "46", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "//", "FullSimplify"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.733801117624941*^9, 3.733801140903417*^9}, 
   3.740258034128848*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"tmp", "=", 
    RowBox[{
     RowBox[{"ComplexExpand", "[", 
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Denominator", "[", 
           RowBox[{
            RowBox[{"normCoefRules", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "-", 
          RowBox[{"Denominator", "[", 
           RowBox[{
            RowBox[{"normCoefRules", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ")"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xL", "\[Rule]", " ", 
          RowBox[{"-", "0.5"}]}], ",", " ", 
         RowBox[{"xR", "\[Rule]", " ", "0.5"}], ",", 
         RowBox[{"m", "\[Rule]", "1"}], ",", " ", 
         RowBox[{"\[HBar]", "\[Rule]", "1"}], ",", " ", 
         RowBox[{"L", "\[Rule]", "3"}], ",", " ", 
         RowBox[{"\[Beta]", "\[Rule]", "4"}], ",", 
         RowBox[{"\[Alpha]", "\[Rule]", "4"}], ",", " ", 
         RowBox[{"c", "\[Rule]", "1.5"}]}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"ContourPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", "tmp", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"k1", ",", " ", 
         RowBox[{"-", "0.1"}], ",", " ", "8"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"k2", ",", " ", 
         RowBox[{"-", "0.1"}], ",", " ", "8"}], "}"}], ",", " ", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<k1\>\"", ",", " ", "\"\<k2\>\""}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"DensityPlot", "[", 
      RowBox[{
       RowBox[{"Abs", "[", "tmp", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k1", ",", " ", 
         RowBox[{"-", "0.1"}], ",", " ", "8"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"k2", ",", " ", 
         RowBox[{"-", "0.1"}], ",", " ", "8"}], "}"}], ",", " ", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<k1\>\"", ",", " ", "\"\<k2\>\""}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}]}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.711928392012889*^9, 3.7119285924616413`*^9}, {
   3.711928654805479*^9, 3.711928672817547*^9}, {3.711928738697291*^9, 
   3.711928754883257*^9}, {3.7119288150799923`*^9, 3.711928866551238*^9}, {
   3.711928902838822*^9, 3.7119289249451303`*^9}, {3.711929045975181*^9, 
   3.711929230131607*^9}, {3.7119293620349817`*^9, 3.711929378922596*^9}, 
   3.7119296985464563`*^9, {3.711929825357925*^9, 3.711929830733468*^9}, {
   3.711929917774952*^9, 3.711929919501156*^9}, {3.711930037451868*^9, 
   3.7119300416518927`*^9}, {3.712003915725135*^9, 3.712003920291375*^9}, {
   3.712868631226802*^9, 3.712868666269556*^9}, {3.712868717866455*^9, 
   3.7128687329379683`*^9}, {3.712868765857901*^9, 3.7128688942496033`*^9}, 
   3.7402580310464497`*^9}],

Cell[CellGroupData[{

Cell["Apply rules", "Subsubsection",
 CellChangeTimes->{{3.708915437629581*^9, 3.70891544284485*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"2", "-", 
    RowBox[{
    "P", " ", "scattering", " ", "in", " ", "the", " ", "same", " ", 
     "well"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"psiNew", " ", "=", " ", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalPsi]", "@@", "vars"}], "//.", "partScatLeftRule"}], 
       ",", "coefListFull", ",", " ", "Simplify"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"psiNew", " ", "=", " ", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"psiNew", "//.", "partScatRightRule"}], ",", "coefListFull", 
       ",", " ", "Simplify"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"psiNew", " ", "=", " ", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"psiNew", "//.", "partScatMiddleRule"}], ",", "coefListFull", 
       ",", " ", "Simplify"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Reflections", " ", "of", " ", "the", " ", "particles", " ", "in", " ", 
     "the", " ", "left", " ", "well", " ", "from", " ", "the", " ", "left", 
     " ", "wall"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"psiNew", " ", "=", " ", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"psiNew", "//.", "leftReflectionRule"}], ",", "coefListFull", 
       ",", " ", "Simplify"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Reflections", " ", "of", " ", "the", " ", "particles", " ", "in", " ", 
     "the", " ", "right", " ", "well", " ", "from", " ", "the", " ", "right", 
     " ", "wall"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"psiNew", " ", "=", " ", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"psiNew", "//.", "rightReflectionRule"}], ",", "coefListFull", 
       ",", " ", "Simplify"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Scattering", " ", "of", " ", "a", " ", "particle", " ", "against", " ", 
      "\[Beta]"}], "-", 
     RowBox[{"barrier", " ", "to", " ", "the", " ", "left"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"psiNew", " ", "=", " ", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"psiNew", "//.", "betaBarrScatRule"}], ",", "coefListFull", 
       ",", " ", "Simplify"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Scattering", " ", "of", " ", "a", " ", "particle", " ", "against", " ", 
      "\[Alpha]"}], "-", 
     RowBox[{"barrier", " ", "to", " ", "the", " ", "left"}]}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"psiNew", " ", "=", " ", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"psiNew", "//.", "alphaBarrScatRule"}], ",", "coefListFull"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"2", "-", 
     RowBox[{
     "P", " ", "scattering", " ", "in", " ", "the", " ", "left", " ", "well", 
      " ", "again"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"psiNew", " ", "=", " ", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"psiNew", "//.", "partScatLeftRule"}], ",", "coefListFull"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Reflections", " ", "of", " ", "the", " ", "particles", " ", "in", " ", 
     "the", " ", "left", " ", "well", " ", "from", " ", "the", " ", "left", 
     " ", "wall", " ", "again"}], "*)"}], "\n", 
   RowBox[{"psiNew", " ", "=", " ", 
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"psiNew", "//.", "leftReflectionRule"}], ")"}], ",", 
      "coefListFull"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "psiNew", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7086575400289993`*^9, 3.708657549075492*^9}, 
   3.708657742801331*^9, {3.70865780396071*^9, 3.708657854576138*^9}, {
   3.708658122845796*^9, 3.708658123126082*^9}, {3.708658162949625*^9, 
   3.7086581921103573`*^9}, {3.7086582348680763`*^9, 3.70865823847648*^9}, {
   3.708658300644967*^9, 3.7086583105716143`*^9}, {3.708658342141614*^9, 
   3.708658352747685*^9}, 3.708658423162755*^9, {3.708658466305472*^9, 
   3.7086585515687428`*^9}, {3.7087241670646973`*^9, 
   3.7087241708388968`*^9}, {3.708724813721096*^9, 3.708724817264142*^9}, {
   3.708724853567684*^9, 3.7087248569837227`*^9}, {3.708724926448709*^9, 
   3.708724949758258*^9}, {3.708725052278613*^9, 3.708725110023694*^9}, {
   3.708740225845077*^9, 3.7087402272925577`*^9}, 3.708740279764991*^9, {
   3.7087403178281107`*^9, 3.708740349788321*^9}, 3.708740438596958*^9, {
   3.7087406075457563`*^9, 3.7087406126325083`*^9}, {3.708741065972513*^9, 
   3.708741087768351*^9}, {3.708741201083756*^9, 3.70874121055407*^9}, {
   3.708741272162705*^9, 3.708741341203351*^9}, {3.708741395544788*^9, 
   3.7087414326239967`*^9}, 3.708741821155991*^9, 3.708741877280953*^9, {
   3.708742132172255*^9, 3.7087422277119207`*^9}, {3.7087422969856367`*^9, 
   3.708742298713134*^9}, {3.708742554256295*^9, 3.7087425562948112`*^9}, 
   3.708742595212122*^9, 3.708742878472885*^9, {3.708742935668923*^9, 
   3.708742936234652*^9}, {3.7087439895255632`*^9, 3.7087440659404993`*^9}, {
   3.7087441016625767`*^9, 3.708744106358616*^9}, {3.7087445276877813`*^9, 
   3.70874453492021*^9}, {3.708744594670911*^9, 3.708744648254325*^9}, {
   3.708804621507415*^9, 3.708804674305461*^9}, {3.7088062602416983`*^9, 
   3.708806275810004*^9}, {3.708809140132023*^9, 3.708809231698989*^9}, {
   3.708809280267168*^9, 3.708809280794249*^9}, {3.708811712073123*^9, 
   3.708811743257361*^9}, 3.708811798122078*^9, {3.7088902921503363`*^9, 
   3.708890294858129*^9}, {3.708896828408186*^9, 3.708896919266562*^9}, {
   3.708899720347232*^9, 3.708899759450679*^9}, 3.708899886929817*^9, {
   3.7089001188315163`*^9, 3.7089001446789017`*^9}, {3.708900174838642*^9, 
   3.708900176605918*^9}, {3.70890083140781*^9, 3.708900867102857*^9}, {
   3.708900959462875*^9, 3.708900961501912*^9}, 3.708901049942563*^9, {
   3.7089014051061697`*^9, 3.708901409841847*^9}, 3.708901462137998*^9, 
   3.708902319721394*^9, {3.708902464903659*^9, 3.708902492833355*^9}, {
   3.708902700790094*^9, 3.708902702380726*^9}, {3.70890279632452*^9, 
   3.708902817638088*^9}, {3.708902847756239*^9, 3.708902874803392*^9}, {
   3.7089029330195847`*^9, 3.7089029769299507`*^9}, {3.708903038227021*^9, 
   3.708903067513297*^9}, {3.708912412636621*^9, 3.708912525347219*^9}, {
   3.708912571051166*^9, 3.708912587610569*^9}, {3.7089126448509283`*^9, 
   3.708912650945475*^9}, {3.708912719441203*^9, 3.708912720441003*^9}, {
   3.708912788536787*^9, 3.708912789696044*^9}, {3.708913674568009*^9, 
   3.7089137152515907`*^9}, {3.708913754391685*^9, 3.708913755823802*^9}, {
   3.708914014982305*^9, 3.708914024491726*^9}, {3.708914078484913*^9, 
   3.7089140969885817`*^9}, {3.708914155692134*^9, 3.70891415690693*^9}, {
   3.708914306481616*^9, 3.708914341100309*^9}, {3.708914757108179*^9, 
   3.7089147632605467`*^9}, {3.708914984955452*^9, 3.708915033426775*^9}, 
   3.70891510934835*^9, {3.708915227592971*^9, 3.7089152304317017`*^9}, {
   3.708915289087699*^9, 3.708915294439267*^9}, {3.708915812283299*^9, 
   3.70891581677293*^9}, 3.708916075875812*^9, {3.713648817582499*^9, 
   3.7136488386933327`*^9}, {3.7136497700696087`*^9, 3.7136497780919533`*^9}}],

Cell[BoxData[
 RowBox[{"{", "2", "}"}]], "Output",
 CellChangeTimes->{3.711318233603848*^9, 3.711319328339835*^9, 
  3.7113198866684303`*^9, 3.711320307627495*^9, 3.71132155849249*^9, 
  3.711322444736042*^9, 3.7113348996232233`*^9, 3.711334942626165*^9, 
  3.711336425595405*^9, 3.711337668414579*^9, 3.711337914224064*^9, 
  3.711339290246019*^9, 3.7113407189281178`*^9, 3.7113542770211678`*^9, 
  3.711354382088067*^9, 3.711406142894693*^9, 3.711836855540669*^9, 
  3.7119282629121103`*^9, 3.711940658551963*^9, 3.711940775109976*^9, 
  3.7119411833979883`*^9, 3.7128675287918673`*^9, 3.713150299068293*^9, 
  3.7136488520757103`*^9, 3.713649789243911*^9, 3.717279535921818*^9, 
  3.733800941414554*^9, 3.740258027996035*^9, 3.740265796942194*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"boxL", " ", "=", " ", "3"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"d", "=", "0.5"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"psiSpecific", " ", "=", 
   RowBox[{"psiNew", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[HBar]", "\[Rule]", "1"}], ",", 
      RowBox[{"m", "\[Rule]", "1"}], ",", 
      RowBox[{"xR", "\[Rule]", "dd"}], ",", " ", 
      RowBox[{"xL", "\[Rule]", 
       RowBox[{"-", "dd"}]}], ",", " ", 
      RowBox[{"\[Beta]", "\[Rule]", "\[Alpha]"}], 
      RowBox[{"(*", 
       RowBox[{",", " ", 
        RowBox[{"\[Alpha]", "\[Rule]", "4"}], ",", " ", 
        RowBox[{"\[Beta]", "\[Rule]", "4"}], ",", " ", 
        RowBox[{"xL", "\[Rule]", 
         RowBox[{"-", "d"}]}], "\[IndentingNewLine]", ",", " ", 
        RowBox[{"xR", "\[Rule]", "d"}]}], "*)"}], ",", 
      RowBox[{"L", "\[Rule]", "boxL"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Subscript", "[", 
         RowBox[{"\"\<\[ScriptCapitalA]\>\"", ",", " ", 
          RowBox[{"ToString", "[", "2", "]"}], ",", 
          RowBox[{"ToString", "[", "0", "]"}]}], "]"}], "[", " ", 
        RowBox[{"ToString", "[", 
         RowBox[{"{", 
          RowBox[{"k1", ",", "k2"}], "}"}], "]"}], "]"}], "\[Rule]", "1"}]}], 
     "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"psiGen", " ", "=", " ", 
    RowBox[{"psiNew", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[HBar]", "\[Rule]", "1"}], ",", 
       RowBox[{"m", "\[Rule]", "1"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\"\<\[ScriptCapitalA]\>\"", ",", " ", 
           RowBox[{"ToString", "[", "2", "]"}], ",", 
           RowBox[{"ToString", "[", "0", "]"}]}], "]"}], "[", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"{", 
           RowBox[{"k1", ",", "k2"}], "}"}], "]"}], "]"}], "\[Rule]", "1"}]}],
       "}"}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"ENTER", " ", "K", " ", "VALUES", " ", "HERE"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solRule", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k1", "\[Rule]", "1.9944027797228112`"}], ",", 
     RowBox[{"k2", "\[Rule]", "3.6691075760466774`"}], ",", 
     RowBox[{"xL", "\[Rule]", "0"}], ",", 
     RowBox[{"xR", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"\[Beta]", "\[Rule]", "0"}], ",", 
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{"L", "\[Rule]", "3"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WF", "[", 
    RowBox[{"xx1_", ",", " ", "xx2_"}], "]"}], "=", " ", 
   RowBox[{"(", 
    RowBox[{"psiGen", "/.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"solRule", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1", "\[Rule]", "xx1"}], ",", " ", 
          RowBox[{"x2", "\[Rule]", "xx2"}]}], "}"}]}], "}"}], "]"}]}], 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WFFULL", "[", 
    RowBox[{"xxx1_", ",", " ", "xxx2_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"WF", "[", 
     RowBox[{"xxx1", ",", " ", "xxx2"}], "]"}], " ", "+", " ", 
    RowBox[{"WF", "[", 
     RowBox[{"xxx2", ",", "xxx1"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"intRange", "=", 
   RowBox[{
    FractionBox["L", "2"], "/.", "solRule"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"WF2Norm", "=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{"WFFULL", "[", 
       RowBox[{"xxx1", ",", "xxx2"}], "]"}], "]"}], "2"], ",", " ", 
    RowBox[{"{", 
     RowBox[{"xxx1", ",", " ", 
      RowBox[{"-", "intRange"}], ",", " ", "intRange"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"xxx2", ",", " ", 
      RowBox[{"-", "intRange"}], ",", " ", "intRange"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.711316444415019*^9, 3.711316447646626*^9}, 
   3.711404673098282*^9, 3.711407473995468*^9, 3.711407674658848*^9, {
   3.711408359514028*^9, 3.71140836057526*^9}, {3.711408507442004*^9, 
   3.7114085115578423`*^9}, {3.711408946036401*^9, 3.7114089489135447`*^9}, {
   3.7114090953951187`*^9, 3.711409096399881*^9}, {3.711409629845913*^9, 
   3.711409631458647*^9}, 3.711940978303184*^9, {3.711941550807652*^9, 
   3.7119415561823177`*^9}, {3.713150342179307*^9, 3.713150359468726*^9}, {
   3.7132375486222343`*^9, 3.7132375528869534`*^9}, {3.713237594237446*^9, 
   3.713237634052169*^9}, {3.713238760914898*^9, 3.713238774665946*^9}, 
   3.71364821563902*^9, 3.713649803104452*^9, {3.714343161647238*^9, 
   3.7143432346214314`*^9}, {3.714344420809754*^9, 3.714344421193471*^9}, {
   3.740265815154428*^9, 3.740265834856411*^9}, {3.740265869073518*^9, 
   3.740265929806985*^9}, 3.7402660233517857`*^9, 3.7402660733192797`*^9, 
   3.7402661229681664`*^9, 3.740266166159748*^9, 3.740266204695457*^9, 
   3.7402662349103622`*^9, {3.74026631922129*^9, 3.740266321291686*^9}, {
   3.740266417757003*^9, 3.740266420058425*^9}, 3.740266609354042*^9, 
   3.740266671883669*^9, 3.740266722002553*^9, 3.740266928176628*^9, {
   3.740267080997698*^9, 3.740267110315402*^9}, {3.741041418993184*^9, 
   3.741041430602409*^9}}],

Cell[BoxData["131.4199673540795`"], "Output",
 CellChangeTimes->{
  3.740266620894813*^9, 3.7402666739331512`*^9, 3.740266726209475*^9, 
   3.740266940613328*^9, {3.74026709360633*^9, 3.740267121838904*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"psiTG", " ", "=", " ", 
   RowBox[{"Limit", "[", 
    RowBox[{"psiGen", ",", " ", 
     RowBox[{"c", "\[Rule]", "Infinity"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.714343275851903*^9, 3.7143432942043037`*^9}, 
   3.71434338609938*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.740258067214855*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"psiTGSpecific", " ", "=", " ", 
   RowBox[{"psiTG", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xL", "\[Rule]", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"xR", "\[Rule]", "0"}], ",", " ", 
      RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", " ", 
      RowBox[{"\[Beta]", "\[Rule]", "0.5"}], ",", 
      RowBox[{"k1", "\[Rule]", "2.5329851369691925`"}], ",", 
      RowBox[{"k2", "\[Rule]", "1.699277326654876`"}]}], " ", "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiTGSameMom", "[", 
   RowBox[{"xx1_", ",", "xx2_"}], "]"}], " ", "=", " ", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"psiTG", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xL", "\[Rule]", 
        RowBox[{"-", "0.5"}]}], ",", 
       RowBox[{"xR", "\[Rule]", "0"}], ",", " ", 
       RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", " ", 
       RowBox[{"\[Beta]", "\[Rule]", "0.5"}], ",", " ", 
       RowBox[{"x1", "\[Rule]", "xx1"}], ",", 
       RowBox[{"x2", "\[Rule]", "xx2"}]}], "}"}]}], ",", " ", 
    RowBox[{"k2", "\[Rule]", "k1"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WFTG", "[", 
    RowBox[{"xx1_", ",", "xx2_"}], "]"}], " ", "=", " ", 
   RowBox[{"psiTGSpecific", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "\[Rule]", "xx1"}], ",", " ", 
      RowBox[{"x2", "\[Rule]", "xx2"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WFTGFULL", "[", 
    RowBox[{"xxx1_", ",", "xxx2_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"WFTG", "[", 
     RowBox[{"xxx1", ",", "xxx2"}], "]"}], " ", "+", " ", 
    RowBox[{"WFTG", "[", 
     RowBox[{"xxx2", ",", "xxx1"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intRange", "=", 
   FractionBox["boxL", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"WFTGNorm", " ", "=", " ", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{"WFTGFULL", "[", 
       RowBox[{"xxx1", ",", "xxx2"}], "]"}], "]"}], "2"], ",", " ", 
    RowBox[{"{", 
     RowBox[{"xxx1", ",", " ", 
      RowBox[{"-", "intRange"}], ",", " ", "intRange"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"xxx2", ",", " ", 
      RowBox[{"-", "intRange"}], ",", " ", "intRange"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.714343391456037*^9, 3.714343460713831*^9}, 
   3.714343929710746*^9, {3.714343961133956*^9, 3.714344394152873*^9}, {
   3.71434458373626*^9, 3.714344599942375*^9}, 3.714344692449683*^9, {
   3.7143447472299356`*^9, 3.714344867092307*^9}, {3.7143449609561777`*^9, 
   3.714344983434958*^9}, {3.714345193802195*^9, 3.71434520302724*^9}, {
   3.714345456738085*^9, 3.714345471256421*^9}, 3.714345613537786*^9, 
   3.714346584837975*^9, {3.7143600821614656`*^9, 3.714360084967189*^9}, {
   3.7172796872563868`*^9, 3.717279717216984*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], ":", 
  " ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.717279595799584*^9, 3.717279634963661*^9, 
  3.733801009744718*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], ":", 
  " ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(18\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(xxx1\\)\[NoBreak] near \[NoBreak]\\!\\({xxx1, xxx2}\\)\
\[NoBreak] = \[NoBreak]\\!\\({\\(\\(-0.4999941544692901`\\)\\), \
\\(\\(-0.11690729939561806`\\)\\)}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(720.3682594192738`\\)\[NoBreak] and \
\[NoBreak]\\!\\(0.0018179967427001884`\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.717279595799584*^9, 3.717279634963661*^9, 
  3.733801012109329*^9}],

Cell[BoxData["720.3682594192738`"], "Output",
 CellChangeTimes->{{3.714343967733571*^9, 3.714343996888105*^9}, {
   3.714344257588389*^9, 3.714344394452126*^9}, 3.714344445048319*^9, 
   3.7143445631769457`*^9, 3.714344608889874*^9, 3.7143447134471807`*^9, 
   3.714344779396708*^9, 3.71434492604047*^9, 3.71434500093183*^9, 
   3.7143452220250587`*^9, 3.71434549174806*^9, 3.714345632931994*^9, 
   3.714346606733206*^9, 3.714360103011343*^9, 3.7172795934772*^9, 
   3.717279632576902*^9, 3.7338010121143017`*^9}]
}, Open  ]],

Cell[BoxData["psiTGSpecific"], "Input",
 CellChangeTimes->{{3.714360164954319*^9, 3.714360167352206*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PiecewiseExpand", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"WFTGFULL", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"HeavisideTheta", "\[Rule]", "UnitStep"}], "}"}]}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.714347051141815*^9, 3.7143470529905148`*^9}, {
  3.714347343645072*^9, 3.71434736107141*^9}, {3.714347606716964*^9, 
  3.714347652172348*^9}, {3.714347708607679*^9, 3.7143477135996943`*^9}, {
  3.714347887803233*^9, 3.714347888561572*^9}, {3.714347922293539*^9, 
  3.714347929052544*^9}, {3.714348042704967*^9, 3.7143480924509373`*^9}, {
  3.7143589868709373`*^9, 3.7143589916611633`*^9}, {3.7143590612192173`*^9, 
  3.714359079936777*^9}, {3.714359203386696*^9, 3.714359204527459*^9}, {
  3.7143593236867523`*^9, 3.71435932871834*^9}, {3.714359370806082*^9, 
  3.7143593750852757`*^9}, {3.7143597253432913`*^9, 3.7143597269718437`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.733801020499805*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmp", " ", "=", " ", 
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"Limit", "[", 
      RowBox[{"psiSpecific", ",", " ", 
       RowBox[{"k2", "\[Rule]", "k1"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k1", "\[Rule]", "4.584283389177119`"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WFGround", "[", 
   RowBox[{"xx1_", ",", "xx2_"}], "]"}], ":=", 
  RowBox[{"tmp", "/.", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "xx1"}], ",", " ", 
     RowBox[{"x2", "\[Rule]", "xx2"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"WFGround", "[", 
  RowBox[{"xx1", ",", "xx2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.711332813615431*^9, 3.7113328448239813`*^9}, 
   3.711332882392437*^9, {3.711332936072425*^9, 3.711332971878848*^9}, {
   3.711333114966255*^9, 3.711333203124096*^9}, {3.711333545850033*^9, 
   3.711333566104967*^9}, {3.71133364086458*^9, 3.711333666280628*^9}, {
   3.711333796087946*^9, 3.7113338332550373`*^9}, 3.711333949478574*^9, 
   3.711335219760845*^9, 3.7113352743928747`*^9, {3.711335408254784*^9, 
   3.711335408445691*^9}, {3.711335508388815*^9, 3.7113355197005033`*^9}, {
   3.711335594180769*^9, 3.711335598475709*^9}, 3.711337065992255*^9, {
   3.7113381731228113`*^9, 3.711338184227666*^9}, {3.711338633558734*^9, 
   3.7113386344138527`*^9}, {3.711339045419999*^9, 3.711339045611451*^9}, 
   3.711339388792716*^9, 3.711340187786211*^9, 3.711340232807725*^9, 
   3.7114066184584703`*^9, {3.7114066887289743`*^9, 3.711406695129986*^9}, 
   3.7114067488253193`*^9, 3.7114068134993963`*^9, 3.711747463180304*^9, 
   3.711940347996154*^9, {3.711940549543603*^9, 3.7119405549921722`*^9}, {
   3.711940842414555*^9, 3.711940857887786*^9}, 3.7119409322084427`*^9, 
   3.711941094277039*^9, 3.712003961309895*^9, 3.71200406379566*^9, {
   3.714343266439599*^9, 3.714343269589138*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.4027240353929389`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.3452074782731026`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["2.718281828459045`", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "-", 
        RowBox[{"4.584283389177119`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      "xx1"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"4.584283389177119`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      "xx2"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SuperscriptBox["2.718281828459045`", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"9.168566778354238`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        "xx1"}]], " ", 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
        RowBox[{"1.`", " ", "xx1"}]}], "]"}], " ", 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "xx1"}], "]"}], " ", 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
        RowBox[{"1.`", " ", "xx2"}]}], "]"}], " ", 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "xx2"}], "]"}], " ", 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1.`"}], " ", "xx1"}], "+", "xx2"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.9478639372962578`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.318675314973149`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SuperscriptBox["2.718281828459045`", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"9.168566778354238`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        "xx2"}]], " ", 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
        RowBox[{"1.`", " ", "xx1"}]}], "]"}], " ", 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "xx1"}], "]"}], " ", 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
        RowBox[{"1.`", " ", "xx2"}]}], "]"}], " ", 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "xx2"}], "]"}], " ", 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1.`"}], " ", "xx1"}], "+", "xx2"}], "]"}]}]}], ")"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.71200397939069*^9, 3.712004081802066*^9, 
  3.712867550279784*^9, 3.713150325083612*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test all boundary conditions", "Subsubsection",
 CellChangeTimes->{{3.7113164164229383`*^9, 3.711316420598391*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"WFFULL", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["boxL", "2"]}], ",", " ", 
    RowBox[{"-", 
     FractionBox["boxL", "2"]}]}], "]"}], "/.", 
  RowBox[{
   RowBox[{"HeavisideTheta", "[", "0", "]"}], "\[Rule]", 
   "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WFFULL", "[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", " ", 
    FractionBox["boxL", "2"]}], "]"}], "/.", 
  RowBox[{
   RowBox[{"HeavisideTheta", "[", "0", "]"}], "\[Rule]", 
   "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WFFULL", "[", 
   RowBox[{
    FractionBox["boxL", "2"], ",", " ", 
    FractionBox["boxL", "2"]}], "]"}], "/.", 
  RowBox[{
   RowBox[{"HeavisideTheta", "[", "0", "]"}], "\[Rule]", 
   "1"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7113189631773853`*^9, 3.7113189646293697`*^9}, {
   3.711318997821683*^9, 3.711319005765883*^9}, {3.711319049110417*^9, 
   3.711319058367305*^9}, {3.71131939296416*^9, 3.711319397601211*^9}, {
   3.71131947756278*^9, 3.711319497840138*^9}, 3.7113195911131763`*^9, {
   3.7113196739032784`*^9, 3.711319696246276*^9}, {3.7113197264479628`*^9, 
   3.711319824758719*^9}, 3.7113199246209593`*^9, {3.711320685582737*^9, 
   3.711320715972334*^9}, {3.711332644107153*^9, 3.7113326468097343`*^9}, {
   3.7136498335885477`*^9, 3.7136498361397467`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.3322676295501878`*^-15"}], "+", 
  RowBox[{"5.551115123125783`*^-17", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.711836871710923*^9, 3.7119282777138987`*^9, 
  3.711940669844232*^9, 3.7119407880741158`*^9, 3.712867550474306*^9, 
  3.713150325380023*^9, 3.7135637693410463`*^9, 3.713649844807707*^9}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.711836871710923*^9, 3.7119282777138987`*^9, 
  3.711940669844232*^9, 3.7119407880741158`*^9, 3.712867550474306*^9, 
  3.713150325380023*^9, 3.7135637693410463`*^9, 3.71364984481569*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.3514866699449549`*^-15"}], "+", 
  RowBox[{"7.10179686006197`*^-15", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.711836871710923*^9, 3.7119282777138987`*^9, 
  3.711940669844232*^9, 3.7119407880741158`*^9, 3.712867550474306*^9, 
  3.713150325380023*^9, 3.7135637693410463`*^9, 3.7136498448240147`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DensityPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"WFFULL", "[", 
          RowBox[{"xx1", ",", "xx2"}], "]"}], 
         RowBox[{"1", 
          RowBox[{"Sqrt", "[", "WF2Norm", "]"}]}]], ")"}], "]"}], "2"]}], "/.", 
    RowBox[{
     RowBox[{"HeavisideTheta", "[", "0", "]"}], "\[Rule]", "1"}]}], ",", " ", 
   
   RowBox[{"{", 
    RowBox[{"xx1", ",", " ", 
     RowBox[{"-", "intRange"}], ",", " ", "intRange"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"xx2", ",", " ", 
     RowBox[{"-", "intRange"}], ",", " ", "intRange"}], "}"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x1\>\"", ",", " ", "\"\<x2\>\""}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", " ", 
   RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.711315216034666*^9, 3.711315266891324*^9}, {
   3.711315322450629*^9, 3.71131538271424*^9}, {3.711315422204255*^9, 
   3.711315423289559*^9}, {3.711315473417899*^9, 3.711315482960535*^9}, 
   3.711315718040646*^9, {3.711316106859295*^9, 3.711316118514007*^9}, 
   3.711318877600428*^9, 3.7113200450239487`*^9, {3.711320081139503*^9, 
   3.711320141874567*^9}, {3.711320178567779*^9, 3.711320179119299*^9}, {
   3.711322493276195*^9, 3.711322502498228*^9}, 3.711322536808634*^9, {
   3.711322605139574*^9, 3.7113226395142736`*^9}, 3.711332672991207*^9, {
   3.711333215286903*^9, 3.711333216565683*^9}, {3.711335350244725*^9, 
   3.711335351359964*^9}, {3.7113355498872004`*^9, 3.7113355578857927`*^9}, {
   3.711336079243863*^9, 3.711336080296636*^9}, {3.7113362095376387`*^9, 
   3.7113362106874313`*^9}, {3.7113367306382523`*^9, 3.71133673157839*^9}, {
   3.7113370459202213`*^9, 3.711337047118894*^9}, {3.7113372632724333`*^9, 
   3.7113372643885403`*^9}, {3.711337395348772*^9, 3.7113373966993923`*^9}, {
   3.711337882981298*^9, 3.71133788435837*^9}, {3.711338203925194*^9, 
   3.711338206227832*^9}, {3.711338712857342*^9, 3.711338713798402*^9}, {
   3.711339064092486*^9, 3.7113390732293053`*^9}, {3.711339793760407*^9, 
   3.711339795036004*^9}, {3.711340839231769*^9, 3.71134088466591*^9}, {
   3.711353778262629*^9, 3.7113537875011997`*^9}, {3.711353844180196*^9, 
   3.711353845709874*^9}, {3.7113539161942873`*^9, 3.711353923513826*^9}, {
   3.711402012003132*^9, 3.7114020145050993`*^9}, {3.711403817235244*^9, 
   3.711403819558866*^9}, {3.7114041505590267`*^9, 3.7114041522750397`*^9}, {
   3.7114057136690617`*^9, 3.711405719658224*^9}, {3.7114058466336317`*^9, 
   3.711405847056698*^9}, {3.7114059488007*^9, 3.7114059642746477`*^9}, 
   3.711406042495639*^9, 3.7114060766067553`*^9, 3.711406655012143*^9, 
   3.711406891022471*^9, 3.711407003032695*^9, {3.7117478629499826`*^9, 
   3.711747866547708*^9}, 3.711940382598434*^9, {3.711941038398418*^9, 
   3.711941045493829*^9}, 3.7119416128667717`*^9, {3.711942126121326*^9, 
   3.711942127536769*^9}, {3.711942212527014*^9, 3.7119423010180883`*^9}, {
   3.7120039909638433`*^9, 3.7120040005975523`*^9}, {3.712004117642254*^9, 
   3.712004121913575*^9}, {3.713150482497108*^9, 3.713150489868638*^9}, {
   3.71315065468717*^9, 3.7131506588067713`*^9}, {3.713150706574469*^9, 
   3.713150706965464*^9}, {3.713237752252467*^9, 3.713237785514595*^9}, {
   3.713238531691874*^9, 3.713238549614811*^9}, {3.7132388507565107`*^9, 
   3.7132388537144127`*^9}, 3.713239327757744*^9, 3.713239381772127*^9, 
   3.713239418012178*^9, 3.7132395027793818`*^9, 3.713648508418908*^9, {
   3.714344624995606*^9, 3.7143446439439697`*^9}, {3.714344942663412*^9, 
   3.7143449451956663`*^9}, {3.7143452453436832`*^9, 
   3.7143452515936613`*^9}, {3.740258087389092*^9, 3.740258103795833*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJy13W/orlte1/GD/RODeiISGozGaCWETyzKpF8hFBMhoSXhAxUbxSINhhAT
omGiVCIEkywQxayUKKSESfq38W+KSNNo6mlP7rPPnnPOnDln5ux9zpzZkyS1
932v1/c31/ue1T1B/Z5cvK91Xde9ruu3PuvPd33Xd33O1/7VL/u6T3nmmWde
fMszzzw9nv8+dsfxx3/+93/LH/ktj4ff9T1f/vAdn/bR4S/5i3/jG/7F73xz
+Dd/wQ8998Knf2T4p3/9PX/hLZ/5xvDf+ZmnJ14f/lPf9da3fddbHw1/6ld9
6ZOffDj895/+3Fd9ePgzXnn6i68O/6NThj44/Ls/8+kFHxj+/n/1x77wl7/t
xeHf87anP/j+4X/6JLf//nufH/59T972ySsM//m3PH3gfx/+yqfZ+5Znh7/6
6ev/vf86/PYn9OYP/Jfh9777G++++xt/fvh9T37tXd/zk8O/8PTn3/Vvhr/9
255+oO8ffuu3n/gGf+R8/fDD8/OGXzz/3vA3nfMz/JfO+R1++/l9hr/6/L7D
f+D8PYb/+fl7Df/e8/cc/ifn7z38Oef/x/D3nf9fw591/n8O/8Pz/3v4t5/L
w/CfPpeX4e84l6fhnz2Xt+Hfdi6Pw3/yXF6H//a5PA//1Lm8D69jeXTRI31g
+sD0gekD0wemD0wfmD4wfWD6wPSB6QPTB6YPTB+YPjB9YPrA9IHpA9MHpg9M
H5g+MH1g+sD0gekD08fkd+lj3mfpA9MHpg9MH5g+MH1g+sD0gekD0wemD0wf
mD4wfWD6wPSB6SPtQvlCB7hH+sD0gekD0wemD0wfmD4wfWD6wPSB6QPTB6YP
TB+YPjB9YPrA9IHpA9MHpg9MH5g+MH1g+sD0gekD08fkd+lj3mfpA9MHpg9M
H5g+MH1g+sD0gekD0wemD0wfmD4wfWD6wPSB6SP9pPJFu1Ad4B7pA9MHpg9M
H5g+MH1g+sD0gekD0wemD0wfmD4wfWD6wPSB6QPTB6YPTB+YPjB9YPrA9IHp
A9MHpo/J79LHvM/SB6YPTB+YPjB9YPrA9IHpA9MHpg9MH5g+MH1g+sD0gekD
00fGDeWLflLbheoA90gfmD4wfWD6wPSB6QPTB6YPTB+YPjB9YPrA9IHpA9MH
pg9MH5g+MH1g+sD0gekD0wemD0wfmD4mv0sf8z5LH5g+MH1g+sD0gekD0wem
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
4rY2TmXj8jUOWeMuNc5M42o0jkDXTXedaNfFdR1Q1z3Uz7t+rfXjq99S/TQ6
L915uM471M5au1LH0R03tJ/UdqE6wD3Sx+R36WPeZ+kD0wemD0wfmD4wfWD6
wPSB6QPTB6YPTB+YPjB9YPrA9IHpI3G9yxdxjBu3tXEqG5evccgad6lxZhpX
o3EEum6660S7Lq7rgLruoX7e9WutH1/9luqn0XnpzsN13qF21tqVOo7uuKH9
pLYL1QHukT7mfZY+MH1g+sD0gekD0wemD0wfmD4wfWD6wPSB6QPTB6YPTB+Y
PhLnvnwR17txjBu3tXEqG5evccgad6lxZhpXo3EEum6660S7Lq7rgLruoX7e
9WutH1/9luqn0XnpzsN13qF21tqVOo7uuKH9pLYL1cHkN8fxL1k8/iWLx79k
8fiXLB7/ksXjX7J4/EsWj3/J4vEvWTz+JYvHv2Tx+JcsHv+SxeNfsnj8SxaP
f8ni8S9ZPP4lR76Ic9+43o1j3LitjVPZuHyNQ9a4S40z07gajSPQddNdJ9p1
cV0H1HUP9fOuX2v9+Oq3VD+Nzkt3Hq7zDrWz1q7UcXTHDe0ntV2oDuZ9chz/
xMXjn7h4/BMXj3/i4vFPXDz+iYvHP3Hx+CcuHv/ExeOfuHj8ExePf+Li8U9c
PP6Ji8c/cfH4Jy4e/8QjX+z70Dj3jevdOMaN29o4lY3L1zhkjbvUODONq9E4
Al033XWiXRfXdUBd91A/7/q11o+vfkv10+i8dOfhOu9QO2vtSh1Hd9zQflLb
heoA90gfmD4wfWD6wPSB6QPTB6YPTB+YPjB9YPrA9IHpA9NH9gUqX+yD0n0f
Gue+cb0bx7hxWxunsnH5GoescZcaZ6ZxNRpHoOumu0606+K6DqjrHurnXb/W
+vHVb6l+Gp2X7jxc5x1qZ61dqePojhvaT2q7UB3gHukD0wemD0wfmD4wfWD6
wPSB6QPTB6YPTB+YPjB9ZJ+s8sW+QN0Hpfs+NM5943o3jnHjtjZOZePyNQ5Z
4y41zkzjajSOQNdNd51o18V1HVDXPdTPu36t9eOr31L9NDov3Xm4zjvUzlq7
UsfRHTe0n9R2oTrAPdIHpg9MH5g+MH1g+sD0gekD0wemD0wfmD4wfWTfuPLF
PlndF6j7oHTfh8a5b1zvxjFu3NbGqWxcvsYha9ylxplpXI3GEei66a4T7bq4
rgPquof6edevtX589Vuqn0bnpTsP13mH2llrV+o4uuOG9pPaLlQHuEf6wPSB
6QPTB6YPTB+YPjB9YPrA9IHpA9NH9lEsX+wb132yui9Q90Hpvg+Nc9+43o1j
3LitjVPZuHyNQ9a4S40z07gajSPQddNdJ9p1cV0H1HUP9fOuX2v9+Oq3VD+N
zkt3Hq7zDrWz1q7UcXTHDe0ntV2oDnCP9IHpA9MHpg9MH5g+MH1g+sD0gekD
00f2FS1f7KPYfeO6T1b3Beo+KN33oXHuG9e7cYwbt7VxKhuXr3HIGnepcWYa
V6NxBLpuuutEuy6u64C67qF+3vVrrR9f/Zbqp9F56c7Ddd6hdtbalTqO7rih
/aS2C9UB7pE+MH1g+sD0gekD0wemD0wfmD4wfWSf3fLFvqLdR7H7xnWfrO4L
1H1Quu9D49w3rnfjGDdua+NUNi5f45A17lLjzDSuRuMIdN1014l2XVzXAXXd
Q/2869daP776LdVPo/PSnYfrvEPtrLUrdRzdcUP7SW0XqgPcI31g+sD0gekD
0wemD0wfmD4wfWTf6fLFPrvdV7T7KHbfuO6T1X2Bug9K931onPvG9W4c48Zt
bZzKxuVrHLLGXWqcmcbVaByBrpvuOtGui+s6oK57qJ93/Vrrx1e/pfppdF66
83Cdd6idtXaljqM7bmg/qe1CdYB7pA9MH5g+MH1g+sD0gekD00f2YS9f7Dvd
fXa7r2j3Uey+cd0nq/sCdR+U7vvQOPeN6904xo3b2jiVjcvXOGSNu9Q4M42r
0TgCXTfddaJdF9d1QF33UD/v+rXWj69+S/XT6Lx05+E671A7a+1KHUd33NB+
UtuF6gD3SB+YPjB9YPrA9IHpA9MHpo/wxT7s3Xe6++x2X9Huo9h947pPVvcF
6j4o3fehce4b17txjBu3tXEqG5evccgad6lxZhpXo3EEum6660S7Lq7rgLru
oX7e9WutH1/9luqn0XnpzsN13qF21tqVOo7uuKH9pLYL1QHukT4wfWD6wPSB
6QPTB6aP8KxbpI/uw959p7vPbvcV7T6K3Teu+2R1X6Dug9J9HxrnvnG9G8e4
cVsbp7Jx+RqHrHGXGmemcTUaR6DrprtOtOviug6o6x7q512/1vrx1W+pfhqd
l+48XOcdametXanj6I4b2k9qu1Ad4B7pA9MHpg9MH5g+MH2EZx0vfWD66D7s
3Xe6++x2X9Huo9h947pPVvcF6j4o3fehce4b17txjBu3tXEqG5evccgad6lx
ZhpXo3EEum6660S7Lq7rgLruoX7e9WutH1/9luqn0XnpzsN13qF21tqVOo7u
uKH9pLYL1QHukT4wfWD6wPSB6SM869rpA9MHpo/uw959p7vPbvcV7T6K3Teu
+2R1X6Dug9J9HxrnvnG9G8e4cVsbp7Jx+RqHrHGXGmemcTUaR6DrprtOtOvi
ug6o6x7q512/1vrx1W+pfhqdl+48XOcdametXanj6I4b2k9qu1Ad4B7pA9MH
pg9MH+GJ80AfmD4wfWD66D7s3Xe6++x2X9Huo9h947pPVvcF6j4o3fehce4b
17txjBu3tXEqG5evccgad6lxZhpXo3EEum6660S7Lq7rgLruoX7e9WutH1/9
luqn0XnpzsN13qF21tqVOo7uuKH9pLYL1QHukT4wfWD6CE/cE/rA9IHpA9MH
po/uw959p7vPbvcV7T6K3Teu+2R1X6Dug9J9HxrnvnG9G8e4cVsbp7Jx+RqH
rHGXGmemcTUaR6DrprtOtOviug6o6x7q512/1vrx1W+pfhqdl+48XOcdamet
Xanj6I4b2k9qu1Ad4B7pA9NHeOIA0QemD0wfmD4wfWD66D7s3Xe6++x2X9Hu
o9h947pPVvcF6j4o3fehce4b17txjBu3tXEqG5evccgad6lxZhpXo3EEum66
60S7Lq7rgLruoX7e9WutH1/9luqn0XnpzsN13qF21tqVOo7uuKH9pLYL1QHu
kT7CExeLPjB9YPrA9IHpA9MHpg/cfdm7D3X33e0+o91XsfvIdd+s7hPUfVG6
D0Tj3jfOd+MaN45r41Y2Tl/jkjUOU+PONM5G4wp0HXXXjXadXNcFdR1E/b7r
51q/vvox1W+j89Sdl+s8RO2utTN1XN1xRPtNbSeqix6/9vT93rzzj0/v+dE7
v3H6f/3IDf7gie8MO7qvx7eevt9Hht9/+n++MfzPTt/79eH3np5/b/iUrXf+
6Bdj+cHys/vdHv0+9vvY72G/h/3e7r36Oz36Pez3sN/Dfm/33foe/Z0ev/6k
l0fDfm93XY/n+uPh9nyP5//na9vzPf65kz4/NPzq6X1+8Qa/eKoffmX4faf6
4JXhrzzfP/wr5+PN7nd6/NXz84b9Pv6aU33y8rDfx34f+/3d7/R4rn9fHn7f
+X2Hnz/xSzdYfub6lZ953soPlp/d7/b4a+ffG6bPYz7vDssv/vpTeX3hBss/
lv+5f+V/8rHyv8tXj19z/r3hc/m8Pyz/WP7xB07/7wc3c//KP5b/+b2Vfyz/
u3z1eNbrg2H5xfKL5Rf/yFm/w3/lfP8N9j7z/PU+2PtMvtb77PLZo/xi+cXy
h993Tr/B8ovld56/8ovlF/f/3O/YfMof/olz/TqsPsbPn7/3DZZ/LP9Y/rH8
47Zz1VXLactBv3Pfq0flBR/rz3vzftj7Ye+Hvd+uHqiuWm6brx6P9d3dqX+x
/GP5n/tX/rH8H3/nlYt6qr+Le3z+nJ9h+cPyN9ev/M1zVv6w+nj3Oz3+wun6
/zx8/8w3WH6w/MxzVn6w+hXLz+53e/yV0/P/07D8YPnZ3dcjPeLqtNf1qL7B
5/L6xg3+vHN/afiszzeHz/37jw63nm291t/t8YfP/akbLD9YfrD8YPnB7Re3
39p+Zes1esDyg+Vn7l/5wR0XtF/efnP7te139qi/i9U3WH26G5d0XNB+e/vV
/d0eXzmXt2Hfb3ddj/SAq9vqpvf1SE+4/eT2W1uPtt5qvVHd9nd7VL/8n/vp
9y7q7daTraf6XNyj+gzrv8zzV38Mt11vO9h2pfV469Hmo0f1/fQjVvmd61Z/
Bss/br+p/ZC2220H2+40Xz0q35j+5vdX/ud5K/9Y/o/Xv3mbnn5q+4HtV7Uf
0na99Vp12vfyPvN7632w98EdF7Rf3X5r+4HtN7Ve63duPnuUX9xxVsct7fe3
X91+auvZltuWg37H5rNH3xd3XNtxYsddHbd0XFBdtZz2/9x89Th6XFw7QMfh
Hdd2nNhxVuut1gPVVfPVo/oO105Su0XtBh2Hd1zberW/26P+5c5OU7tJ7Ra1
A7Tf2t/pUX92ZxeqnaZ2kvbT20/u7/T4+Wd71/Z8j3/5bE/bnu9R/xK339nr
etT/w/p/WP2N269uv7b9yv5Oj34P+71dv7395vZb+x79nR793m5c0H55+8Vt
5/rd+l793R7193fjko4Let/p59/1+I7jsusP6w+X9aP1j6Vj6frv0rF09mDp
WDr7r3QsnT6lY+n0Kh1Lp1/pWLr6RDqWrr6TjqWrv6Xj4/d7kO/3YNKVn8P/
5xOMq6Rj85T6N9KxdOMH6djz9eelY+n629KxdPW/dCxd+yUdS6cX6Vi69lk6
lq5/IR1P+Vvt+ZS/xZO/1X5O/hYf0x/fRD/DnfcyX7w7T1+YnjD9YHoxjqWP
mdda86UtT+5XXrDygZUHzzO/3fkz5813d15Neu0S5neb39ot3G++t3YE6fKP
d/VWv3Pz2fk67zX7WWWe0Hn/L+x9XTf7Obnffk6Lla+y5+o/ScfS9W+k42v1
dMtZ3wPzX+g8pfPKJ9b/cR17AWafw0e72e0+ejNfur4XPo6rbnnmJQ/jmDeG
pfu+2PfEvt+1dqy67HfA2hesPcHajzKdaz8mv4f5i0fTfhzndx9k/vV+5m3v
T7r+63yf9f/D/n/Y/w/7/2H6nfnn9f/D2oP5vVX/z/df9X1ZftX30o92gUcZ
Zz/KOPbR/P/n+67//7V+SetdrP9R5tej/yFdecDS1eMzXs/10vn3SHe9dOUH
Ky9Y+cDsJS0P871WecDKAz7a4R9NecBHO/Ojqb+x/gXWn8BHu9xtuvwf599u
r5fOn2feZ10vXfnCyhNWnsavYZWn+f1Vnub/t8Z7833WeA4br7W8tZ/bdh3z
B8P8wbDyxI+Mf9jx//3KlFPlqeVP+nG+8bXMN7425We+5yo/831W+cHKD1Z+
sPKDlR+svODjvim36fJ33Dfi4ZSfxumXrvw0TnnL29hNDnbW12KXfC12vls7
S8vLfI9VXrDy0nT5k+75xvOux9fGTdfqsfrpKGfKn3Tl7Vg+Xplyq3y5X/k6
+r3cnfuVJ6w8YeVp7DarPGHlCStPWH+3LD+zj85KV76kzz4imWfpvg+d93C/
8jR2t1Weakd0/8TtWjxxilK+GlemdrXG1ajdS7ryJT/K07Vxdts9fK1dVK7b
Lrbewsrb0S/s3kV5mu+7ytN8/1WesPKElR+s/GD+plj5kT/lR7ryI135+cTz
cq9M+ZnfW+Vn7OKHealbO7nr+Z9i5aflq3G5agduXKLaZaUrP1j5uWZ3aT95
129WftqPkq78tN8kXblueWq9VL+boz/crZ8If+j5/qs81Y9k9rlf5Uu68oWV
L2x8W5Y/5U+68idd+ZOu/ElX/lre5vtmHoZ/c9MbB7TlsXEQOy/SOHCdd2gc
rM4DSB+7+3o/9lbXs7di9taWz9r9Wv7aT9eOKX+7fnnbQeOx4/XPDfO/b3nU
b1P+6mclfeZD4sckP8qjdOURK49Nd/9xX9OXp3xKP+7r+PKUT+nquynPq37D
ncc8xhG/TW9c5s57Ni5t5xEbl7PzdI1L2Hmw+X+s8uj9tJctj8f8vzGsPNYO
XTvzzm5gfQlWXtuPb78LWy9S/1Tn9f+x8lo/S+nKb/0WpSu/9QuUrvxKN98x
5fdsHxxWXrHyelgH8yTdeyi/rlc/tnxOeV7lE9cPwPqQpjeOfv0GGke88/SN
o9x578aR7byy9JmXXe+vfW55xcrrMb9vDCuv2DzTMX+Ph3fzItfsXLVjdBza
comtd6q/svPWP9WPWbryXb9h6cp3/XClq2/r5zp+Cat8S69fofLd9PoZHtZ1
jZ/fg7G3uF/9jNXHWPnHyj+un471UU3vPir16+k+EvWbaRz9+qk0jnj9PhpH
uX4Vvo/yL135x8r/MX9vDCvvx99/PLyb57tmt62druWy6wKUY8f64TuvPNfv
3VF5rh+5+5Vn6Ud7/oM71vdh5Rcrv5539AN9ED/MB1M+sfI5+okfHHtN07vP
Vf3mus9P/c66z0n9urrPQ/2oGue+fkm+v/5ryydWPrHyeczPG8PK5/H3Ht+0
/HVeoP3SXT9Vfdt1NNKV166/kO67dD2G9KN9+v6F37fy1nTl9miPvh/78/0p
b1h5w0f79P079RM92pufi735fuzNt/uq1U+z+0rVz7H76tSPsPuK1G/P9zja
o+/HHn1/yhcef5XF41fi/VZ5wtfsMMdx9+W4Wj+660fUS8pb18NIV966Pka6
8tb1Mi1n2H1dN+N8rzvaI59cfx7/DKv/5v+xyqvnHO2V96a8YuUVH+2X97Ie
8pa7D2z9rrsPZv2euw9g/Yq7D1r9crsPVP1eZ53gwQ/vXtZn3ou9+17s2/di
b7o75bfXNx0r3/P+q3wf11M9Snl5dDHvsZsX6bxJ7dy1U9bORB9dVymdPrre
yvPoo+uv2q7jlvOjvevuxfmjfevulH8s3fPpoeUfK//4aA+7G3vqLXv+0b51
N/aGZ2Pvuhv7w+0+sPX77z6Y9avvPoCT/u6P96u9G7/W2/T6lfZ66ez30o/2
r9s4vNLpw/30gOkB08O8/9IDnnn6dX39CDqP3HnBzuvULs+ud7HOeaXTQ9fr
1W7QcRYWr2K+96qPWz6x+rbseeyt0pXH7kPfdTbdh7vrXroPcdedSJ91DdJX
/7I834N/tnEqP/KVPvterHTlU/rE/ff9V/lsXPSW58aFlq58er7yiZXH4/s8
vjnWX3s/pPq11K+h89SdZ+w8kfJYO2rrua5rlD/lR7ry03Vgyqny03VZ3be9
66QmP6t+Gn1a3xCedaSrvGDlAysfs+51lQ/pykf98qUrH/Wbl658SFc+pCsf
WPmYdVirfLQ81I+pfiz1S+i8cscZ7fe1X3csH5ftZOudlhPMnu5+5Ue68tN1
g9KVn/n/rvoDqz/K7tdfk47n+63yM/lf5QfPvlIpT9JnXx3ldZUn6bOviO9p
fcVKn30VUh6O5fnx8M6O0XX/x/Lw3HYcqr/U8tF+TtuV4fWcrnt2vtcpD65T
H0x5Wfqf5yz9lz3X//u4juNB1j28MMye0f+3dP9v6f7f0v2/532X/o/l6c1h
/8/j7z0e3s0TNA6GdP3hnd3VeLF2V+n+/x23tR+L+3/0nK5Td959mF5dh+f5
6/+J/T+P63AeZN3KC8P+n1POlv6w+FFY/Kiui5n8rv+PdP5sO79wfsw7P+pr
fsPX/FKv+Sle80O75ld0zW/k2rx/51n1b3fzssZ7nZeVrny3HOGuC8PuNx7o
uq3Gwe26q8YB7Top6cpH1y1dWwfTdQ1N53d8iM/3cXHC6odfP/P6LeP6saov
Ou9y/F4Psi7shWH1ZXmev+rLmbdcLJ0+pWPp2scpX4ulq2+lY+n6W9KxdOUF
Ky/HdcxvDB/iz33cujzph3h0H7eOTrry0vLRdVBd59J1I41PYZ2J/+du3qzz
ap23uGZnvmbXu2b3kM/GxXC+12kf5vstdp32YsrT4q6Tl467j3rXrbufPbrr
xqVrb47/35durq1j67qlrgO65jdVP5Wm10+l86Sdl+q8Qe2yuP8n/geNF+K8
+7D+nOvw2CHW/3fsFOv/idmj+v+V7v8p3f/z2rrBrhu75ldbP8mmG7ew//R6
6drH+r3Vj6Pz2p1H7DxP7Yi183Tc3nFY09tP9/z+n/Xfy+73/x670rIH9f8v
nX2y5WHGhau+n/wvlq6+l46lq/+lY+naA+lYuvZBOr62DrXrRnbrSHbrArqO
oH7bvd64ml9r/cClK6/1862fW/2K6mfR+Dwtj7UrNl1+2IUaB2z82pd9vvGG
pHdcyb7keuXR9fono7fFE19o9U8mv4vn+6z+yfipLp5x7SqfWHnEyh9W3rDy
dW0dM+Y/t1uXxN+z5U268tT4R+wwylPjM9XPu36R9UNrPKXO+3Xeo+VLfpSn
xoOSrjw1PlTtSrU7tJ1qvTbfd/UPyhNHafUP5vcXN07K2NlX+cLK0+RvlSes
PGHlCStP19a5d53jbt2j8tV1btKVr65rk658Ne6tdOVrt+6k6wh2fg2dJ255
Uy8oX43nJV35anwv6cpX431Jr91y1w9qO9l6qumNy+X39H9cjxv3yPX6sy2v
3ce+5XXmfcyvmGcU12bxxJlZPPMli2e+ZPEuzsJu3a3y2HWV0pXH3TpK5bHl
r35a9cva+XEpfy2f0pXHxmuTrjw2fpt05bHx3KTPvMZ6v53d7do4q/3yiQ+3
6r9dv33mc8zzyVfK68wLrvvwxLNa12Hp+vvSlW/pxm8t79KV98bVkq58T/5W
+Z55cvPZi3dxPzD/9pbXrsPsOrr6rdZPdefXOn6PK135lK58Nv6edOWz8fik
K5+Nzyddeew8TMtj7b7XxvXY+KPjgo4bW26kG09i5alx67yP8tQ4cdKVp8Zl
Gz/jVZ6uxYG5Fieg67y7brd+/fXj3/n9K0+Nsy1deWp8Q+nKU+MdSleeGv+w
fiadp2v56TxP5wmu2X2w8tP4im0nW34af1H+nXe8dl55a1xE6cpb4xBK115K
179r+WocoWtxSBqHonEEui6865y6rmm3Dkp5bFx66cpj41NKVx4br1K68tj4
ldKVx8azrB9B54k7r9h5qdrNd3Z05bHxM+XvaFe4tUt2XNHy2naw6Z6vXmq8
TunKWeN3SndsHM/x8135xPp7rlN+8TGe3oOJ+zb5P5fn4Yl3sn6ncbJ2cXQa
V6VxMbputOtEd+tKJ77JSlfepY+/+Uo/rjt6ccp745tKH3/zw/s9mHTlvfFP
6zfV8l2/h86Td551Nw+kPDfease9Lb8dh7Sf1nit3nf80Ve68it9/NFXuvIr
veV0/M99v5z3Hnj80dd144++ePzRFx/jJ74w5fsYp/Xx8Ix/1u82ztsu7lbj
RDVuUOO+dN39bh2+8t99WqTPut2VrvxLn3WRK135l678Nx6u9BlvHd73wYUf
YMt7/cDq11O/j6bX72Pimq151c777OZBd3afjrOb7v1n/OT9lh6k00PjA0tv
OZ7xufc1Pl884/PFMz5PuvdTvnu99PFvk/9V3lueGyeucc4a96pxRnZxR4zn
u8+RdOW78Y+lK9+Nhyx91m+udOVb+qznXOkznjOuXOW3fqz1W5z3W/bvps/z
zv3bCz+1+sV0Hr7l+5pdvHbL2oUaD9r36Dh7xh2+7yqfk/9VPpvuefzner33
448pffzJV/r4ky+e9ZMp39Jn/aT/1yrPjXvYuIaN09e4Srs4S+xTjTfND035
bjxs6eOP/u6P9+N/ZdLHH32lK9/Suw575/e/WydQP9v6XY8/Ozviun7iBK3y
Xj/d+lHWb6R+JdfmcWp3r12zdiA8/uSLx398sfLofcZ/fKUrj/I/8RcWj/+4
/KzyhieezLq+cdwah2vieRzWLb02fqrKU+OZS1eeGt9c+uyvlnVRu3VSEw8k
60rqd991JH5P+Wl5mzhSq/zUj7t+m/Urqt/RtXm+ztPUDl67YdvhXbu8q/d2
9WTLnfLoeuUPK3++l/J2zM/jm5Yv97Gv7+LAKW/dt1B64zCpf7queLfOuOuQ
u0606+yUt65Tkq68NV6+dOWt8fPr518/tPqpXfNj6Lxx5/06r9JxyW6c0n7c
+DunvEkff+eUr9Zbjevv+vF/PvQzHw83LqD6pnG4GvdjFwekcUIaJ6Hr0ruO
mH1ot25T+em6TenKz27dmvKzWze081u85tdSv4LOC3ferXaZnZ2m41rjit04
QXnqOEG68rTrh6mHdu2icnPM35tzvfJ2zN/j4V2cycYJbBykXVykxp1pHI7G
Peg6deWt64KPcZeevShfXUd0zS+6fq/X/KDql1K/gs7b1i69s1PX7lc7ifLV
cad05avlqeUBKw/H5z0eVr/s4q417lXjCjXOSuNadN12163Wb71+yTs/tPoJ
1c/j2jgG23+7+6g47z2w73kc9z++6fdrXLDGXarfff2ur/nZ1S+q+cT2E+8+
Lc7LBz7an2/3OZF+tEe/cbHOxPt0fxfp3q/7vUhvvpzvPi/Oy2/3YZEuv9Kv
rVOadUIrvetmvF/3k5F+9Ju+9Ztvvbyrt6/pWDnDvlf3p5HuO3S/Guk9XosL
di2O0rU4Ntfikqj/d3EdGveh69y7Dr7rjrsuuetOr61D7Dq2o/308ZSP7u/T
dRCd19nN+1yzmx/t85d2xtoha7epXafj7I7DOy661s9tP6TtUOtR5be6xXTW
/ZEO3/eZj905fp/L47qu+8LM+jXrFtivMPsVNh7E+ldY/wrrX2HtBdZeYPrD
9HbM34Nh5QtrP7D2A2s/sPYT699g43esf4OV3/k+q7zO81b5PPLt/833tE7E
9+x+N9hzOi9kXxTlHSvfuP9n4xPMflK/AfuGeL/ZT2X9Pvb72O/jliv2pV2c
UP9/7P+P1adYf9nzvB/2frjrMtmzMft1/RD9nvKAfa/J3/pe2Pea91vfC1dn
3VeJ/WQXt3zmr1c6vTUucOOuYt8b+97H+5+d5/ve2PeeOP3re+PpTyzuukX+
r5h9tusm5Gfmk1c6PddPtH542P8P+/9h/7953vr/YeNXv8/+tqsnq/PGlW+c
8MZt9v85Xv/sPM//A/t/YP8P7P/RdSj1o8X1s/X9sO+Hjdc83/fCvlftiO7X
fuK2M913pHHUP3Fc62fnft8L+174GB/ttfleXTfWdTn1e6/f8czzrO/Z/Qyw
98dtV1svdN8V+cTsD8c48s8O+x7Y98Dev+vkuu6o60bq51+/68bjx+03tN3w
/t1Hpvt8dB8GfIwf9sq8/8SbX++PvX/XbXYdYNdZNf47Nn71POObXT/J+3Zf
HDzzJ+t64wHpM3+y0r3Pbl2/9+s6Rqy+brz+7nvr+u84t3OT7v2x99/1C1sv
VufeH3u/xh0wz8m/Xbr3wd6n+wi73/yKdO+HvR/2fvinzu93s+v3th/Udrrt
Aj03njO/BN9nF2ekcRm67pw/Lfb98KyzW6x/43kzP7/SfS/se2HfZzcOaL+w
/Rb9Q35Fvo9074e9H/Z+jYfredov6d4Pez/s/bD32/Vr1U+7OD+N8zL+eYu9
z6ybWu/T+Kued+y/3J/3wd4Hy3/jq7ZebdzmvtesQzjn9yJO1cQvXe8r3fti
79v4ne4/7jd0L/sL3Zv37Tyi+71/54mk187v+zQ+Z/tt7Ze0Xe4+BNV5y3Xj
eM06jvV9J+7X+p7Y9+y6Xvcf9z+5Gz+SZ7P/ya1fSOfROs+BOw/i+zWeY8cd
7fe2X9d+Tdv5tpttR1pvzvP5q6x21vftunzXd93MrEfyfOuRFvu+nWfsvBD2
vRpvsOPgjtM6Tmg/uP3A9ovar2jcynne+l6NU9B1lbjr3MaPeKWPX+Xi8Uvz
++v71W+k8/qdp8Wdx/V9G6+vdoWOezvu6riicZgbl7blrN8RT1yLxRMnYHHX
qc46nZU+6yTkf33v+b31veuXWL+t+uFg36/x7Vrvt56qrnDjAOivdR2a62dd
z+JZF7F4/MwXj5/t4vFDXqy+83vstdj7Nv5b2+22a62XG18Nez888REXzzor
v2ddwGLzq/qB8otrJ6sdp3aEjpM7buw4quOQ9tvpD2sfsPw2Ppf02olrd+q+
O+0HWz9wnNd68WJdRP1o8ex/vZgesPoHq3+w98feH5s/wOYPxq625sGw7zV+
wKs9az+4/cj2s9pPaDwnrHx2HVTXkcz963ti4+SOQxsPqfskdZzSfn37xe03
Np4R9n5dl9p1htj74s5T1M5vPFu7SuMPdV+97mPWcW3HaR3XdFyA9SvaTred
aXyhxgPqOnLs+038IX5vi8evafH4pSweP4jF9IA7D1Q7s/Hzbt9e37d2jtoJ
Ou49Xv/sPL9xcNUXE5d71Rdz/6ovpp1b3wf7Ptj3wb4P9n1w58Vqd/c9ug9o
92Ws3ad2k8ZfaTs9dv5VH0wc6VUfND7K3L++B/Y9sO+BfQ/cecDOA03/ePH0
jxdP/3jx9I8Xd99K749bz+ziaDXeR+NxTHwT/dvF079dPP3bxdO/Xdx50M6D
zXjrEP/i4UU/Hbff0nai9eqMlxKPYeJlrPfDnaftPEXt7PqPMw7Tr0w/qu1W
66nGH+j6f9x5484bdh6q8yra19m3ZNW37ce239f17u5nv9jNY5un7Txm58U6
z9P11bOPSsYV7Xe3n9p+V9tR7yO9umC/wd4X6//s5u07z9153M4LHv17Xpz2
seOmjivaD+9628alxK0nx163eOx1i8det3jsdRs/BX4CndfvvHXnQbtec9Yz
rv5Dx+kdR3ac1fWZjfuM22/0vaS3HZl4/4snvv/iiee/WH3peb5n/aClj30g
37N+EZ3373rBWT8Xu1DtHNqTxjHvuA6339F6y/fpOpP6edcvF9dvd+z3G7+U
+oloT4772D57sd5Meu1k6vfG6W8cd9xxWvthbWfbLnXdRP2Uxx63rtd+dh4c
d59e9Wntqt1noHYI3HFn+5XtV7Uf0Xa3Omq56To579/1RJ33P9rhXxvuvKn6
pfMUteN336Hu89J9PbovA+44veOU9svbL20/rPV26yHfs+sKu64Lq688f+xN
i+tX0Hl2/fPOy3Ueq/NAnSfpPk7dN6f7pODaPTru6zin/fz2a9sPaLvYet73
7jrNrpvrd8bsfX7f99/5sdSvw3ip88adF+08YufhOi+Fa8euXa12po6zO67s
uKrjCP3K9rvaD2k7in1Pz/M9u36jfgOdZ+88cuddceftOg9Vu2PtcLVDdNzd
cWfbSe+LvW/XV9Qvon4EuHbB2kVqB/D7+Ng/vrQruh67vusNXFc7pP5tddP/
e79L89l81E8a18+ifgWdh++8Nj11HrLzbJ0X6jxH5wFqZ68du3bajlvaj2+/
s/2u9kPaLrfdaD1WHbactty0XOD4n49fOr9o/WHXGV9g9SlWn2LtG9Z/wPpX
mP0fs/9j409MT5ieML1j9SPWn8L639g4HRvnYuNALJ49O7L8iCMkP1h+sPxg
z/Fc5U+/Heu3y4f/m/Td/5FesOt3/2fXjz/q0hd2/65cuH/8L9f92P27cuR+
7PpdOZO+K3fSd+WQDnblUnrnqY5xkx7fdB/hiVO70rFj1yFN3Np1PZ51Maud
nHUzi/t/7v+x/5d+Z88/2g0eD7cc9P/q/qOd4fEFH+0Oj8fusCvnLdctty2H
LVctNy0nLRf9v2L1A2Z3wPoX2DgUG5dh4wisX4v1y7B+E9bvwP+39aZ6Z1eP
th6Tf/MV8t94+a3nsO/Bvu552POw79F46q03d/X62JnZn9dxV+/3/9x2QHnd
tQvSO089cZBX+q7cSN+VI99h9tVc1+/Kmf9Lv/PRDvf4Zlcu+3/u/8n9u3Lc
/6Prd+Vc+idb7vUz9W8dnd/Vm63nWm/htgttB1rvt55vPd56u/XsJ1tPthy2
3LWctVy13LQc9P/a/1v/T/gPPn37F1698/S/9cqXPL7zY9/79Ac/OPxHn+Tu
Z379A8P/8dQvfWn480/v80s3+HNP+f/V4c8+5fd9w7/jlL/nhv/uKT/PD3/q
qZy8f/hcLl4cPr3O2z46xy97+vpf+uYcT5/7yz8yx1861R9vzPEdp/HVd978
g9N3e334K07/90fzXr7L/zydeGX7nf7mqfi+fINdv/uOn3ISxAdusPt337lH
3wf7Ptjz8Z84re9+YY6+N/Y87HnY8/BPnXT9YI6ehz0Pex72/z/3A+7P/dj9
+LtP/6dfm6PyhD0Pn/sH/22OyiN2f9O/76TDX77zlSd9//Qcf/ak5383x125
wb4X9v/Fygf+66fq50PDH/2Bpxl5bfiLTuXu4fC3nq5/NPxjp+H168MfO93/
xvD/OAnhR+f4jlN99eNzvKbj3Xfa6bz/p373Hlsv+L/3/4p7bD3Sct5y2nLX
Y+uh6q66ablvOe6x9Vp1XB1WRz22Xmk9UB23nLYea73Uctx6sfXe/+9y3mPL
fY9/6OnrvOcjc/zmT3tacN6c4zvOx4t2xfketTO78194/p2Ldsn5HrVTu/Mf
Ob/H8Bed2rHvvGjnXNejdm93/myee33Y813n+2LpbVc9p8fz//XVKTfqj8fn
8nHnP5zLzw1WbpqunHme9D9+Lq8333oun1NusXTl2vOkv/Oso2lfz/FQXrj5
jf/19O+lOz95Pj9MN013v9+T7rzf6ZE+d+d/07neGP65c31w4zr5xeqFprtf
fne/06P6Z3f+PL5/fvjPnOu/G9fJL1YPNt398itdfne/6/ewerzp6mW/J93v
4bM94rk5an9258/2ifcNf9/5eOM67RSW7nr52z23R+3p7vwPno83zmtnsXTX
y490uqLTHz4fbz7r3N5Pu489D3/VuV9x0Y9yvkf9qt359577LRf9MOd7bD25
q7d29Zx2Q/qvnq+fduYzzs8ffu2cn4t+lvM96nftzn/T+Xtd9NOc79F33/2f
1KfSd+VgV276f+7Rdbvzyhfe6WCnG/npc3CP7tudV4+03mg9satX5E+6+kS6
erX1Xuu5Xb3o9/pc3KP7dufVb1i71Haj7cSuXZHf1pv9Hdyj5+zOq+/xrp3d
tcvy23ajz8U97voNu36G35e+67fs+jmeJ51Oa3dovwern9ofdl49pl5znfQe
Xbc7r/7rOLPncY/64bvzX3HuL1/0253vUT9+d/67z/35i36/83/4PO4Yu8uj
87hk+K+dxy3Dvj9WD+O3n+wBvzD8L0/2xvcO+/9i9SVWX+EvWfufdzxhvtGx
4wz3iXvV8YXz5m86npDu2HGG+6zn7PjCefNBHS9Id+w4wn3Kr/PK24wvVjq7
DP7m8/hxrsfSa+9TDj77bAe587tO7czDuV46lt5yo73816f8ffjOD57//5Pu
+dI9TzqW3nKoX4b9nnrC70n3vHLtmVOvrPSyeow9GvOXaD1mns790rF6lb27
9Sy/nfFTXvWsele667sPieeZD+g4bPYlWf4tzsuf32Ofb7vDT4Y/ifu1Q9Jd
331+mh/5MF9Ru+3EB1nHjtvcxz/HefMNbdePcXlv+yHaR+mu7z5cnveL5/Iz
7+858mG+peM2R/N27Re5/7gO5PnpJ0l3ffe98zz5ky/ziO3n8WM6rot5bvp9
0l3ffR09z+/Jr/7trFNfx47zjvE/7t5pv9d9+rGz7nvl1/P8vvxj6eqV1hu4
9Yx8yJfxAu55v+c+LF292XoQqwdbj2HPk18sv9jzcO//s+d2etbFd5zqPH8z
593f611nfUrHq9Idnb/WjrXd27Vju3Zv125da3eutRvX2olr9X7rWXz2r3s0
/VZ24KZ7v/P85+uTrn+Lpbtee4G1V0c79KuxO394+DPP3+9i/G9djfVWHd87
z8+j43vpjh33u+9av5OdXb+TnR17H/M93qfzP673PP1W34d9wfM6H+R66xTb
z8XqPeN69VrtUvxF3Nd9sjuv1P20nVdftp+N1eu123U/aO2AerXthnam9bbf
cb12q3bL7iesndPOtF2cfR1X/mo36H7GtcN2P1ntvna0/QT9CvnzPOc779X9
UGsn6L6Tzus31a7d/UL1s/RL2i/Tj/N+tUN0X8vOs3X/y9oRut9p5wlmH6P0
W/UD28/VL/Z+nqf9qb2i/d7ux9f5PL/vebt6UXq583vqhdYb6gXp6gXpnicd
d76w9RZuPdd6yfM639h6Dx/z83Db7lxrp9ru7NopflK1y3Sfhtpjuk9D5z27
n0PtMt1HofaY7qNQe0z3W6idpvsK1D7jPDuMI722395+9bV+7rV+6P/rfmT7
hdVpdXZNV9d00XLdcotPn/vHH99xfHQ+znn2oM5jsx+x+9S/Srpj563Zhxw7
78y+46ifq3+p36p/iaXrx2L9WP1P6Vi6/6/n0T9WPzXd87DnqW+k47H3rH6H
dO/T/Op3447Daj/CX3DqZ7xnfk992HTPx57vfV3v/VyPXe/9pGPp3rPc/5vv
4DnY+7nf+zS/WL7d7/2w+7Hf1266H6sPsHYXa5ebrt3vvID2vf2Y2pewdNf7
vd08h+s6n6+fp/9W/732A92vH4alu15+d/NCrsPq687ft98rXT8VS3e9/O3m
zfgbt98tXb8cS9fv9/u7eb9j3LZ7o2/jGM93vf6YdgcrZ+7rOAfrl2DlV72A
+SXTk3QsvX44Y9ddrH2RP/0oLL3X0632yPXyj6W7H7tf+yUdS9c+aofx5551
P/l1vfy5fvql63r5a/5dP/3KPB9r7ycuzjrWj6HxCpVT5Q4bF2LlqenWibI7
1I+AvcCRvaDtAFZPKh/S8dgPVnmRrvy13cFtN3Hrcde33cGulx/puOMK6dh6
GP9P6fho33h403YRt53H7BJtp7QH7RfUT4Luje9rj8DSlYv6Ee3Kya5c1W9L
PYulqxflZ+dXpT6eenOx++vHpr3A0tXz8rPzE/Nc6c43P55XPz/tJ5aunZO/
nR+d59aPwf2d5/J7tRvgzrPpVxg3KEdYOcLm3Ywr1FP1L8D0Mf4Kq37D9IHV
l01XD2PjFnqSPuPqlX6s519NO/DqRTsz7dbKp3p67JLrfXHrfez+2jXHr3ml
e1/p2nHviduOuL/tHHZ925W2O9j18ut69Yvrsev7f8HSfZe2032f/n6/C65d
Y/briB8J+4MjuwP7QP1C2BP4b9SfW7qj53Tc26P1qeL2OR73FXg03PMT32xx
z1vf6rz4PdIdnXed+xylOzov/k+vd177pB21vnbiaK+j8+Ix4p73HO2u9bnS
HZ0XjwOrz45x+l+e9N7nd9SL6jfpjs57HvY85/2ufPS+iSe1uOfZY3HPn9rX
Zz42dmblTLuhPWY3Zx/UrrlfuvulH/f/uv+J+5FP7pfufu20dP1Q6TOPsdaV
W/foevO8rlfvTbyxdd/EF1vc8xPvcrHnu87z1ZO9z3n14qy/XOmOzk/80MV+
z3V+r89zn/PsfNZ3Snd0XrwS7Pdc5/f6PPf5v/f/jM37YOvExdV0dN46cefF
R524qevovOvc5yjd0Xn9auetP+79zrvOfY7SHZ23HrnXz74Ha536xIPN+X43
etM/Pa63fWmOzptHOaz/nvgrL007wi7T+/TjJl5hzlvPO3HyV7yZw3ryp/XJ
Svd72nnXuc91nus48f7WceIFnuvD43r0p3pc1/k9/Ybe57x+hPXIs4/JOk68
vXN7c1y//uT3XOf3+jz3Oa8/Y72zdEfnxePB4vHgXnfsv97Gi5Pu6Lzn4f5O
r7P+Gve8+EC457UrbSda77eebz3eerf1YuutlvuWy5ab/l8x/5auE3Oe/4oj
O7yj8fPufI+1E8uPflKv65HdGPv/6kcoL7v7emQ33p3v8ehf9cHxl6l9eXde
v0C5YJfUHzjuU3F/+iPsn+YrXe86zz32x+5OvvUPjCe6Ltv5Ho03HJU//QDj
JenOu066o3Z19uM5ldefm/TZ12ZdJ92RfW933vfwHXffDUv3nbVL7mdXcb12
Ckt3/zec83OxLsh5fkGO7Gy78z0a7+3O98gewU7h6PzEs1h+Odox6b4H+5Tv
0vZ7953c53r2fddrp7vuw3n5kk92FUd2D0fjXzz7zGrPVv1SO8vRPnJ7NK7H
6hn1Tq/r8TgOvzzfIz+G3fke+TE4Gu/vzq96f+afjV+dN/7E3herT91vPIiN
/1yvPpVu3IiN51yvvpKecdzUp9L550lnfxdXiB2eX5n+tOv1fzH9eT67OtYf
dj39SWfHxvq/rqdL6fSIlXfX06F09ml8sCM/uZ5dWjq9YTp0PR1Kp1t8iGv/
5Hp2XOmHuO9P0tld689gXQy/hp7vOphZ17/qF6x+KY/fxLq+6/7rJ1E/Cr/L
3tT+kPPek268526eHdd/ovPwnicdu189Ro/ux/Vf8HvY8zpv0nkh7PeUd+m4
8yadh/H72O+7vv4dfo9ePA/Xf2PWBy3e1WP+P7WT1c+h6e6Xjn1PrL5yf/0Y
3M9up350Pd7Nu6l//J507Pt1nq7pvV9+/D/dj+tf4n7/v1lPtdj7tt1oO+G6
+p+0HGPjH3bD3Txo2f27eUksv/4Pbad2fktNd7/0/p/rR1Q/o5YDXL+A8QOI
n4By5/tI17513kq69z/aaS/9IrDxqXkz7S/WvnZerfE+yu0HaPeNm3DPm99z
vvOGnVfUXjU+SNnzjK/51xjfsx/rDzuvPWIf9n3q38Nu0HnWzsNqfzvPWfY8
79c4JfUzqh9S16kZFxkvdZ2Y8/wb3Od960/k+Z3H7jy3/knnlcued9zn53Zd
W/NtXGh/la4rkN55/c771+8fu/+4D9Jzd47zWs/fadyFrrPoOobGXfA899dP
TjmnU+VauvmBa/Om2HgFs+d5nvwc45+8OvW2enbmYTf1mPx6n9Zr0juPaxzX
dHxtXtv7dl7Y/dL7fHaO2V9m3Y/rP+V9cedXpLNXs5+oj8xPsO/W/8r37jw7
lt55bd+v6dj7dx686Z2/kT/+FOw56iv2GvW/96ufhOfVv8vzHJ3n/2Fdn/qW
/xf/FOn0yy9M/YLl3/Xspn5X/tih2DvEwafnf3u6/ofmfs9zv/yJA8o/bTfu
6Tin7Hr1pHZKfYm9v+ulm6cxry8dT7zFNa9fdr32RrugvTEuV+9LV39L165o
Z9TD6vGJ7/fi6fvOuJ8dQH9i1vut/p3nXevHqD/Z8WY+brHnO+/57H36Xfph
+j3sDH1u7RK1Q+gf1s+8bJ5Pv303jvA81+s3179QftuvNP9k3KC+0e/2PtJr
J6mf+26c2XFJ/RGb3vvNU3r/3ThJe+V+4zfX149d/WCcqn4zbqqfl+8x+/LG
DtRxc8fJu3UOHSfj3bqArhtwvXRsfGf+ln24/pSun/o77y/9mt+c7zP7a8bu
NevVN/0o98++xrGD1c+8fuj6ce13lWt3m32TY0dTn0mvH3397NXX9XMve578
qse1O97Hfdohx8ZZ9TzPcZ3zfY7rep/v0XEL7jqGrnMwjuk6grLn+V7abe1q
23nPbzt43G/owbRjjfdVv9mul3V//V6dx75Px6G46066LsW4tOs8yp7ne6qX
2s8xvu04vey6a+twGncFN84K3etHtZ/VerV+uZ6nPapdwzx449TU7qCfLf/q
pc6D7eq91nPmmTxPeyh/O7/Q+b3NOopPtt+vP1+/2fqF8AuY8dLinZ9q03v/
7E+5xj/ux/Knv+t7dV1I17V03Ytx027c53vVv9j/xe9NnP71/XbjIP0A7+f/
6nm+T/126xfj+uN83ofGr2XWSSx/Fux71d/52ri86346Lq3/c9Ox71n/56bj
ib8ff2jpOz/2zrPWP7rlCM94bLHv5Xnaa9+567h8v904Hc++sZt1UPg4n/zw
wk9/53dfv3y/N/3plAvXe3/p3r/+3/yVHBufcDfOm7g2m3GeY9et93zXme/i
gO/8yt2n/a8drHao2lVql6hdAWuPfNfZ/32Ny7Wf1nPXLuD/Xd3O81Nu/d+w
6zpO6Pyh+TLzBLt5CO1z19m6f7duseuoXC8fxgmdp9ytc+y6MfNPHad0HNJ1
5v0Ofn83j+o7sEsa7+3m+eS/dsuOC7vureviO0/Y+R7/h46r6U0/CY8dZOkP
s38YZ8z+j+Hxg9rUg+zC0tWLymeZrrxv18Xv1sn7v+KuM5cf5abriLSbXTc0
fmNLX7t26pP9rtL188uu1x/Fu3Xv7Cu7OAfsE74PbpyWrpPqOiDlv/YDOu48
vPJZe0Dn6Y2vvecn+11q173WL9i1m/pfyt+unfR/1r/brTut/1e5+4Hv+s10
0P25d/MIynn3797Z1XfrYtt/6n7bu36779T9uHf91OM8ysOLdbnsHdqvtmNJ
n+uc54/DL0j8WefFKWHXFr8Ei1fCf0c8k09f/j3Yffx4MP8ev+N5WLvRdkh7
qN7uvo7Wkfl/u1+9Vt23XvA8usTWJdMtXdY/xvXyX78F7a/81G5cu7Lr5bd2
W+nyi+WjflHypb7B8lO7dOvF+kXVz6btCvb81svtV9VvGmsnG3e8ccYaX8Q8
iPmOxstwXv3ZfZHMe7BfdB4Xq0/FsaBr7T3dY+XZd+E/PuPgVV46f+t69WTH
7dL9Xselx/b9tr1Xr2vPPb92Aume33Ft79cumGdnB1T+lAPfA/se+n3ev/Mj
rld+6len3Cqf9fOS7vfxtHNLZ7jxE7D1Lcf5mNt2BLtefusXyN4vv7V7SXd/
5wkwP4bG+W2cYfZZx/rFsP95PnvarENc/uH6fdpF5QD7Lq73XaT7Lu0HtJ2t
HUP/ZOwGi9uP1S/2XPnrvH37L9LbL1QeXF+/dPWD8/JTPwrp8lM/Ael+v/24
0fl679odpdPv9D9WvdV+P/Z77Qdi69XZNbqvArbunT0Cs1dYD+95mD1C3D72
iO5n5j7Xe65+T9e56wdZZ+Wof66foh+BxRd2vfO7+1zvSN+78z2qn/DRf+rh
rIPF2q/e33Yee57+jOdhz6t/btehY+0j9nzz2p6PPb/PczTfwq6incd+z/V+
T7rfwxM/c5Nv1+1+13UTV3TN7/Cf1O/Axruulz/p8ofl79jPeHn7O+pf683o
F6tfGqd8d5/ru6683HXgZceJA77mecSDwvyGXO/87r6TbN/5o19sntXRef2K
pjtPJzsdKfc7XSi3u3KtvOzKof/frhxoj9sP7TrtrndzNF7Yne9R+7Y73yO/
AO24/gA2/nC987v7ui5O/93R+Nl843H/55em/Zv1auv87j7XO2ofd+d71M53
Pq/tauefuo567Amr3TRusL4Zi6Pb+8cesO5nh3E/nji863rP3f2u+3bP9TxH
7bJ129p1rB/geud39+lvNs5H43Y0TkfjcDRuRuNaNO5E4xY0rkDX/XddPhav
hh0Fs2tYx83usbsOu8596itxd9gtpDvvuq4bn/wu+4F2ruupO/5uHBn3ua77
FtRP3TyRdke/07ix/tGu262D7rpm/p/8PLsPovPqXe0FVv/uzmN+jo72N9yd
56fHv3H8Cs/t2U39EHfXTZyRdZ371Kv66cZ9xovOu67rkvkT8a/qump+HOPP
sth40DiQvdlzr92H3ec56m3z/MZ50p13Xdchs0u1fjUutx7X+l3nXdd1vfrR
XcdWP9b6nU76squypypf/Igxeyq7J3uq+9QTu+u6zxj7q3T1ys4uW7ut57Se
qh3X7/a6snrJ7xg/yReW7vn6X2XPU4+p5zovarzj/9h9YOijdpfOv3Z813xg
+ZCvzzvd9+qdnzi952t3futJZ7es/ux4q/bg2qk6T9T1lrXPdj6146/ae2sH
6zrz2mtr1+66kt06k87b6R9qZ3Z+0N3Xoevaay/uejrjstlfXTu26nntGz92
zC++fundt8LvyY/2cfZlW+M55/np+R2s/XFeft0nP7XTdT809m3X1+6HO2+t
PavdEBs/so+za2vvMbuv69y3uw43riu/X+n9P+t/1y8L6793PVLt5bUT1g5X
O2fjnhm/6pdYX8K/5bje5KXxG8b8XpzXj+H3wg9GPdZ6o7quzlrusXJWHcz4
eOVDvnbtGFae9CvYlf2e9zU+1/92PX37Pex67b/r9dexfoL7sftn3ntdP/5h
i83Huh+7f/zH1vXjH7ZY+XM/dv/43a3rZ5y32PjL/dj9M6+8ru8+Leyj/h/8
wLB+qv+3o/PvWXE71ButF9V73ddLHD39o+kXrf4slt71O+p57UnjgDROQudB
6xfUeQfs/7+bh/B73QeDn1TniTsPq3zqV3he223zyp1Hblx99aH+vH579/Nq
nBLraN3nOa5rnJLu68juZBy1W4fg/u5DaZ5VvSVdPVh/lu7frZ3y/O7DaZ63
9SidYM/vPHH3KZ19V5d90jjl6I9468/fdUfY+Me4RT79nvYaS/f87qNhHN51
m/K7qyex99/Vm11npJzv1hlpD+f+NX9V/3i8q4ex/Ozq5d08LD41K2/58M2r
p4HTK2tcd8vy63rtfv3dOz8ofdcOjD/5oR6+bBfk3/Xzf1jX/63T/1+8xA/d
nGT2tluW386z4107M/7bKz+7dsd3H3/2Nd9XP4adX2L9Cnbt1viNrd/ftWNT
P/N7zDxv/fbZKdkXjePNJxrnd9+w+mmbT9zNY3ae03PMO+LOe/rdXtd9xjxf
O71rx91v3nM3L9p50/qLu19/teui69dfP3esfaw/0W5dp3H1Lq6P+sN4sH4w
7GJYv1K/xPfCUx+u8Zd+LXZ/97/Gnoddb7zleuz6snGZcktX5o29d/dh1z+o
n1b9qmY+z3zJeh497fw01EO44+R+19139J1337Hfud+p37Hfud8R60dg7e/E
j14sf/oRfg/7vcO6wSfP0z67Hrseu14/wPVYev1K6Kt+F10/XbvUYf3tx32H
iWe6+Q59z34Hz+t32X2H3Xfqe09/ao2b2+7oT9CHdH51rqObnZ9d/bTUPxPH
eOOXhdn32DFrp1Te9dOUZ/YZ62P1K/VXsfJMV67XL1W+aw8yLhh/8GVHYV+T
zi6CtdeNb++76v/0u7LXsGuwc2gftBvT/1h2Dv1lrL+sXz39wTW/z77gucaF
xqXGj9j40XjV9can7HPGp8alxqkdhxo/6ecal2E60893vX6zcdbsy7z68dYh
6+9jOqFX1xvv0An9GUfQb8cN6nX9aeUb6y/oJ+mP6CfxR2K/V97r91R/bO0Q
u6d2SLt84aeTuMzae9fVb6blf+JDLTud8qp81+9F+6ncmTc0fqofivJnvOvY
eQR2+Pox1c+ofj1YOWLP8P+qH0XXQTdOb/0guq6i6zq1M+bltTPS6zdQblxb
82au67z/9Htjt22cbPryPhdxkVf59p0b58p3rB/Xrh5Wz0pXztS76s1dvare
lO791KP+H+o99eCunlQPSlcO1YvaT/Ww9h0rp37vsD7yE9x3iN/7JB3TmXrT
PMDuOuw696mnd/W4elq6+9Tb+rvKgXp4V0+rh6VPnO1VL7uOvUs9vKun1cPS
1cP0p7zRV+PwqHeUx7Frr37D9N/WdR2HtJ/mfuf1H9Sn6jv9ga7Dbr9JOdF+
awf9H+mR/VM7wy4n3+qbjjN8n/p/42McqUcz39T2hV11/DCW3dX1yon0Wf+y
0rVP9G986rtpr9wv3f1NNx6Vrv6iD3r2/6Jf+fYc7Ynn9D21L9In3yt91kOt
9PHjWemzPmql66dK1x5JpzPzwPTTfexrF2Iv48+F2VP0x7Ub2hvnXXd83usT
T01/G9fPoevI9FOweXvPMU+vffWdus5E+ajO6FQ/pf34WV+0dFhdavf0w9sv
137QZXWqHtcf1F5ob5Q3/Zr2u+sXpZ3RHiof3kf58Bz36Xe3H67+dt58jvJ8
nN+4ne/Q7ymrv503/6Df3H60+tl5dlblih0M1w7YdQnsZ7h2Ova4WRe9yk/X
cc164HUddt3RPvxo2h3z7t5L/av9oAfMr8bz6UO51R5h9Yb+T+1v+j1Yv0f9
rz1RLl2H2ZOUM/1v9aWjfglWzjqfq/3D2mvtiu907I9+OH5eHxpWXx37tR+e
csEOgdkPlAf/L/WR76++YUfQLng/evJ+9GKc2nk/5ZnulVd2XuWRPVd5kl/9
XPNIWLug3lLP6dfyB8HmBdVT6jX1ELvO+C8se4F6Rz12iLv45Htg/Ur1iPpH
v049jdlt1BOHeH9PnnuIK/J0P+DVz/bdlcuWw5mPWMf/Da7YIqA=
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxMnXWclNUXh2d7Z2d3dkdlgYUFA1tM7O7ALlTsbsUCxW4BG7sbuzDAAsEE
EUTs7sIuzN/zeA4ffn+czz333PveOt/3nZllmGe+PQ/b+tDqQqHw8BqFQg3l
2qVCwXo/bIVCxGqx9YnXU66ErYtfR7ki9vQ8hcLG1Bvxly/EtV4znviGxBvw
9+0sFCZQ70/9we6FwrP4W+Fvi61J+yDseWLbUS/jv4A/AL8V/zn8bfBb8Hek
bKNcB1sPq2BzYWMYcxfaeuBvgnXFurnmbJ8b2yBLhitsmGUXbKMs27H9WOdE
GjZjrI0z5ljrFmJe5xtIWwflplj/nIfpC/tz7YtcuxvtB+BPwt8D/0kaJ+Pv
hX9y70JhMG0fFAuF+4g/Q3wL4hPxp+Dvh38kthDj7YBNJzaI+oL4e2BLYkth
rxA/jHgf/N2xvtn2EuNMo+0Q2nYsxDgLY7thS2S/PXOMpbGdsUWxxbCdsu8i
7jFL2/bKvsu4Z8ZdlfIQzxl/FcqDzS+2XGpmg1Jo5EDsmWJoaH/zyNpeZm0H
0D4EG1wKvYwn/hLxfTwHDvsYyqOxjbCVaT8I2xx/NcpDzXspdHcAtjU+si0c
jr3IOFMZ5yBiW2KrEzsM2x5/Lcoj3GMptHMUdkIp1n4tdkzmWE0NSd2ol8EZ
s35c6ka9HJ0a9Jpjs69tQ7Nd7ZzE+DuXQic7UK5NeaTnwJlsTnmyuSC+BeUp
2LPEN/M6bAb72Nt94L+Ovz/+1vjnZp7Mz1Gl0Mgw7A36HEh9G/PhfUV5pueF
vx3lWZ4R/vaUZ2PH5xq9V44gPoDyHOw1xtmX+lb4IwqhIecbnnq0fl7Or3bO
z3IX7IIsd/Vsc2zvjwszpgYvylLNXpra2hu7IXNrvl7jZnyTdTzPedyYMfN7
ObZPau2mjPncuKQQmnasM1n7i8XQxoml0Ol12PXcyG8w7unErk/9Ot+kYuj0
amxyMbR2Ta538ULcMzfnPOrnrsy3Wrg186mW7kitqJ2XiqGnUdjFuVfv3duy
r9q5O8dQL7fk2I51Z47hHPdku7m6vRBjOscw9jCFOU7EH5lju/9ziJ9dirP/
nYfSfk2Fwj81kZPFcj9Ti6G7B7BHsTNSJ49gp2d9fObY3D6MnZZt4wqhP9se
wk7NtjE5hhp7KnVjv6dzDHXxeCH0pVbHZl91+FiWtk3IvurlVvL1LvkayX7e
4b5+G/8i/GdSQ57rTzyMzy+FLp7Ls1ALP2BP5lqezb4jMzY81zcx53GsCxnj
AuwK/G49eeYWQw/P53jqdGrqwmfFK7M1hb1ajPjL2I85p+f0RO7V+aZnXzX+
RuZb7bxeCG1Zv5z5L8PuxX+tEPq27YPUilqYUYj7wbY3cww19X4hdGm/Nzmr
KxhnBut6J3WjNt/Kvmry7Sxte41+91N+jH2TuTQ/X6c+rH+aenkQ+zI1oV4+
x0anFq4txfl+j32WfW2blmfmeb1ejHE+wb7KMZxjZs6pFr7I8Zzj6lKc43ee
c56f+7+yFHr6Vg3keavZzqoY17XfXYr99CL2W+Zb7fxaCJ1NzPX53FXHvxRC
r7bNKoRu1NTPObZtv+cYtt2FPj9Gkzczz6KdoY9q5joa/0PiNxH/I8dQR8/2
4tyLoZPaqjgXddRSFbkxJ81VkVfr9VWhG/fdVBVaUTuNVaEDNXJaKdbvWTdU
RV/bDmUNbzDXZPy6qpjHsUpVMYZzlKtiTjVSrIrxnGMW99Qoxn0P/77esc4a
2n8nfhvxd6n/hn+9z1nzQXkDNkk9lUKLFfp3qwrdqIX3ipHzdmJdq8K37bpS
6GV+YteUIs/z4S9QFXHv46tKked5iXWvivHU3b2l0E1vYu8WQ79d8HtWhUbV
QUdV9FVTPaqitG0E175cjNfZJaoi3+bqX/Y1mra/8BeuityriwWr4t5WawtV
RWnbXFWx3w+wO7nuDuxD/MWrQiuOu2hVaE4NLlIV41l/n/n/oVyaWJ+q2Ktz
PMwYD2F/4y+W2nWsz9HUXT4Lue4E8vsl9Ueo/4KubuWZ9THx0ZR3eh7YiZ2h
sxWqCv+9AX60FJpasSri6mJsKfS0CnZLz8jz8tiYUuhpZezxUuhjVWyNqtCQ
Ou3BmB/53t2x8J8uhabq8Sf4vr0q2uyrxhuIT/S9O/56VaERz6+J+IulyM8m
qQ+100j8WeJz49/HvfY8/nPYJ8XI84bYRlXhq6snS3GfrIZtXDVHa8+UYq51
sSJjvlAKXfTPedTUpFLoZnPspVI8R7bA7inF82NLbFOeqw/xmvoR848rxTms
jt1fCm1uje1QFVpRIwMyr9ZnlCLPe2Lbp75tm4v1vErbUvjbVcV9YNuOOYYa
rNBnOn2WxN+rKsZZBtu5KrSlRnbKvuprYJa2ncb92xcdLIE9UYocHoI9Voqc
H2yu2dNn7KmfZ8lcb/re3edBKbSzP/ZAKe7LbbyW/p8XQyf3leL+2wp7lPin
xJdTf8TfLoV+nipFTg7F5mb8N0qhwcPz/NTUg6XY+7bY+FLED8N60v9j37vj
98L/1Pfu3nOlWPu12DGZWzX1IDqZl35fuC7KzynXJ37c/+nls1L0Pxr7shTx
Y7Gh2a52+nDtN75vx+/E/8T37viTS6GRk7EppdDIKdj3PqOwzfBfLoVeTsWm
lUIXp2PnZp7Mz7DUh3p5pRTnegZ2Zp6x57AE8/5WCl30xf+9FNqZD/+rUtwr
s0oxzjnY1FLk4TRsRGrI+YbnPNbPy/nVzvlZ7oJdkOWuapDxvy7F/fEQ57kk
9T/UKOWflHsQ/41nzjJoahTPjBsyt+brKTTwJRrYD//GjJnnJ4h/QXxf/H6M
U9/M+2n8S1PTe2Of+PmXz37/MMcHpdDpddjf+F8VQ4cflmKu67Gv6P+lH7oZ
qxp7j7aDcg8+f32uv8p4yzNfA+13ZZ7VworEisSO8rzYx33so5n6qNSFmvqr
FPfrSKypOeK3YXfnGOplBcZppO1I/Ht7xvg+f8vEWrDj8VeiTwl/MP6PrPcH
bC7ql1TF+O5/ButsIzazFHlYLPfwO31/w+ah7cdS6O4B7xnG7N4cenkk9aV+
xmeOze2vpYg/jI1L/dn2Syk08hC2JuN0MM5Z5i51Y7+ncwx10bs59Po4thb9
e1A/G79nc+juMWwMOlmXtvmI/e3fH9jPQvgTyfs35O5K+jyLXZzn2Ye2BbDL
8Z+virNQCz9gT+Zansu+l2RseK5v/uYY5xnXyfhfM/4V+P8y73TmXdj1kdOz
sMuI1zbHc2Kq91pqSv3UEL+G8mX1WRV7dI665ugzDZuefdX4+4y9EXtcgvb6
DrRIvR/+JsSWpLyVPkXibxBfgfpjnMnGtPXFLxN/i/hK+BsSW5zyJvq/lZpS
d++ldtTpUs0RfxNbtjk09z7Wn2uXpn67eWJ/D6G5ZdRGnpl5XoTYwlgX4svR
Zy3KHzijrpQP0v4ptjr+as2hnc+x0amH7/MsPO9uzRH/DFvHORhjLH57c2jw
E3WI/z3xR/F7NYcWZmJf5Hhq77vUjuO+mmfps2He5oh/WxXvNf3c62eYn3If
anlHcroD9gdz/J45V0cbNof/G/ZzKZ61rvUpznwbzmgD2v9IDamvn3M8dT0r
x7DtPXKyOX1/YfzFmkMj1dXMxfPtBbT1M/E/c4wXsMnEFm0OzdRWh0bU1EDm
3Jb42/jN1ZE3czuA+BbNse9tKN+gbKJ9HOvckbatiP1UitcQc7MDsS2JzXB9
zPWT7+HVZHXMox5L1TGOc4wkv4+R6+245mnG3Inrt8Zvq473gGqqpjr25VrH
9ox4K7GN6bcR9iL1edDnV5xFf+rbq5vm0Fu36tCLGli1OXLeTqxrdfi2zV8d
OVY781VHPq0vUB0x7+n1myM+L7Hu1TGeuluvOfTSm9gq+B/jd8HfC/939v4V
9d3xd2sOTe1B+RvxL/H3wZ+F/zX+Qc2Rp75ce4j3JPaXeuFM9uRMDqC+YHXc
J+proeoo1cUn7HsH2pfHPsffifJXxl2iOrSijharDq2pwQObw1+UWB/ObSbX
DCLWpzr26hzzEv+G+GHEF6+O6xzrS2I7E1u5OT5H3ZG6n0Ku/2TOf+kzFf+v
YuG/P6Lvz9qP8nmDv2J1aE4tjO8ZOVwbW6E6cmzb1ejhadqGeq/3jvjy2DG+
fmEN+Acx5nG+PuEfn1pZBzu2ObS5GvYNny0OoN8//m2McjBtReInUg7AKvhn
Uf5Lewf+GfinN0dux/XgfsQfiG1cPUcvuzZHbjfEhjDmTdTXxD+NchdsHvw1
qkPf3kM/clYnE9/RfOYY6vGcZj8Q8zqEv1F1jOkc5/o+gHin59YcmtpKPbKX
4dSraLuZ85nM+dxMffXq2K/zbV0d/dXngOrIpXrZvjp0bP1n1nMZ1x2OXdQc
8e2wS/APxZbEH8S+LmyOe2KHHEOtHdwc2twNm8D5XEH9CGzn6tCR+jqCay8m
tgj+yOaID8Smo4cjqS+Dvwi6Otr3LuxlBfayBnu5lrbX6FNHbDn6XEX9yubQ
y/M9I//7YYdXx5494798vtFWzzU1WC9iW2IzGKeW+rJqSb3gr4Q/mDmvp76q
6+kdmtsfOyz14riH0+eC5ngG3Ngccf9RaVLP0OmR2IvmmTEPUjP0v4H6wfgn
4N+Bv76axD8Ffz38Pzjz9/G7cc0oypOwddUqtkFq6VZiJzSHhu9sjvgQn3nc
+z+S+wd9/eX6LYid4n3MmPcTKxE7LsdQRw95TxDbXE3meaifJ5ojD+dip7K2
x6nvhH8y/hj8bdRkakXtPNYcujgL25x87cXr1/wtzE3/sbRtS/xe7zXm6o9/
kp/Nm0ODw3IMtXNe5l+NnJ1ac44LsF28n7Dzm2Odp+pnX9uG5p68/+6mz115
Dz1F+WRz6HAF1rYHa5vgsxM9rIieniFXb6KBVta2D32m0PZSc2jnhsynOT+T
Nd9CfBD+9dgh2bYl2pjEWBWun9wc8euwp/H38l5Rk/hz036geugVOroSe5b4
XMQPyL353PQZfFfm21y9rtabY39ns4bbfa6pAdZ+S2do7BVit2FH4Y+jvBTb
3ZzS/3L8PdRJasRxh/kZnPhg8+hnbfxj8FfifP5CK29Tv5ex78Fexn/T5xjr
PN77pTnGuQM7nWvHU98zc7BY7uEtdPg7OnzX5yPXnUzsAfPr50piZ6gtP+f6
DMUfn7k3nyP8G0tz6HFcatC20anl//Lu52L6nIn/VXP0ecozzzHUywV+Fm4O
nX7WHNocg41Nnaqvi/zcR9uF+D9S9myKvLzP+v9m/d8TG0mfmZQXE/+H3N3J
mUxBM89RH5n57d4S8/+Afdsc8WexC7n2S+oj8C/287XPUfw/Gfs7/A7m+5my
k/IqdZLjXWpJ/97Er8H/ozk0NQ37Fb8X8avxv2iO++dx7DI/L1O/Vj2kBtXp
aax5XvrfhN/IOufDv1v9+Q/E1G/BX5e813EPNFE/g/6nY9MY6zPOoRprJv6X
9wx2I/2v5tpqYrfhv5taUF9XEa8ifit+PWVdS2j5GuI1+KPwaylvp3zbM8+8
mWf/QblMWx/W14XyUXOLfdgc2vnE/TDO3LQ9bE6xB1MXNxHvRvxJ/E9Ta7Z9
XR3jmPc22hdk7Pu9r+k/D/VH8L/5P11cR3wu4g+pYdbTtSXOdnqepc+DG+nT
Tvwx58Ffrqnw3z/8/5T7UMudNbF25+9J32cof8Nu8bMk9Yn4jzSHnl3nzX4m
JT4Bf1ZqR339nOOp69+rYxzb5qPvIsz7Ev5tXDuLsV7GbyBXvWlbmLY/cgw1
tQCxRYlNwa9hbVNTS32Jv0XZTOwOP+dRf5P6wpQLtcS+RxFfDP91/LXQyWKM
MwP/Ie6DNubbxLVgf7OGV4lvqpaIdxKrrYl51OOWxG/3cyDxlpqYVw08x3uD
dzjrf7l+KdqWbAlNLdgS66ymb7km+r7jvZN7egE7h2dvH2x+bBn6L87a3iPe
tSb0ohYqxD+m7EKsvSZ82+bH/47ye+w95l+bft96VjUR816+j/WuRXwm/l34
q7aE7nrVRG7VzsrElmLej/Dvpc8a1L/Evxt/NfzP8e/BXx3/C/w1W0IbPRlj
iZrIt7laryX21pfY/fRfh/ovnkNN3Cfqa6HUmbrYmvNsYd3L0e9771Fsec+g
JrTiuIvi/5raW7cl/EWIbYS/DGv+m3qfmtirc2xAfGnif+EvVhPXOVaReVY0
N7534qzf5vm3P/6mxKrotxz2Ef6dlO9im+Nv5v2Pv0JNaE4tHI6tjq2BLV8T
ubVtH16Tt6R/A/5rvSPeDxvNOfRjnnr8NWtCp2pnAH1XIN6Kv21LxB1zX8b5
gLUuT9t2LaGbtdwHZzMXNtD7ljH3ouwgPhZ/T/zu+LtRrsJ1c+NvnFpRRxti
89SEfp7sGZ+V+2GrtER8A+wRxtmGegm/wvy74K/MWGOI74HfjfjelD0oN/P8
a+bocYua0ILPjJ3J6dxcvyN9N6+J/rad1BL7H4Q95Gdo6kX8LfM69TigJnKp
Xg6jfQ3mX8prvBZ/afwdsl0drdoU/bfHDqHP6tSXxN+uJu4N74Oda0JDamEV
7vff5+E86TewJnRk24453sLYTlnaNpXXkJexudhPN2yoZ0J8Ius/Hn9V/Id7
hw72w7bCf4X+6zD+tF6R/32xx+m/D/174+/J+XzEWPv6GuDnfsom4uP9mwP+
ivhDKAe3hO5ObAm9HYb9Sf67Ykf5PKb/CZSrEZ+Afyz+SmoJmy/3v7fvY7HT
1DV2ELFrsGtrwj8Y2534+pSDsXPwN2Tt6+Gfgr9uU2ivK+s9i/oG1I9Nvagp
v2DVg/WcQduQmhjHtgtaQiMnOU5N6ECNTGKd59G2Kf5xOYY6Ojk1Zb8pfp6i
z1b4l7VEns7FLmmJ3IzAzsS2yb0OS92oi7Mz9+phFuf/FFr/m8+6Z2Vf215g
/HMZq78542w+YW8jqQ/PMdTCFS2hm/M8kxzPOQ7g3jyQtl3xT809qd/9ie1C
eT72HOMPb4n773n8EfibeO6UG3F+u3lu/vssa9vMz3Cc382uB7+R85yX+i3U
72mJZ82N2A3YoamB+7yvmuI+ursl4ter1Z6hwSuwN5n3LtoOwX/M99f4e+G/
4ec1/APxR/neB9sf/3X/toB/gLpQU03xDH/bz0otkat3/RyEPxT/Ucqt6XO0
9xjrHU19S+r7cp4Pmzv86zwDyt1dv2eAv0dNPF/Vijq6HTsmtTesJfxR6oTX
03HUz8cewLbg2iOIv0ZON2GfTxK7I69zrCOo70k50hy1xGuSOdovX0vMzYX4
J3p+2OGs83Py/ozPd78kyHvZq/CPIn4kNhn/UfqdkVr7yH8DJXYafi39/+UZ
ciX10alvtfB4akU99mTsKbRvy7ofS13aNibHU49js7TtGz8T0f9K/FcoBzRF
Hmf6uYb6Veoq93eJmiB2MeUz2E0tEX8Wa2FttezlRV9P8GvwX8D/h/Ve3hL3
0cH++wvr2445zkWHi2ALYS/TdnVNPB8O5AwOwK7nmldbIj4F+4rrtue6y/Gn
1cRz5Drsb8a/tCXuzWfzXnpCTdbMed686/3LtbeoT/wdfD+Pvwj6eZv6jtRP
Y85T/Zsm9RN8n+a/P+E/3RJ5+8h8E1/If/sk9h3nM5DrbiX+ia+L2F3qmfLe
lrh33k5NqbX31bzzY2/VhG/bEYw5CJtE+zeZJ/MzM0tz+Bn2YE3k/BPsfuwB
7NMsbXslz8P78Vy0+jzjPYn/dU3oyXFP92+PrP9b3xv5uYzyIfPbEmf2HTah
Jcb/2HpLaOtbzx97JMea0RLPhenYB3k/vIN11kY/5+xdG/txH1PpM5Hy11zr
yandqtrIrfmf1hKa+s06/gTKX7BZqS81uLnPLewl2v9l/bv5NwPiNbWRb3Ux
pneM6ZePf0+dev0fOcbzWHPtnDyU8N/IvFSXI2ctxP5mjj18r079tZbYax3x
P/F3J/4q9Yta4nVmdj5Oyr3NIv4S5b+OOTfPP/q/bt1nBf5rXkuOPm6J93u1
tbF2c/hhS5xlmVhVOdbWhF9dG+fkPn8gh7syziTHZ7+r85ydzrl853sn4i8S
b6+NHKqXrrVRqpcfWiLP8xH7Cf8H/AXwf8T/Hn9+/PZynNcS+F1qQ/uO9U1L
+PMQ64l9mbr4viU0Mi+xC9HYz6yjjTG61cac6rfEObQS+xy/V21oRH0snnky
z7/63sT31fqM+TPlQrT/1hJaWBj/fMbv62dtxjob/yysHn8E5aLEG/G7Ozf2
pxri2p8oF+Tan/F/xO+DP4hn0e/U/6K+aG1oU+0txRjNXPs1bYvUxry2LVYb
7a7Vz1G35+f2t3qG1pbF3mKPv7XyOlPP+TLGgeylgfjymT912unZtoSW+tXG
PWBbb+IH+F4dv6tfOKfeiH8G+6othx7mpyxSroqtkOOpnQXKoePVsQXLoe81
bC+HltfEFipH7HBsUfw6rNU1sN++joutiL+UY2EbZe7V0cZZqqMNayP/trXQ
b27K9bHVamNtanWT7Gv+t0it+Gy4lL38yRzLcN0ylItTNmC92e/S5o0+W2Zf
NbI51iOvL5dj3g2wrbLdZ8xc5dDyNq6pHLndHtuhNnKufgbURtx6D/osSbm7
+yiH9rfDdsy+amynLM3/ivTpWo574Wg00xN/KfwOyr6Uu2EDs686WrYcWtnZ
Zwh7PMjPDviXsffBXL8q7WthqxA72Dzh9/Ls8bflXn6L58IhXPMm5XLE9vH+
6x1a2RfbL3WjpirluOe2xvbPmLqYuxz38bbumbNdk/rKngH+vPgr4R9SG2tQ
S2uXI3+H2qccOjrMc2He91nHuaznIta/cDm0tJF7xNbGPzZzoi6WYPwlia+L
PxhbL7WxieeHrYM/JGNec1xep9ZOyXyrl6EZU3f9yzHOMdiSjL8Z9f7417Oe
67DNqZ9MfbO8fgPqi3jG+KfmeGrq9NSNZ3VGlmrmnNSLGhmWpdo5O3Vh25nZ
1/Psyxo2LYfGh2dftXMoZ7QL5fmOTftW5dDFaTm/c29RDm2NwFbC35XyAsfF
X64cmlm5HJq60PyUQ6cXYRenZvfA1ilHrq7HFvffhakf5r9v8b6rr/+mS30k
uVsaG+Tn2N6hncuxqzizdcuR3yv+T1NXpYYOwK7BDsQOwq7MdtuuzZi6vTr7
2m+XcujpOjWI368cz/UrmesKbD3qRzRFvu/Cbs98qpG9aNvQds+Es90Y/0j8
vSmPorwVu602/KNdA+OtT9sg/FEZc6w69vgCr4Pv+n3G1JnavCPnsb6PYzeF
vvZ1fP8m75kz79H4J+CflXk29zcz103Y/vR9sDZ0pk4PKYeeHsYGlUMfj2KH
lUNbjzgn451HOc4zK4cOHsKOLMccY1x7OXQ2FjsRf8tyaGP7cuhovHPiH+P7
Zccsh14fc2/l0OvjarYcOnpaPZZDOxOwyZljc7i23zH2+0aMNTH1pa6e+T99
PZvlSEu/B4gtjh3PmEPLofel0dcp+EMYZ9dy5HwaNin15Xzv9wz/ReylnF99
TclS7bycpVq7jmfMNdjG5GFqxtTaZX7/mc9jGxHfk7luIjYDe89/u6F83X2w
vguwycTOpM/x/n3e+wT/RspXsY86Q0dvYJ91hp7exI5rCq28i51N/xOo34M/
tCl0+h72VWfo7C3s287Q7tvYeqzpRPrdiz+Ma+9zHmwh7sEyn32O8bmOX8I/
HH8D+o+gfIA+51Gem5p6w7WhsQuoL8vZFul/MuPeQGy3ctzj/Yg3ET/Fz7TE
biA2HevD+C3Ej/I1EL8Z/wiff/it+EN8Tvs9MfzjfAbjV/BPwH+LeefCv8zc
8rq0Oq9VpzL+wZzlQdjH5PCX1JRa+q02dKNefs2Y9Vmpm+ew1bpF/5+x37Ov
bZP9Nz5sWWzdztDK39gB5XhGj8be6R1a+be28N9/Enwp9dKvd+j4H6yqLmJq
p6YutKL2ZjJmN/ZyI+N9iN8F/2pfq1jPGtgr9DmJPc5N/DTPFl29h642ISe3
49+G9cd/krmewD7wOy+MMw/9r2Sc6rqY0/m+JN6V+PXEP8Vvx78W/wf87n63
3/cHnHOHc5lT/07l/yHCf7x33BN/YSuQ057GWc+P/luhf9+nz73YPdgn9DnC
5zf2Jeu532cFfT8jfhSxI7Gvid/n84T4p8QvJXYJNoPx7i6HHudh7cNo/wK/
A/9Q2g/BPuXac4h/Trw78cOJHYZ9Tnw48S+J9yB+CeN8hd+zLrR7Um08Bx90
z5QLEF+8LvKtFh5lH49otC9aF1pRO4+VQ08LE7vTZyZzfEB9TDn0shDxJepi
jD+wh4j/qMaJLVYXYzhH37po/xNbpC7GdI6f2fNGfmeZ6waQy+FqgfgGxNbv
jDNfhvfl/3DNv9h7vUJry+AvVxeaU1/P++z1fTv+uHLobHlsIn4d5YpYv+yr
Lp4lfp7v2/FfxL8Ka8S/lbJMuRZ2DX6RclXsafxayhWwG/BLlKtjN+E3U66B
3YLfQrmmecl247cRb6VcG7sDv0K5LnYX/lyU63l/+FrAerqqWV8L8LuZB87g
JeqTsfXrov/c2HXUmyhXwy5qCi30x7aoi5x3YpvVhXbUwyj6t1Gug13cFPFN
sS2zby9s8+zr9RvkPOpwq2zvje1Fjqb53MJ/CL2M9u931MeWQws7YI/iL0g5
AFsJba6ILYn/IH0f8BrvqXJoakdsp7rw1cWuqUs1tQr32pu+J/JvoBlTRwOz
rzrdOUu1tjr37Gpc8xbXfIxOLm0KnUyivgrlwdiH+Jc1hR424WyXpdwb26cu
fDX1bjm0si82vhw62g/b09c56vPiTyiHFvb3HmKcx9nXK8RewFYmdhD2Mf5z
2Er4h9TFGtTSoVmau8OyXD3nn/0cHZTaUUtHph7Vz1p+14x1fMq4R2c+1dLg
1JEaOSr72jYkY+bzcK77jOs2xj8l861ePvd9MeXx2DE5nmOdmJpSJydlqaZO
ztLrj8g1ur5BjP9FOTT1jc8fbGv8bymnY9vgv14OXZyDvVEOvQzDXsPfnvJs
7EnO8gnsVV/b62JtrmN46kvN/EbbLpTnY0OZ95dy6OII/C/Lodnj8H8uh74u
qIv+6ut44r+WQzsXZkx9XZTl7tgVaHY1bBXs+syfeTuF16Mq/9+d/yZIeWVT
6OfPcmjoMuy9cmjncuyGvM48/0P8/XJo6SPKAyivwq7BDkzN+J/gPyiHrq7N
mLr9pBx9rsauy9ghuSe17z1T3RrPnRuxFvyhlHdjt2de1Uh9a+TsZqyxNbR1
C9bUGrq5FbstNaS+altDizdhozLmWH+h+TW51/5gXWujyTM502b63pHzqLt7
6mIN6ureLM3nfVmqr/uzVF/l1tDWA+qA8dpaQ6cvo4UpWFfq3/saROxRbAKx
p7HviM1P29W+dyfeBf9r37vj/+DrLOUY7Mdy6Gss1os+ndgI/Fnl0NF4bF5i
V/m+Hf+ncuj0Mezx1KxafTp1p6YmZKmOqrj2SsrJWBFtXNcUepiY7errmSwv
xq5EW5tzjpthdfS/hv6XED+PvfdsDb03EL+W+KX4C7dG7qdh/7K2KygnYQsS
/7scenupLtagrqZkqWZezlKtTc1SfS3aGvp+BVsX/ybmehL/g9SOOaxpDU29
itW1hhZmuLbW0NFr7rc1dPQ69mFeZ85LraGpN7C3Ulvq6J3UpXp58/90twFa
upz9L8t1b2df+y3XGut5H1vfeVnnU/gf5Txq6pvMs/ntTp9HKL/E+uG3toau
ZqCXjXlvuQL1N/xMir8S/rv4G+Kvgv9xjqc2d+N91a5YN+KLt8b9PB3r0Rpz
fY11tIYev8Jm5vxqZi3ia7aGdtb2DFnzE/inluPz7TvYLcTGqU2ssz7GcMxf
Umfq67fUkNr5NWPWN2HMjbHn8H9O/XrN79n3Wc8f/dzKHM87Ts/Qy9/Y3FxX
wU6ti/dVk1M7/ujHS6md93tH3Pde/VtDQ1W01/Daukhr6LC5PvJnbpdujfwX
iU3132JaQ1frkNMFeM+8BPV18fvg98U/gPUs2RpaamGdt7HOF/CXag1NNTLO
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
zMkHlAkoe+5bzqelPVh+MgYdRy3JDZQnKKtO/Tm23Dj1JPdNNpz8R1mJcvjk
D8oXlBv3LuP9k5xR9SQjzmvkGep/Uz2HKTibMWgpE04OoHxAeXBqzpg8ONmA
sq3MvfowJitNVqHjqDM5hjKk1I2cwWWbgkOnRuXIyYyTbyiPUFacmjMmM24n
f1+uI5iS+3UPLqAsPzmA8gFltMnclDu4bE0wBuW81WbuZcnJjZPBJcPKdcgT
lE/o+ahfY3Kt9u4enGL5nfIK5QzKj3u4MxiCMvbU1Ao5rrw5GX+rpW7k8ckc
lMcnh06enfeGY7tPmYCyCeXPySJcM7X9C3mZuz0Yf7II5QLKdJMZKH9Qfpz5
k+cm1213f0e9I9iF5nuLbNulIziIKzaFzuTByY+TOSjTUG7af0zDlmDLyTqU
e9g/NbRRXqOmNs66/DI5gLulVrbM+cytbDcZb/L45O9tlVqR7bZ96kBGnKw4
OWK75DnPlzGZc7MZgY4l08/xe6X+dsix1MHA7CejcLvUnjyynfNsZT/K1iun
nnbOa+Q4+Lv78h1kGspAlKEm/254zjvW3zlPDmC39mAart0Uz9r5c70yE+Uc
ykWTUbhv6kquoixFWWyyCuUU7lMTnEOZhjIBZQvKHZQtJ/dQ/qGv+TIJ90st
yUCUPyhjTrbj4akl8yEvbjYn0FJGmzzB9ZqC4yZnUO6gvLd9OoIfKFtQVqkM
UzmJ//rb7O3BLpRvKHtRbp1MwkGp3fVzbDlwMveOSw3IKpRjKJ9OBp+8v+Nr
QseuU46enD7ZfPLs5C3KXpSFJ4dRlqIsPFmB8gpPyNzLbpMJJ5/w1NRWTddg
FsoQlA0oA1DdyAQ8L/N6YPdgB8r/ky14buZaTZ2V48o6HJGaUa+Of0rqSabc
OanNs/Oa7TN2dupuePaT6Sc7zjzJ+JPrJ1dOBqCcOPUgm08e30U1weaTnydP
Tj6j7EY5ed63crTkackqlC8o962B/c6XzMLh6GpY72AMyhaUMfkfQ64l2H8X
1gRbUOagDLuDugfbUO7h5rk/55Av6v3ra4bcQt9bqkP5RTJeZNDIPLwx89en
PbiAMgflIcoHlCUne1AuoTw4+Yk3ZK7lE8oklD0nu1DW4G2pHXmEstNkx72b
dbmHsg5lyR3aEezDx1uChXhnavqQjuAQyiiUQSaf7sTMh7y4sakVWW2P5DnK
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
irOqenayZE0d5jKDS+y6bublur6b7+EY+49Lqpc5G4nVo6otH9nNfIZwJj7E
e6+2nRGSH1Ntvi944E7NuLd1M88X9uH8Oq3a3Fu3dzOnJLyRxPyxkTP/dzTH
s6vN03Od9vAgjXeu7vtq/st3mrfjQOqMwbsgeXv4s17u5nnPyLre6W3upjnC
xQ6v+XXd78d53uwD84T7aXo3c/PAEfWx2qs07ntN3kP4kOBFgr/mAPXdv9Pz
YY7In5d8rGQHcWaYGFDfsep7TbX7wJWDDfiE4BWCp6Wjw/N+V/dPy6+urTb+
tMnzhmPo3bT0Yw3M86PM8/2s6waNNafJ+4BdeIbgfmENs6IPTw9zgP+EOX6Y
tXAPhieF9zIz7+tw6RzW6fkfqfYIODN4F5rvPeHdmUZN7xZzV8BPA08NPCdD
ta8PhhujKXLmf7P0H418adlbqtN2ftHab+gwd8tNHe7L+11Oz+9usXxF4fsz
1matngMcLTd2WA4+vNrxso/mv7l0Zlab8+M74TmKhV4F/Yxp9Ryot/658Fa6
/pXelmofS03294W/bPL7eEKydRusX6AuEf9nIzu3dFgf+39K/6nUo/9F+BPp
NFIHVzpPxia8F9TYh6Pi6g6vaw75S/nnc74xbbD/E9fHaP4DCtan/v+wVnMB
YGObjEWN/gfU9xnqUqnvoZrvXgXXnd+61eP+1MN2kFHbf3DBvAbwHdyjOTwX
O3sUXDOfevUDC65nz7g1Wu93WW85tRBldwlq8pI3Ujd/n+hTr/7L3q4NX0Wt
VOm8lvrv+xZc057a1w9J/mrqtr9M3Rs4V8hpsv1Waibv0Oq5/Zl5M7fPM3/s
wMuwk3RejP2L5BuLaX6H6fmOrZ4b9k9IrfVNqMUqncO1RycVzA2AnPr+j2gP
2zi/0OB9oF47z7/JflLX/bTUe6eW9SWpm0097f0bXO+dutcd+ndGO2dKW71e
5OzJsrJ9WWpwf9/k/cLWH/L5pzpc6/y5Dq+dn907t3p/kFNbn7GoZb9Lq/eT
uudPS39m8GqyfzQ/z2R3qtb4S7P3Ya5kp6itkc7k1A+n9vqzyhU/ZB9OSD1s
atH/rfm83OHa1tOjP17yu2ODes6HNLiGOrXKX5Od8fwOWvD+UAebevg3aA5H
8XuqZKt3ep7YPCLzYT8nNFif+tBwLsPvfLnex7OawzNdru+9qPbyh4Lr3l6S
+tvUKn86Nbupxd0Zf4ZfhmfIqeN9WWqD845ekL0nUzP82dihZvjLmv+vmecf
WUeLnq2p/Zyo+/d0/3zsXEKdY+kfK/msgveEetdHS/5zaj6/mLmBqSd+s9Y+
rdPv5SXN4cUu17l9Q3b+avKciLUf4s8naL0L62qTzi9NfgfU3z65wWNRL3mA
5lZGXBe8lq7sw4fUoWzyfj2f+tWs8cOsibrcv0afuta3pO43teOP4WdN7s9r
cF9qVr8tmyVF7wPEwOhQV3kINYXUp7pGV4vXT83hEyRbQLLF2Wfykq5rZW+O
+lYWPefP1U6WXg31HWWnq8bvd5JkPWpcP5o5UyN6uubQXzrlRe/5lCZ/f7KI
nl3aYB3q9X6i59VFz+dHtSdJb9Ua1yCmFnGV2kVqXA+Z+sD/FCynVvYrqZtN
3fV/gt8Q3po6ZrKzsvqtWOMayPXqWxVMLeyT9Xx13S/X03u7ZHxgQ/WtLXqN
PYteFzWN3yp4ff/VWG/wdzTUlKWmMzV/qfe7fo0xNYF/6e26udTg3bDGtYKp
8bs9vC41rvnbFTk2WCP61Hxessa1dqntzPypX0sNZ2rvIqfG76Ztfl/YWU9x
P7vFdYD71rj2K3VftwseSH2/Gte4pI7lKVr7DrH7u9Z4qu53on6hbPYuev+p
W0ttWerKbh1MTdB7G1yDl9qop6nfLtLtp/t+ipW5vT2H9WpcX3iZrL1/9oT9
oXYu9ZG/0zi9in5H+0WfmroHRJ/6sWOiT33apqLfF2OzfwOyn8NbXYe2L+9C
OqdrTgdTP1DxeojaQXp2H+eMOo1PqHEtWGq3Fot+T9S23abGtV+p+3psMLVk
S5SPz5TNyTVeK3VfB0u+u/aqs5h9q3HtWertnkGdj9w/1WB9am2yRuqzUnO5
B3+34fcTajVqXg92es7teoeXRo+1b5g9eb3B+Kzsz0bZk0cavA/UXJ3RYDm1
NB9t8J7sSbxQV7zovThF+WlxXRsTJ9qfGV2ulfqa/OfTFuNj4ifUQb1ecxyZ
M0rsCXVQqY27UNFrpD7qxTWuQ0ld2ke0jkWL3iv2mVqp4yQ/h3+PRp/aqcip
r7kovw82uP8bmsNXqdE5vM37MEz4nhrXVqXfkn28Z9TrLBGe0WE8utXzp+/Z
/Fs5c11L81mz0/UBb0t9Tmq8vhNMXc1ZqeFJ7c17UoeTOq5LFj1nni1etE1q
cX7R4HlRW5I+6FNf83uN/0+D60Uew5lRfk9Wnzc1x69To3B/yRcXfkTyMa2W
U1Oyf6fXTt+Z0v8x8gOks3+ra02+JflPqTs5oNM61C78q8Z1JKn3+E5qP1KD
9J9g6kO+l1qRrPdX9evd6L4ljZZTE5KL+pDU+Zup3L+S9KoavT/IqXE6kXPP
WdeRnD9Vu5eevS39VSXvTs0Dvv0vOr8c1Oo5UxvxEGoSpNYc9Q2pc0jNw3GS
j211PcT3OqwzPOuiViH1MYuNxv/VRZTO77HJGkdm7W9lH6ilWU5Npw7XsFun
0/rgCzTn8+Qfa9VKX74/s8s18d5Vu3at8aq1rslGDb6+jcbUaHpedp7rdN8O
xe/5srOj8Aoaa6da1zp7n9pHXcbU/KL2161qm6W/TNFjUC+MGmHUB7spmFpP
+9a6hhj9tkqNKWq9jY8datNRi466Y0ekPhSYmmMXdlmfelxb17o2F7Xjjq91
zbJZGYv6U9SeurHNOtS3Wq6P10EtrfOpA5+6Wi9prSsUvTbGZm6MX6nnc7S3
h2dtEzJn5sNYjDO40WNRK+3m1LTi+ZRa4w+y3vGZ/4nB1Llar9E2qVW1qsZa
pY9r8tD3+KzlOs3/zNS9ukF4P+otkR/TUu9oJc19TK3rX90qna0b3f/syKhl
9K3W8W+L61B91wHpr+s1HaH28FbL2cNJWcsEycZH50rOCzf62Yf8f15qB93W
5vVMFj6n1rWTGIsaSdRKotbN6amPRJ0uaiSBqcV0ZuoyUcvr9mD6bdNoe9Td
OSs1lz4lhrIH1InDLvWeqJ3DGk/KPnDPHKjfs77e6bqplfSz2qu0hoele26T
cwT57eY21xiivlCfOtcEoI7Ebo2ua0R9GGrxUJOHOjzNwayDe+rzUHPlyi7r
V1Z4LWdmjczzrKyLmi3UAKL+yll6z8vo2p84VbtmauKsodhZs+j97dfH80Xe
X/Kr4ZrR/cfEXWrgUG+F2g7UV/le77RU7+tC3T9Z6/ov1H4Z3WhMrZK1+9gG
tVH+IFd0Gm+UeTLHR+DLKHqMORprdpfH+oF//6U2yibqt3Gn8YJ1ngO1NX6r
dZ0N5rVwnTE1E9qydvZjaKfnSe2MH2WzMniucM/UxRhS5zoJ1GR4l/Pl8tt+
dbZ5TcZ6Hl4I8rtklzVazvn6SfBV1trO5no+Vc+uEF4375faCy+q76Z6Vqzz
/BmL+hi8e+pFUFtkUJ0xNSJ2bbSfUOfqeNnv3uraDdSV4Lw/dSUmt3r+1I94
j78/ZM5TJFuszjUdjmv1HlIH5Be4B6O/T53tcL74Z8kLsf+1ftZ8KVvTGj2f
mzLm7/zbN3UiBha9Nn5v+anDc8P+dfKX4emzJ38f1nWY/u26DxwF1IWAj7bV
c6CmwNA6n++n1sOJrbZPPYIt9L4273S9ghpqy3VY/zO+b6yzfEet9Yj0r4WD
R2OfzllAzX1ztbdL/pf6NcQm9RE4/07dhFNzFn6LSu/DnXk+jN9JcuZ03aLX
wrn49Yv+PY1z72en5ZzyJZrbOn18xn5jxcsGRc9vq06Pi3y/Op+jp67CnY2e
F2ert5L+NOrL4V85w87Z815aS72uy9hHPT8zc/iCb5+7fFb9sJxVX0n6h6Qv
NRQeavRYnI2+Ljqcc78+Z973zdo5S00dgM34frXofftb+3YL/98hPEzyLYqe
w105m3ys9HeU/Fb+v0OyoUXP7TE9G9TH6+Ac9XQ9X56/twj31nwbuyx/ILqc
8z0758epIXBFnc9hczb/tFZjzlBzrpkzzJxffiFnpTn3d1XOWXPO/5lgzl9f
k7PY1AF4Lpiz1XPb7Ces/7rYYZ9Pzrqov/Bio890X5i9ejb7dkXmwLnYO3J+
mXPgt2t9b+We90vdDGoaVCh27uDvBZLtob26k7wv3FvrWqHJ545n6f6lnj77
/Fqjz0FzJnW7oveVZ1vLf/ZqsT5n5jmHe2rWNSPrfbPRcs4mP5Dz1JM4O5qz
yU9xnrLde/S67kfK3nfB2/FNb9Hv+ofY5EzxLX18vpgzlm/mvC3nqHeV/o5F
r2uE8H1aSxnfd8v+vcIlwveo/Td9eP/M4Wz17S6dXYreB84Sc16Vs9XsA2d7
78r7fSPv6371rZC9t3VfV299ztW+32j9z7NGztJy/rq53phzsvUaq07XN4wl
Oyvq2Ud6tlvRa+ds7H6a/wN61s7ZrRav/wPyHn9/qjceUfQcONv5d53PinLG
eK+i18hZ0X1kZ++i175MvXWaqvR7nOQPy35fvuPm/wSpUcP35sLDi963pxvt
/5xl/7rR43Be8HLt/3p9fFaztd7nIlnXj40+48mZ0KZ6n9PkTPHAYM5psg+c
2eR8MfuGPueCB0fO+cqudtvlXPFCwgu2ex/Wy1ichRyj+Y8qei8OE35U899A
+FvtzzddPnP6vdoN642XqveZSc5L7hA8RPhA9d2/6LUvpXEOKnpPjpb8cf6u
kXF/ytwe428k9T5H+YTwbsLfCY8t+j1yNpK1/Jj1cs6QvpxLGxc5sr8brct3
y+wPZxU507p+H6+Ds6BL87Ooy/gozeeQoseeXO+zeZzvW4bv24te59/wKSuG
fyZ2+Pdup880dlPbnPONB2UszkJuFzuc7+vV2+cHOXf1pNZ1Qr3PEO6QlrOm
x2kOT/E3Z8kW1bwOL3p/Tqn3WUDOHrIf2NmAsxL1PmPHOdANNc9Fc07p9nqf
MeOM2MQWz+lvfuZp7Z26zmv1Xv2TeXL2D8x5qck5X8a5xJ06vV7OyJ3f6jVy
7m4X+Bo6faauXvZKc46uXG1XztqVCXdEf1Lmw3k35lad82/P8PfkjFfBN5yt
Pou1GucNNe9LOCvFNxv1Pte2vOTji96fe3OmjHNt7A9n3A4XPqLovS3PM+Sc
b1uVf3u22+ZumRtjrdnk82ScF7ug1fPnbFildBYJvlDtlfXe2yHJ8/wuNzNr
4axWG2cb803zMUXPmTNU9+b8FGff3o2Ms1Qb8N0X9U3IcTnzxXkrnqHPWZyd
pHO2dD7W80ta/X45U7RM4oNz61tK51L+j4d1cWYh54i6az5LR39mzuy8XeWx
emfOBflzX/5vT765s/pelLEua7UOZ3bezfkd5sY9mHMY2/G9hK45en5xq/eK
s1ElsjlVdtbn7329PW5B+pe3ej4tui+XzqXS2YBzla2eM+dbemrOKwZfqfbX
ep9v+UfjLKn7taVfLZ2Vcu7lqlbrcw7kGrUr53zC3tJZu9XfBF+rdvV8g94q
X+3It8IN1O6O/vWtfnd8S1zXaX3ObFzXah2+Lz+6u7+r5pvqouwUO21zeuS3
qW3OuOjvKbxHp/3hzrxf4vFkreWVJv8+PDvfy/I95F5ww/Lv/V7+1phvjvnG
eGq+VUa2qmyP6u318i0ycr6TZ+wlMpe5svNTl79znh77fIs7Jzofdfd39ovF
xquay8ZN/o736lbvLWvfKDJsn6R13NHh/7+9TDnq+KLn+Z7m8rp0li3Runr5
O06+7xzN763Sn8L3Zb38XS7fxF7c4fUskzUvl2+FmdPyke2nvqN0Tea7p16W
N/XwXiybfRij56doH0/v5X9P8K3kL/l2Esw3b+/q2UbC/ZSCDpTOAZxt1v0N
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
v32z2t9+7yt8jHz26E7L6jIu8bt79Pco8Tfc6A8vcftmML79lvCqans3GI+I
n79d7ecrwu0rfKnwnFbrvaP7z/i9sdnflhMD7yZGmhuMR8VXP0wsvAw/l+7f
q/bz96OD/izhkcLX65f616TXV7IVIr+kxPH0fsZpyXxGJV4ejs+vlLEuEx6r
6xP8Kz7/cXybZ7OFL4/PzxHur/aA4APj8x9V+zlxNzux9kFvyw8q8TrezpwH
ZSzGWbDDYzE+MfBpYm1c8MEljoHPqh0ThwQfqvb2omPhc/T4N2DwRrw/tRsm
Fr6K7MjIj1J7rfbtTe3boprXTvz/g+SHS75wg/XHJ16+rrYN4uHbxNTPeo9v
53v+xRosP7rEttCfEDvfZCyefx+dF4I3jf//nLhYS/gn4TuEf2q13R947xpn
jWBi+cfYWTP4duxLf2bOMiwRO8T7ZF2/Ck9Ru7bkc4XvTDzOTZxyzxzuSgz+
knjkHny32q1jh9y+ja7fqi27UlclP2PVdnXYX//Rs211/3u1dU8IPjEx+4fw
rvhU8Fm8Z81/dqvjghj8M3FNHP4VGWcr/ha+qMR90Dk78fV3YvPs6J+j9thO
xxrzwQ+rCvbVPpw1SAwO0XrLJX9F8pI2x09ZwTHUrWBfvaHdv0sQX2Xwqjf7
vAM6pQXHGvGH/sUljjPkxNqU7NUJyQnl0V8v47ycGKwoOFcwD/CrJZ4re0uc
fdDNeZ7ffabxd+isZ6D6dqh9IPHSo+A4ImZ6Fiy7JvJrSxwz1QXH0Eey0b3g
59dG/zrySXRuKLHv1hQcN5zhIUaGRFbLeZcS+zgY3X4NfnZLcJ3wzcKTOu2f
9QX7bO+CfXiu3t1XrY6jRTocj+h8I9nXrfbnRTkHEd8+vtNx1yB8T9HxXig4
XpARdx/p+aYZm9hhrNskXwzO4sRsfZtjqkl4aNqPElPF6N9GXor9zSP/OHHa
XHDcEV+tBf/c4V10Cd+f995W8PMtIv+mxOd80OfMzkn4YsFx8YmuFuFPEy/t
Bdug5TwDZxk479MWzPmGzoxF2x6MLfwBGwt1OLfyjgc1eKwHJX+W3CT8nNot
JV9A+Fvh/9FH+EnmQz2rgmWsmfV+kphFfmZsLBI7g2IHPzyx0+e/eM65KnQu
SGxin9i9Vz78Ff8f3+C8xNrJe9Mlv7XdZ6uaS5yzyeHE3OKcmRDer9FcYnBu
7am8vZTkpaXKXVrrrMTmfR0+B7Qkz/Su/2q1nHhfKnFHzlq64ByG/y+XWJgR
+RuJ0yUz7m2a16da/zK6/7DZ8bOs8GdpZ/I+NY/1ODNQ6ntsvlXia3nht0sc
V30LjjNiY0XhaWo3aTD+QPhuzf9zanXp/p3ov1viuF8m+Rb9lchDJfb3VdL3
tE7HwMqJ5+UT+ztFv5fm1qw92Tl9lu3wOTj0Hyra5xn39E6fa1tVuBq+6Daf
+SJ2Vlc7XTZ3lY1+wr1l8y7tz/c5s8YZtbUL9nfOsaE/p8SxtkbwbsFNpT7H
tVbB57ro27/gs2bI1o6cGFwzcUofcLHUZ2X6F+afpRsQ/e1bfTbs68TLoODf
ooN9+q5T8FmbH4Pvi3xgdJbv8Nk99uH3yNHvK/lnOQdH38GRE+uDEo/E/roZ
d/dgfIS4Wy854XDhq4QPlPzMTsfekMTh+onBYXyHL/xnieNtg4LjmHZDXX8J
/xL9X0scQxsmNvdK3+Vk/3Fqkuv97SPZWZ2OwY0Ltr9B7NwnnXvaHZtHdWk9
0t+bf3tRH7LZ5woP4e+omSfn/jZT263UsTNU+HW1FaXGlZzva/c5wC3INc2O
mS0LjqctEmtcmxdsY8UOn1dkbgsoxvvwf5BwrcnWMMlq1PbQtZVwz1LH6GaJ
U2Jtq8TjE0XH0daJn2GJpwc5FxA5MbFN4mKV4A/i2zsLN0o+Wnhb4cHC53Y6
frbT/aodPgsJJp62j531St13CGeptIdLSn+Mnq/W4RjZQc+O15om6bpE9s7r
9HlD5MTTTompI/n/zWafQ1wj8jn5OUJs3J042iX6nPfcU7ij1H6+e2KB+NqV
XFXi843gtrS7BXOeEowu88bm+pFjh3OgO2Uf6oU5E7lH5L/mvCh2iJE9EzvM
Ya/ofJuzk8wNn+BdV0V/74LPRX6Vs5DocFaSM5OcD+Us5XDhLUodR8Mj30XX
fsK7lvoM6L6xc36n/XOE7g/j79vBe6rvKHJeqWNidOICOXaWKXX8jCw4npYo
NV6y1DExOjFCTI2Jnd11HSS8h9oLOx1fB+p+bHR2k/yCTsfR/rpfvcNxBCau
DsgciG3m9ofacZFjmz06OHE0Xv7wc7Pjt1+Hz8QyFudlx6rtK53/cea9xff0
GVdwLHLec1LB5zpXi5yzpPgD8ha1a3Q4zg7V/eI5O9tP8hvlpzfomtDld3+U
5HWlPtd7SN7jEtFfo9QxeXjBMfpU0bF2pO73a3DfQZI/obG+iXzN6K9V6tg+
ouBYR3+88EBkweNKHTfHFhxna3U4Ro4p2DcnJE63D+6V+D064x4ZfHCpz+Ue
nDUSo9hYN/t9SORLcfaT+1LH8MTYJ76PTX4AH1eYHzfHJR7Z1+Oz55wtBrdm
/y8if5T6TO3k6BBTUwrzzyKDOaf8a7PP5W4Sm+hvFJ0T0veZos8yn6j7H3OW
d9NSnyveJ3HBWeOTE1/P8X1gzt8eETlndTnXe0owMXhq+i6s6yzhhfj5pesM
4a1i/7To1wZzJppz0KcHc6YXfGypz1CfmJywYOwsEDunRh+7ZwoPK/V4YHSH
ZQ5bq72i03F9tu6PlM1vg5du89rZK+L2nILjeIfgHbGn6zzhs0p9lnpqwe9k
7Q7H1/kFyy8u+LwwsXh+4pHz3Bcndojx85J/sHWB8NmlPm/M++X8MbF8QfIA
sqmRkzMuTN4YG9w3eYx8yO8SzOGS6HPO+grhUcJXdvoM+aUFx+TliTvOk1+W
OZN7zs24Azp8Bhz95dts59JSn3u+JPqc38bO6FLH4ZWJy96xybgDSv27Sv/s
ybnJXaOjPwY/0e/n7fr9fDfONxUd41cX/HvONWoPKHX8XZ8YJKavTVwT49eR
O0t9Dhf9q4T7tll+banj7/rE4KG6bhI+LHF9Q+wcHZvEOz9fb0xcE8Ng+g1J
X3LI60Wfl38icTVN7YZpb9Z1VOL05jznfPytiTvk0/+fDvLx6cuZas5Tr9Dm
uV0n/Fez9dH5Xfi3nDf/rdln8G9Lv2mx+WLRZ+eRc7b+joLPmK/Y5n7Y4Zz2
LdGfGx1ifx3OvjX7HPtKbT6jTl/O2t9T8Pl9zpHfHUxcPZC4I5bvSlxzzhz9
OxL79xb8sxi9+5MHJqfvFLXHR47suOhPSlzfV7CNGzsdsw/iw5rz98HEw2OJ
NWLrkcQXcftQwXF8SvCppX72cMG/C5wRTHy/yvnynOF/OHbOTH67K+slLh9N
jJwXTByfnTmcU+qfpY9nXtyDz+W98LtffJsaBfjOPpL/qf3+s8ln/Dn3z/l/
zuP/nfP9Fybunkpcz9A8f86zhuhfFJ1nCj6zTww+///wM4nZhtjBPuf4n/1/
Os8VXKOAWH8u8btHq+d1fqnP9D8fHXLBC8KXlTo+XxTeX+2bRa/xZd0fS81k
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
64FRv4s+6JyrtitydKhphj715f6WvDVzIg8endjZN2MNV7ufrqOER5c5bo+s
cRwT64cl9rk/PLliRPDI5IQjYufQ6IMvKrN8aplrjx2Q9eLPjLVGmfsz1qjk
hPHx89HBYxLvE5JD1uf74dRBoxYZa6Hm2CeS/SHfO6fGOWFijeuzgY+NzrqR
z6vDdpzw2DLXMzsmOkOjT1/qVB2XHPJwp+u8HZ9YIkb4+daRembY2afNmJpm
bS2u/4Y+9eSm1Lim3N5trn2GzoZayynCRyXuThbeoMz1z06IPvF+Ys38+D4x
sU/tuJOiw7omZc7UTUN+ffpOSW4hnhmLcY7IWEcmxk9NvD/XYDy+zPF7WvJD
K9+ApKbbCw2WT8Ce/i3Wp8X9kJ+Zvi/zt3Thk4Vf5P+no/9x5A8Lfxj96fiD
rvOFd4j+GbzXMsfw2TWOaZ6dK7y92tmxeVvGQn6K8O+9rX+ccGmzc9E58RHe
LzXrXmnwWKcKL0IdYt1P1f0C1CHm7/vCC1FvWPgi4VfVXqj2NOm/pN+ZX4QP
ssH5CzlzJ/dcnDz2Smyckvw2NX3HtlmHHPVqbJ+a3HJJ8gy58ox5+bbF8jPL
/De5l/LvZfQvq3Gtv9pG/duG+Zbr9yLZvFz4f2XOJVck1og7MHX/vpLOlcJP
lrlm4OWxPyPys5KLrop+Z4trA16t+yVaXM/toRrXBrwm+W3BomvunSc8qs11
C3m2gXx7v1Y/e5P/C6hxPiCup9U435AXbmTvyvz8+pr5OeP65BD63iB8YZlr
3YFfKPMamOdTySHYIScNjy1yG3ZvEr6kzPnlpuSrSzOHy8qcX25O3rss+PIy
141cSHiFMtdFvDprfEfzuaXGdQKpEUjdwKuSQ26LnHqEd9e4JiH5ZHpyC7UC
qRl4TfSnpy81CW8XvhqfTF3Bq5MH7k6uWCI1BpFTX/H2xDv274gdxr0n9n/U
PB8QniX8XvBNsXlvjfME8X9/jfMB133Ch2eNt+JDySX3Js8QP6ydn3E7ZizW
OKvBdm4W3kp7tWUf5zbGxea06DwUTC0+7FOH8HHl1f3aXPPwseCHhcdEhk3e
9+vCL5Y5/h6lP7EvvHSL45Fc8mjyD7nl8egslXqKtwgvx9959Owx3c+Nzpzk
jf8JH0s+7HBOYw49m/0z5Unhz/m7X/Cf0b+rzDnuKeGT1H4km08LPyj8p/Dz
wj+RB9qdT57T/a/R+S758BliSvi34O/Jvdq/07qcj8h1TyRP/i78rPAPGeup
9H293XmM8f7IOD+WuX7mC8KPl7lm5gvJPzPaXVfzxawf+x+p/SuyuWWuYflS
jetYklteCcYn3kiMkE9eTc75tsFy6iv+XGb9XyJ/U/g14b+FX67xc+pevib8
fOJ0Ro3zAX2w+WuZ3zfyl8oc968lD0yNP5ArulpcU/RO3Xdr9FjUhKS2JfUu
30iczkxsUqvz7cQL9SDfih+SC19KPsQ338paqH33bo3rWyKfGf3tYh9MLdB3
E5vI38641M58L32/yNp5F9tHjg61T+9MzJIf3q+ZXzf0/ci/V98Phd8jz5UZ
35AY/0T4/TLXGP1A+O0yx9nHibXrIr82dmYLv1vmfPBx8kNf/mbVaFs/SGdO
bJY3Wr+23LkDOeM/0emfB5/WOIa+TKwRX+DZwv+DUyA1QI/mO5Q21wV9stO1
Tz+vcc1O6nhSn3ML+cOS+RlToXE/Ulsn+eYdronKWFvBlZb6oqsklr8S3rLD
eeDzxPXXmQNx+o3wncI9Gq3bWO41fpT97Nlo/d6SlzRZ/7Myx/B3wg+UOabm
Ju5+Ef5e+Bvh+kbLFym3HP1vE/s/Jwa/1bxK+aYhsf9DdIjlnxLvhUbbXEB2
6hotX1i4ptH6C5Y7P/yYvIFv/13j2q2MzViLlrtO6u/C/5b5/hfhxdQ2ys5v
wsuV+/5X4cXL7f9/JV6IzV8T+8TRH8Ll5c4JvySPEY/YJx83RWe1cte1xf6f
mdufiYv6ZudM1r5b5LzrjfI7zG6Jkb8TC1vqWUOt3nNqzf6b2NkjeF4N2lmJ
EWq7/pN9oFYsB/zXSOz/k7GoYYscnTbhMuEBwu3C5cLrCJdFXih3HJXU2n55
dGok7xCuEB4o/HSn69n21H2X5D3UDi53zdvKWsfUNh2uhdtd953SqVI7qNwx
PivrOrfNcccz5lCasf6LR+F64TfbXWeXMbbrsN8z7lOdrsHbPWNXq1233LHD
PInZd9R39dTdpW4v6+pZ7vhnrHfKHBOFWsdFhfy0TriVOqu6aoWHJC6Qf8rP
Bd33Ft46vgrm909ioanWfsv7a6y1bkOz/b++1r+vIsefibvajLuFrl61fv8/
s/boExfI+yQW8A1iBF9rrbW/NUjeJrwMNoSbhZcW/kPPisK/l1lejM7XWe/s
5IQa4Qbqr9ba5rLltss9NhaMzV0SR+3RYf2sdxu1C2UOu5Z7Pi3R4X1gn72k
pnJHrWOQ72nAu5c7hjprHUfUMV4gmPjqEl613HmyT63rG4PRJ2ZHRo6fjyh3
35GsRX0XFl47OgvWOj6Gl9smuvjDQrWOqTWC18SPyt0XP2lqdj3kNWttcxG1
a5U7ThattW5ro3F/4SWFF6fWceJricRaW+T9o79Y5kZcLpjYXCr6BwkvLbyU
8Nhyx8iStf5ZsHjmsH+5fXzJxCPxs3TiqyN9ieslMtYBiaOlE1PYXUZ4XLnj
d7n0JYaWTxzxDPnB7Kt0VhLekfjtcEwtW+t3u3z8h9jpyz6xFl0rMr9y11um
72mxg5za0RuVW3/jcvv7Cok7fHflWtug1jR45/hYv/ghvrZa/Jnnq0SnOXie
jVUzFjWqV40OuWiZ7Ftz7GCT/LJscskK0lld+Ixy+//q6bti5nBmub8NWyM+
zz34LLVX6/fWq/jGo9Y1tPGdFcjP2rOli66PjY8OUDtK7bKpe71X/Lf/vFiQ
7y2VZ/2iv3p8dZ3I8IfBwmPKbQv5fvHx/vHzxaQzMDrgQcKj2Z/gy4UPa/W8
9hBeJTavYP+F1xW+Mr69XnwJX10/fr6Ufld/sdP3+N2Q+N5q0b+q3DEzMPGF
zga1831wo/ghPr9h/H+JjLt/dDbI+1ou+vjq1eXWvyZ5ZuO8u4ODD4mPbSK8
Ybl9cMv4MD63aa2fHxVMHfEq+eFm8cnuwROEt6h1zXHqje+ga6jw9mqX1zw3
Fz653HbR2yHyodGnH3LqjQ+M/sPR3TLyv1o8NjFAnfKtIn9c13bCT8Qnt611
rXX8eVh8m3VtHX1qlm+dWKM2+zbB6AwLpm438sfKXa+c/Tkqvr1dfH7HDo/F
+NSd3l74XHyvxXXauW9Ljfcdal3XfYf48HJF10tHf03p9809Prdz/HMljbWL
8KXByC+Lz+wRfxvY6drq5wu/Um79V+O3u0Yf/9w9vkrM0fcN4ZvaLJ9R7j7o
vxbf3i0+j9/uWTvfj/aM7/Heh9fOryu/T/YHH90rfntN8LXlrjG/d63rtI8L
Zl+pg85Yr0eOHerAX9vmuuR3lrum+76RjwvGzjVtnsN04WN1jRCeWO5+I9KX
lntqmx9H/Ndad4DWeLjwg+y/8IHC9+b5fum7YtH4LuFJukbX2gb14MF3k4ua
3f+gyMZE/3hd+9e6XyfneaVzgO5XTj15+l7Q5NruyHmO/j2STy73fLCxZLPn
eoTuL5T++hmrv9pD1T4gnUWls7buD9H9WmrHqr1P8oWbfT9O91V6jx93GJ/A
O1M7pdwX+oyJDeT3l3vdo7KWE8s9Fv26y86nHR5r8WbP4zDhHpJ/3mF8Urn3
ln5LJNfhMz2l82WH10KteurXU6P+SHxH10PkN9lcRzbH1zoHHJW8AZ6QnMDz
I6NfLZtfd1ifnDAh+QR8TK25DJYP/8B55eYmmCj8TLl5CSZGfmj0yQ9wGxwr
fANxSn04jXcc/tdm/gB4B+AfmBx8ud7LltFZodm8BZOIN8m3CobTAA4A6v8v
2+wcd7TuVy1aDh8B4zDue7E/JfLxGevm4BNqzXEwIfiWyE/MfM5TjL/ZafuT
I/8w8XJSrfkWbtd1ivBt5a79f2beBXFyaq2fnxA5HAEfRR+ugevbzB+AHC6B
k4UbK9zvtNiBW+GM6PCeT438hsjvzLin1c4f8/TYPzk+gR/BUcBYcBBsSv1t
re2CLvMSwE8AJwKcBOcKd4SjgJj6otzcD6x3jto+zZaj/367uSvO1/0qRdvB
/kVd5sA4T/ffyKf+abEOMXdubH7Qbm6DC2rNMXFy9nZam/Mp8p3Vd/3UwN9A
bTO11DW3i+QPm6jPRcS77i9Ru6ba3SWbGtlUah7q/uJa6yKvqrAM/e7CH3Pe
U9eluh8q+RVqe0p+MT+LGy3/UM8/6LQdxriM3KD2c8k+03W57i9pcn/wcLX3
qt22wnrYXFvtpdLZXM+urHV7ldpqybcQvka4INy/wngA4zT52dXpjz7PmRdz
6FHhWLlWuKbC3BfXC9dVOFauE64V/pqzip0eF7vor6N2YIX1B1X4Hn1k30v3
u06PC0/HDWp7VZiv40bh+vjpTXlfg3U/TXjd8GJMiz4+Pz2+Suygj4/jQzfX
2qfwdXDvcG7cGr+l72215qSYEjtwVfDsllrH0H1txsXweNyWGKHv7dHfV/O5
W3ibCvvgXcI/lJv74vbYJwbuEP5e8u0ajReuML5TeKEKc4jckJywT+RbV3jv
2BP2YPuMtXAwYy1SYT6Te4R/VN8dGo0XrTC+Nzo3wpfRaX+ey9rU/qR2R+nc
H324QR4SXl74Zz17ILo7SedB4cUkHxH97Sp8Id++wrwt9P1b+jtL51HiFX6Q
TvN3LFdhO9hcXLifYrxfOD7WSttX8rIK9y2t8Nzuy7jYfEx4ZXyJb/5rrbtL
ozEcH/B9/E/XahVun4ycwo3cl0f/icxtjaLnxnrhBnkyfcdI52nhkRXmM3mq
1pwmozKHfSvMg4F89eg8U2uelF3TFzvkg2eSE+BSeTb62AWPUruArleE+yTH
PJe8QZ55PjbRA+9XYZ98QbiJuE7fLdV2Nlk+j6flxfgtfvhSfJXnL0YH+cu1
5jw5Izobhv/k5fgtvn9r7Cyo69VazxeffzP+eYjwDOHJwr/qXb9Wa929G42H
Ce8l/HrmeXDw8ZFjc6vozwiemn0gxx4q+RvCUyocF2/E5mGZwwkVzoczE4OH
B58YX30reZJ78EkV5pp5W3j3CnO7vBPfGyS/GlA0N8zaadE5WnY+EL6QfBsO
GvoM4HeqcMRMbHW7p3QmSH+W8AUVrofwYXxmVOzsU2E/fl94Jfyh0Rj5MdG/
KD45u9acNV0a8xPhI+KfH0eOr82Ov8FxM6fWtRfoD54anY/izyMzt73jgx/F
JzfX9bnw0PgSY61f4f6MdXGF/ePT+M8RwUdW2Ic+i/8cGXyU2omxeSzxi38I
7xQf+E54kvBY4S+Ej6uwf3xZa78e12g8T+er2Dk5fe8RHpKf2zzDp76Oj/Fz
/CTpfVNrG1/HDjrfxvfG5Tnjzogc3xvf6HmeHt/+Pvo7khOFd1B7v66fhB+I
f/4Q/z81+L7454/xW+7B9DslNu+Nr/4UH2bN7APv4WRdc2vNZ7RDMDn2lMwB
XiH28Zdazwu+IfBpwpvJt6/vMhcTst+iz3upqfN7O13j/i75Y8KDW8xz9Ifu
/+w0HxIY7qA/dZ2fPfk99vEb5HulRe+8CnP7/E3cCg9sMX8TMYYv/xP/J47+
TVx8EDkxdXAfy5+Pz1LIFx8+VvoV8A8Jny1cBi9IYqSkzn3pA35B7QG6SoX3
x/cajekLB9JfWcvE2LmiwnNjrIsyVjncSMIHVhhj75zM4Q3hg3RV1vn5cY3G
Vyfe/4595FWxc27wm8LnCfcQnik8RbgWPiDh44V7Cl8beR38QfhnheVj1V4Y
+cfCk2KHcc8XrhZ+S3iBJr/fm2MT+TXsVYXHOlrt353OIwXd90k7rcL8VL/l
/RKz9XXu96x+1jzTZm4pYq9XnZ//A6eY3nGj7k/UWA1ZC3PtXud9eq7NOvTd
Sb9jrxeMPvbvqHDcNsY2sdwEt4/wxsIXxe4LsvN0m+OctXfPuohd9Inf0ZX6
vVjXZZXODfwOT7yfqPuHhU+qdGy21znuyCGt+T2feGyrcz65WLhF+HPhSyP/
ssIXfb+qMMdXV51jkTjtqPPPlEti84vEaWedn8OnBn44sq7gbl1e56p5jt5D
sb9Anbm9Lg4mfom/her8jpAv/P90kD+avgvG/oOZGzaviT46xNmidY7ByzXn
RYR/qjAnWJ/0PT1y9PFrYvvZYPoS41dnLOZQ6GMd5Geo7+LCr2Jf15LCl6k9
U/KlIgcjfy3xtVziGu6tJXSVwYHVYc6spRKrS9fZHnlgWTiDhEdK55r0H6a9
vDrPzmq0PjrgZTIW8bh8Yvna4O6Vjq2VE1/XKC4W1LVinWO2b+L3uuAelY67
FRLL3IN7VnqdrP1S9rnTMYYd9oR1vSL5QpwPgN8nMbtSYrAhc7g98b6K8EfC
NwYXw6V1Tp15vnbvMO8b/vOF/p27nfBN/H5B7azE0Z4d5ndbXfd7CQ8NF1tJ
l7nkkMMNh/5n/KwJT9yadfb//vHnmyNr1bjvyP6MNtu5RfK11LZV2v/XTuxw
D25X+2mbY3m13GOzo9JccQPqzONGu04wXHODgm8K/i7+ObBuPjcd+g8mZtfK
/NEZXGc+FPxzvTpz5yFfN3YezHgPRGdwfP6a6OPP06I/z86Q4JuDsQnX3vrB
VwpvWmfOOGJqgzpz8C1Sabxopfn9NhR+SvLfKox/T9/NeCeVlm0U+cvkQeGX
1F4hnU2EIQ+Adw+dpyvMs4YczjV0No4d/Iz5YGNLvdOrEgNwtDHWytK5R7Kt
hPsJf9bu2NmSPWpzHBKDFfKT8i7H4b7yn8FF40/bbXOLxOvQrP2uyFYTvjX7
wx583u44Zby7M87qlY7BYcJVwvcGr1HpWNs6sck9eE32sMuxuY3ur1W7aDBx
sp3aOWpvUN/thXtXGiNvEv6KGkftjpHF1G9byXvB7RX99SsdZzsk1rp3OaZ2
0v104V+1Lw9Kd78Ocxoix7d3SN4gTnfMWD26zFe4i+7HdDiuwPj8nmq/VrsR
MSy8MXsl/Z1azG94sXLpVF2FLsfcbom7tYLx8wcy1gaVjk3stFQ6XvZO7GB3
D/yj0nG6R+zANcgc+qTdKxjexb0yxxtjZ4HI94nOHbIzrs68fnD6wTMHxxwc
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
dI7Vfo8vuk+F5PeovanK+N7orEQ9fuGPqhy3D9Q7jmujc1Pyxn3183PDfckD
6N0vPCHrujNzXri35bel7z3JFQtnrOnCi/b2WLcTO/Lt7fo4Z6whv1qPOj71
1nk4do4u2j5r3FbPT9fa5ui+X/QfqXfOeCx5g5h8qt4xSu4hpzyu+wcif7DK
sfJY4mVHjb9DH8fumS0e/47klidik98JnkzMrhx7nwrfG/l9aleJ/mfCa3c5
t+AP/Hy7pt4/swZIvovm/DR71+G4eF54vPAk4WeEH8Gf1D6q9mHefWRHdDgH
st7zWi0nPwzucty9QN7o8hjYGai2qlM/OzTe0R2OWXROi33yyTGSn5SYXT97
z3vZXHij9vmxfE1yBbnhJeFnqxz3L0X+kq5XhV+uciyBL44/vyn8jvDh2uNX
hP8SXkd79YZwdXfnkFdic0qz4/S1escFOm9JXogdfGx5eIEjX5wz2tEnDpGT
/6fCl5qYaoJjVfi9xAj43dh8Kxj5O9FB/nbm/L2ub4R/YK+K1scPB2gOM4R7
av6N1R7rncTOO4kvYua9xFHv2GQsYuB94VvVrig7s4RnI4v+rKwR+zOjg/4c
4fWi37u74/fDyPHHT+KT63Y5RmbX2x8/iQ9fINmQ9LmkxX78ab3j7IPE2nrq
u3W742tHtcN0fUycyE9Oi83jhc9psfw4ftYnHoeo79n5WY/vfhu/3TDjtGjO
3+j+S+Fvq3z/mXCr2i//j6nzjte5fsO47UzOOc9znnkOkYZCaQuVporsykgZ
oaJkhFQq2hSl0l5K2khbKdp7CO20lNDSj6h+19t9eemP43s9t/t7f8b383me
72ddlz7/KLxG1zf1PNvrb7Xvp/7pB0c3iu9Y7EerLXVsHH2JfveDy/6c49PX
/2KuQP5r3D+JT389mHn+sni2z7nsfAdez55z/x9jnyFl8dv9q8vyG3Ure+1y
PXPluavwL7LvKtzWeIN8TlW6g/X3v7Kwr9f1T9nbCf8q/D/hpfXDvkTXTipX
02z8X6Hq8x7lo7t8rxC+UXiD7P8q3hj9tXeM3xyns+4tVB8/JR996E/3I/rN
Zvevtvr7S7idrrniyNdm+bRSmoeovJv0uYb+b6OuNbnmI13eAejP2Onfd8nW
Tbbf9XmAy/eX+wLxC90XNrvfTUtH39zktLfo2r4g6uZP54HvgS3uR7dmo1wv
u65+d70R82/hEvk00F8N1X/DgujX/7pP0Xew03/76d66wkcWRH+p6+dF+68n
XCncV/Y6wkcIf6V7agp/6eeLvaIg+izxS4X7yF5L9sOFD0uGf4Ux9vKC6MO0
DeJNq4o+VqTPdYXnCHeUbxc9r1vg3pF9Yj76Y33h84RPMk66vHyfdJDtHz/H
rrr3dsespZj3CR+l/7+Kd07HpK+V6JqW//H5KC9t+2TZi/l/6lD+k5hTSMbz
IP5BBTE3SJtnLI4fcY7RtUej6I+l5dFvy8qjHzfS/zUUbqxrF8VKCu/iPo79
5/rRH7D/oWsVaQtXF8Q9xNlB16a0G+EdHadSeGfhOzPRVyvKox+XO/16yv+h
/jzE/r3lXyT7xfnoOzOE71R7yur/hupzStc+8hkG579w34LoT+ny6Ee9G0Wd
tCiPdo69eUH0ffLGd0VXx6GMxzeKfkr8ybrvNP1frjz6B/H5TrhM9tP1Oa/P
DdRH91F+qoRLlbe5urcH7+xuG6R7mMtKfdAPq8ujX/J8GpdHG9hizHOjzTUT
LtP1cN3bSHgf4bMVd0fhMQXRv7ET7w6lv0N59KMT7dNBuHcy4hwmfLD+mggf
UhBtAv+D3e+wl9p/J+FDhccKNxceXxD9rrn7FP1lZ8ek/+3q/ki/28X9iHt2
F56g62j7n1MQ7wnUE98Po5zW2ILoL8Tht4/+spvwUTxHxxxXEH1od6e1l+tw
b11nur9wD+2+pe+9Wn8dhK/R9QzZDxU+qSD6yx7CHd0PWrlPXSL7scL3FUR/
auU+1U/toQP7IVwe4p9bEH/EmVgQbX1v9xfa7z5u/13JK21H17dlP8Jxutm/
u673Z6J97KvPk5SHNrpeVRDtH3xiQfSf/dx+TpX9AOETCqIv7S+8k65v6O9K
4dd17Wn/Xu6P5IE+faTT4f8vcJwrC6LtH+h+RPz9nS79q6374FJ0shpF2TL2
py/Q51uXx3fAccZddL3Q904tiD50sPvmyY2iXx2kzze6vxzkZ3l4eTzbQXz/
Cg8uiD/sp/q5Y2+t67SCiMlzrmQvSnU8Y9JrXx7/Tx+lDfRznz3EbeCebODd
3V+aus3TZ452HxmZDDxa+EzqTvgsXY/iOfL9VBB9FTu/gdRJO5eR76p2/p4Z
qb+OwmcX+P7ysB1kTIwpSusY4Xvd349wfYy0fZT7L3EO8nddez8vviPIf0N/
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
w3mbIz1Xz7kF5qKZD4dPgTn5key3F95SFOsL2JnbH1cV9j71Yw8gPAusI4xy
HOqEee9JjjNK91xkf3gU4FO43PsH2aM/tizWHc53nN7V4f93UegsXZoJDaa7
5XeJcFFxnC3g3AJnDV5j3jITZwpeEJ4sfF1ZrKdMcJ2jE4Ud3ajd8lE/nOOY
6DicV7igKuKTVqd8pDtb9tsc/yrZ/8iH/tNsr61QdtZTJlWFnXbVJR9t7D7q
T/YraDOynyX77TwX5bM7Gr/CFcWhYXRVJjSJ3ikLzL0b86Ft9K7wFVXhT5w/
y8KO/8VVoc+ENtPXsl8t3FAxj8tHuuRzsnyuoc3AL8HcvjH+2J/X9cR82FO6
t6PwDMeZYb2ejXDiyT7T+UcD6tpM6EB9UxYYXak+8rnO915SFfi7+qEfNc1p
TauKONinVEVaxEGLCE0i1jVY+wBzZuTffOThj7LQdbrR9TDImPpZ7LJTD8Nk
nyX8VVno9YArmedHU8D5r2v9neLy0Oi5hbIXxBoBmjisfQzP214cGjnYWTvo
6zjUYS3r+xSWh6bP1ucLP6HtxGxVHmlhR8vpNpd9pPH37nf0F9aeRsl+Vya0
dw4pD97p3XVvu/LQ1mmOvoC1cnZDu0H+97h+ZlqfiPKiwYM/Giyl5q/Ol4dG
z12OU+Q4OdkhIL/P96LFc4/jo1s0x2VB94j49eV/QT78KTv96AL3xxbl4V9s
zkU0aFjr4bzI1nMp5YHhGWGNgHMn8I+wpsC6Cfbx5TH/j511gUuV1lzn/xLH
4d7psj+SifMpaDI8Zsz5G87hTPc6CDwmrIlgB7MOMi8T/pxzma0yLhTeW79B
95h/fmlhrC/Msw/89fDYf+h1ivnO82t8T2di7uga21l3uKI88rbJ+hHEYZ0C
XnviLxPevTrSral77zZP/nWK+Z3+nnB+vmcOnXIxN5gN+141Yw3lYZflG/vg
/2cj/a4Inyq8p+I/7Xt31Djq+Uz8zq6Gu1B4CGcKlO4Lwjc5rWd8b9ds2IcK
P1AVcfC/UDGfFd5XuEs2fruxP1gV9qGOT1o3wn0n/Jx9fjTG5/hs1Ntbti92
3uazFmD7T7K/6Ly9pOsS/a0pjCufmSfsr3e2jSrzK3x32P9m2XtkIw54jeMT
5/CKuJ978X/ZuHs2YuLDfO4rzsNx2ahP6vZ3+2NnLMKYpHbdKAftgP+H5/vz
THB9/6HPb7htnKA4rwu/XTP0rea6fz1ZFfZ/a8a88JvG+1RFTO7d7DjY39X1
Hf21rhVXPvP/m1QHb9OWmE9znBqcX8iGH/cuYk6e9iP7S2oPHwkPEh5tPND3
vu/4S+X/oX3+5kyX70VXiX4Nr2qdovDH3rwk8kC6/bKRFvikbMQh5l/K5zLh
wcyDFUXMvYVfVVof0/aEh1ZEufDvnw1/4j8tn7dcxt1KAr+rcu1bHfcS51Nd
P8kE3/vfSmsl7VD4lGxg4v8Lv6tifZWJPc9fZoKDvVtp2Hh2X2TCzp5t4hGX
PfPYvrD/ANYUaNvkR//3mfDHtWIf+KfOA23hM8fkyud/OQ+ie7/PBD/e8UWB
Z7HvV9dvMrHv+r1GMe92YO2w8X/ww1Nvy12HDY0pF/uHv8sErzvXb43Z8/yN
7/1B19WZ2DM8NBvxmZfDxv/BW8h93M8+6npFUUbiX5CNsTnjcvYer7Z/TfXB
H4VfFz5B/j8Lv8FcovAa4+Wq71+F/3Z519j/Hz3rX4S3CLfTc/zJ9dDfcd6E
wyQTPsQbmY042NlXvC4T3PJc1xpz5TP7jYnzm+P/qev/qFv2omTjM/k5mbke
Y/Ynb8gErzvXP4z/1ri9UPfcqP4+1P7/yP/MbOSPMg5xWsQhHeLvAed8Ij6D
iUdc9j+P0b0bHecM3btJeE/5rKwKO/gO9jHL77W6UQfrXZZhzH3bp47q/2/6
b53YU70lE5zznVSfNXXvIN27ORN29lr/UhX26+uGbbP9z8lGHGIuRQglG7zu
F+taS38zhc/T9d9McMt/pt/ff4R/FV7YIDD224rCn/i/w/fi/B+tMU49vvfJ
j/xrM7YUnkw69r9d99YRvgE+w6qo89eFb7b9etf/Jtfnr1URB3/SJf4rcLln
I13sv1VFfNK9Tz4Fzs+4bNRh6zqRboF95rjOSbexrjtkt/Nqg+HNHqmylHC/
Y4I3kX9ddyOOfC7VtdhpXaZrqWNuqAo79/5ZFfbNwlfoWmbcTc+uXHiLcGnj
sLesF3lr4Hu3VIUP3BFXwdtv/Kd80sKn8P4snDL+VnlOZGPMfiIc+/jXD77z
ZDb41ekLZ6FbUzt8sb/HPkn9NXR+sCXsf3024p+sOIjqkO4A4b+rIj7pZnTN
ZmNPF3EqXBZs/B8854+4XJT9fqcFZq9X1j51lOdq2qHTqhK+lnGu8XX1Q/+0
KWvttoOXCtfTvTvSNoRn6drE/ofmI+ZA4brVYefe/sJ5l4Vn3tjPvaZiNvK9
hcbk58Js9BfmJ5vrums2xk23GZMuY9edjLm3mdMqM8Zepmedc7luzAamDtlX
tks2eNe57mw8Tv4VjSMu+qrNne5N2SgveSN97KTDfdzP/rTaLiNleSoX/Zr5
3YLqaMObZC/XPbs7ZkvaSzb2knHlM5zt6ELuJdxCeLzyktBfC5657YxfGOu2
cEz2pLXyvXfr2pr2LHtOPns7zh667kn7KI7rHo5zlzFxquyPrij4gGzoQt6r
6/62J5WXfch3QehG7mef2bru67SWF8f7Lu+l+9mOT1F15A0ftEr3ccyG1RH/
ZOFGThfMfdxPfTTWXxueHTwAuh7omNW244+u0J4uV2Xj8JkunBJuKzxDeJDS
auc4s9RWD8sGv3pT9vDRTuCch8c+G7zojW3n3ptlPyIbvOhpx8F/rq4H8dwL
Yv9Th2xws+9QHHZ8btS9h2aDmz2r/BxMP5L9/mxgfBgfUG+8p98i/yOzwbV+
XnWMVRinsH+oYzb40hnrdMrGeOcu+R+TDV50xhCMJRgHsMfo6GxwkjPWIQ6c
freitZsN/vnPsxFnlcc9vKPzfn63fI7NBqf6c47JuGNONuqTOn/K/ox1+J7j
fYJ3CcYH3bIxBuEdEM0e3tm+z8ZY4maPQRgnMG7IuF/QDl+0nbFDTu92Pcm/
cLOSiMn4g7EIcRhb1MrFeICxwF/szRJuVCvGEYyLGDfsXR1xnq4Z4wP8N9i3
N3moGe/UvFtvewcH887MWKFPNsYOvI/zLs57OGMCxgOMBeaWRvkp+0658N/s
cQ95YIxzWEmkRR7fc5xt4wDey/fyGISYjBvGyv9k4QNkP7wk8ko+l9mf91bG
T72yMeaqzAVm3HRQVdzL3gbOag7KBg8b7+wDs/EOv38uMDzhXYSH8R1RO95h
eZfdV/YDq8POvadmw8777d5FEfPfWjFGG2J/3m0HOGbX0rgHf3wHOw68cGBi
tKkOH3SjeGcfkY13+B+Nebdlbff0bKwX83cafb92XLFPrx3pMibhvXqlMXng
HOBw4V4eEzBO6Mz+8FzgG/0+zHsn77anl0ZcYv5s+xvOz3D7c76aMjJOYa8N
+5nYV8N7NO2f3/y3eSbZ0G7jvZX3423vuWDeaYvgAxG+Xr/dB6sezs7Gu2ht
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
tl0c4zMu6D/t84Ye/N94Jseaf1aFZPa1LfRv7+u0o5d1j/Z44m/2ott2dqb3
mncZHS9ZD35ZL7kuvlLgBR9WK58raPymsDsp6M1K5JM23jKXhs7XEmH5gs8B
H1+13uQwTZSH9JoKyeBLdlkmPdhdK5ffJFjE5C1FHv/JSzLxofHnmuw24OeC
vws+MPfVisbv5b74/noivy/yQr7BOwU+Q/CnBL17ifAdwYVsE2vEyzPJn2e/
OHzm8InLbQs/smsy6SG/JDgVbyXCsrgqk058vdbuEH1OhAdL+Y7pmzPJ/2V/
OvTjU0c+R+T+cg5H5OG9FnreDfpy4sJiHD4IemIr/eaCD4g/APin8ME1vSWT
fDPe6YxEOKj42kz9m87pluG8mLPhSabRye84Z8Xvm+aDPOfUlO+5LmepnN9w
dgNOK7bAd+UsFbxOzsPJo/dhotx5+ALgEzC9g/LofZTorJ/zH8Z/NSZnJj5Y
rHcFPSvR+fJtmfTQF87W0c+5PHikyID/eUcm/fgbcEbMuTL4oPi30Hf8WDhf
hs95Web5B///acMcPwNjQs/3ifYnyaf2WaJcaT1NTyzV8/+yn3OwSz91XXAd
wHq4x7ih8MEO3atOfPAfONP7ItEZ4r7B/5Jx42wzE59zQM4A5yU6B9zHMuUh
PzDo+YnOVp5k3zvR2QRnB2AUcjbC/jf7+8iu3v9OhJHJZ2GiMwveU9qP32m3
KvHZJ+dc8XO3ATvoecFnDejnrIr8XNg9qLme65Kfa3EiHEvwP+e77n8y8cG6
HJapX4zP3nWyxTnmU8FfkgijEsxFsBdHx/VrQ883vheU35p+JuRXJNpTYs8M
mn2z0+P7D9xrcNvqtF/GXtnqPfZE+97smy13XWygl7OMp0PnskSYlostz5nA
gCrx2cOnPTwbPYOeyN57ojU161ow11jbNsV791MifLxJce3HoK8JekImmvU7
mJz0FyxQ9sk522AfHlw7dN5TrrUzOHqsW1/JpJM9B3DvfrHd8Zn6u4PXa7Rh
k3qtzanLvgJnJks9nvwv5386/2Np8y+Wf4M91tAxJcp9QufviXL3UJIvZ3Wu
nAZ9X+6Yuz8TrTVYR4DXxlqWvDrIg1G3KpEMcXlgKqwy3Snm0k3gJbXVegXc
OtYarE2gd6pXvVWmWWMRNNS8zmJdx3oKrDjw6XrWa03Huquj13rI9KjXGgHs
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
OpkrLvI7u8B6aBu6P7Et3uuv/S7/H2gMmdI=
           "]]}]}, {}, {}, {}, {}}}, 
     VertexColors -> CompressedData["
1:eJzsvXlQzf/7/0+yhiIqIS2WCkmFJN0TQrJX9j3ZEiGU7BV6KYnsSSQVIUQI
aU/7ck6n03a29s2SnXyf71/X6/OZMfP4fMfMb34zv5nP+5/3zJnXpM55nutx
Xffrdr8/tNZtX7hBrkOHDtVDOnToxP3/P841PyLfJ2KId8OCOA0eZoo9+t2b
Icb/vv6/r//v6//7+v/fXz+ZuyNizcwkOAXaXMsZz8Pzkx7rfywXY+iqZRM2
PUlCtOz2u1X2POjf8x/1yk2MRZ835D+ZlYxrE3cOtDnIwxZ3B4tJF8U4XvrA
4tkn7vWcfbI+93h4VTJYdjhBjEOGj0f7RqbAtfV4vryIh35vN7lerheDZxO2
ovPCVBir1TzK781H7OjG4J59JUi+maIzuywV8vsmbDUbx0f3m4PHOhtJsGLK
9hd2pmmoqZ80N3MuHxWdHlz8OkMCu8/DC42Xp+Fj7ye99i/ho7/jzjva8yUw
XvZo/E3LNAStf9g2YAEf68YH7KmfJcH6uRUPIxpScWPcl76HJvLx1L1maOfx
EgxdqZE/2ikVLyZe0Nvajw9JfWB+sooEY0ZqdQx5nYLSO1Y9R1TzEOzRqzGl
RQydAdXG6T1S8GK1+9qGRzx0qZyjuD1FDGnikp7TlicjsoOCmf4xHqr8K8wW
XxXj0fUVfpLEJPBCt0/hL+Heh7PVvaL2ibGhaEv/rfOS0L8u3SbJlIfPAefW
ha4UQ2NQWsee3ZNw53ak+oRhPLyPfntmxBwxiicMK7nDfY6r73vy//M5litO
8PrP5yi2b2rR65yEwoNW37SH8rBxwrMiC1sxcs6MLnAzS4Jlx9/v3hnxsFXe
fdKzJWK8Mke3ad5J6NMl0zVuBg/Rk6zyzLeI8ZLnvb6PIAmLb6y6FLeKh/3X
Mu6HHBDD6dqCgvwdyXgt3/398JM8vBvZorI+VIw1W1e/7uCSgmWbdqjsz+VB
I8KqU1SZGKGFGrdDdqVCde8qsxFqfEScML5VP0CCh0rPfn5fnYb3CcMKcpby
oed4XGHKAgn057TaKaimY4xLckzEKT6WPo6xHOwpQfaI3nbPvNORs/4lNt7h
w01yqGPX8xLkZXq0Bd1Mh+XbzckPH/FxcGyfIvlgCQys3l6X7kzHsm/W0pHh
fLS8CBl87YwE2vvmnFb+nYbFJ4zmd/DhwxnvHx3eI8Hzemtd9WVpeK7QJW8U
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
H8cPdjoiQ4R+V92sRhFyVELXieeV4Z9pg2wL2xoxdt7T/ep2MixX9HT1SimE
x3L3o8F7mnG82/VO537XYMmWd7pbKrk50jTWbPqdFsQ9GDd/AjeHPTC4mHty
1H/XpflneTuu2zRh/O6AwsaGqv96/aNwcYcZo5px4nmYZuezNf/1+rqgeSkS
xyaomX4aqze4GrYSYecFGS04V6KcZTe3ARqLP666d5KbW520LJUTmlEwNHml
2dNa1KrkJpSHV+Cn/tzMScebMFfx8bMhkVWYV6zqA+ViWPaym27P1dPy4Jfd
O3P91YDOM20ctvDRo6OiQdYSCf6pd/a6oC/C1y3jhp4vqYBBYPTtidUC3K48
Z6JkWIahO15fspZJoP/p9tHpx/PwUVSuZ9ujBO9mK233C5JBkNQQs2FpOvKf
NWqqhvCxt+rHhPB/JPjSZHZkpmIyPq8d3VnRhYdm+5kD/HzZ3+tjVMfSqI4l
UB1zon5sH/VjS6kfS6S5UpPmSgWaK3mkj6mSPqZJ+pg36fyKpPOnks6/jPaV
8X/sK+cyuIu/rVeriV+qJX6pkvglBeIEfP7gBEbRPq6N9nHLaB+3g3TvN6R7
7yPdewLpS7GkLz0lfYk1xylQv7ST+qUI6pdYdYn1d31Ifv/+S2wzTJTmqH8O
rkXvlNtuJpsqkJ7y85zq6WbYBNaOTTGvhcuvhpyRe8txKuNjwFcFbi4YWHD7
S2s10vodmWdqI8QWj/OiXRZNEPFqm0d+lOHz57CbHefzUOJcunvl5jrsfWKU
axgugfGALqam//Dx7uPtfp3rJSjuHC++vlIE5/pWf4FBBSTgPTTKL0HatHuW
YUfLoLxkJ29ciARHR/fLbd6Th4ao5B2mHUuQJd+lotpPBiU7p4Tp1an459Th
bh1M+fj99PrsRBMJ+mdrWH/ukISnZ26N/qrNw44rpr+suL46TeFQ7+Pfk5E1
J+HIxvs8iIXxBdffiLl+5u4lpaeZ+K5ROs3VvxinPdMD1ttLkVT/alyPHoVw
qdq8u1hTCGt3S/+JwTJs0JhV/Ph1CQSdTgcc9CxDwMylcsvCJBA8ct9gyPXL
jTpKsqc3KzD294rWRcUinNgXc2x9fhVkowvsROvEyFmwxkmYLMRu9zdOamjC
vkV2FmmtMpgMnfXg1yIexmxpnTsqrhm20YVy7jdrYReocazSrQIrETtEImkB
EmNPwb8BztPUxrwT/He9Sut8f2pGXBP4+rWr3J9X/9frya7e40ZObMaCccvk
x97573o1z0Z35pTfjbD7Z/bGy6uqMMtk3Inl3i3wD//UZ3tYPTxPWAyXeypG
jwLbPZkrmtHywLCqy+sadJO6lS9CGQ70SB01qncTlF6tjt7nIUNRr9/77wwt
wqew4y+aHKpxaMnkiJwzYvQLKJIvGSFEmLPng8YzFegcuyzZgvu8hW2Bnc9N
FEND1XH4i7BCVNvkPjVZLMThI1GRb7bL0Od9Q2WvpLdQcL3gFGlTjBP+67da
DeLmjJafMVY3k1Hfk1eid4GHVZIDi42i2d/frs3tdew71bEPVMfGUT+WQP1Y
NfVjSirtc+UAmisTaK58SvpYh/B2fWw36WMfSOdvJZ0/jHT+Y7Sv7E37yp+0
r+zD4C7uED92gPixscSP/W29Wkpc5SfiKlWIq/QifukI8UtniV/aQpzAPeIE
iogTeEv7OGPaxznSPs6IdG870r3zSPdm6UvjaI5bQXOchOY4IfVL36hfuk/9
Eqsusf7ezR3DpDsHcj//tu+eyIE10Noe+MQgSog7YSpaQ7n6eQx6AbLKKixd
f8pYmaufFmr9320sbsSuNbf6+7+XIvZnbCeN/AI4rbBYKNGtgeSo/LsLpWK4
TjV7+9uwBA5z/X4ckRNDv3R3/EXHSvQzqG2VGy/CE5U3iV9L+Jj6uFGnYG8p
XM4pBq06KMUpxf2jC2OyMTpsue+4gdxcNjmgrVuWFDPyr8ZazE7BovuKmwtT
eJC4N730KRJj56IJcnd/JGJ1z8Vth7R40PG1aehswz230g8FY5ekwsNqYdwJ
JT4W58+5dVBZgn38U352g3MwPrt5Zd+JAvgLHhwwqZJi3Y9eoyZVFkGmfSL6
RYoQ25tOZMxXliFnnPaQM2dLYTHGTLFBsxyzgv3W8NQlKBiYu3fEXW7ei157
tXpEJdSjMzxSN4lwqttgm0FLq1Hm7t0aGMjVq4ED588cJsT7Q/2npc5sQsz6
8JpvPatQ9LBhZ4cAHkILoitT7jRjs9HNxn1etYip3iTfpluBBK8a1dNPuf5q
u/G3Fq0GaMbO+RW68L/rlcrF7asuP22E/uQ+rlME/z337bim0Pj8eSP6ZgR5
aFTIkPvPnEd3Elqw4sjDA09NG7Bx7OS+YhcJHuKzDy+rGf2mCnprFtdi7nu9
O18/VaD6/KDPb842of/guKHb06ugOyUmsWpNMTx0f635Z2cdnBO1I7dEcvPz
4sZV2w7zoRQ921/jtRglv5an6tdVItHkYtE0/0rcOrVhTDI3t29YUim86cZ9
vtrdjo09LIVyv9h1T8yyEWHcbeGQ78UwfaKSO+yBFOa5ui3HpqcgvEbh26Rk
HhaZ/GM3ppD9PVWlOvae6th6qmM/qR8rpX7sMPVj72iuVKK5soXmSk/Sx66Q
PuZF+lgj6fwfSedfRjp/I+0rB9O+8gjtK8OJu/Ak7sKduAsWP/aAONj3xMGq
EAf7t/XKkHjvc3/w3v8QV1lJXKUPcZX1xC/1IX6plvglJ+IEHhIncII4AdY+
jqV7s/Ql1hzH6pf+rUurqC4NpbrEeh+GT4nsbVvfiKepquvSNWXQTDvUOtm6
EI/uvrx3VbsOV/tMsl3kJ0HanZDXGyv46Hujm4lJoRS/EgJ/n70vQlxFhOj+
oHJoWm1VQHwZzH6nPTM4WY5x1/V2hCaJMaH18WG+Evd3P9BXnKQjxKly/W5m
V2QYcfG417XOb+E2pHJvD5VivOvaY2ltC3eunYxfG1iRhGNXKtWOr+Ge54e3
jww7xPWtm5Z/MtmVhPF9xVMeW/GwRGvFNjknMSL7CB2yx6Rj/BQvy5Nn+fiU
/mx43REJZmrkLDq6NA+ac448r3wnwNCrrxKGHJZBksi/l3mUD8W0JuUxS0vR
o2sP87YLUmz3jbpmzyvDFv9lZb/PlGOSZ9fbU+LFSPgk636rWYTEIW63bzhU
ImvBCsMHU0RwOtyqxlOphsG2hQoz94tho1/O/X5CCB8qTSoZ3IQv69QXRIbK
UGFn4lLmXYQbd7Ynihya0Zh3XMf8QQ00dI/EhqmXwXC15oSpxi3IOTNlhlFx
HaITbM4cixNh9481BWMDW7BPbX2mT3I9Hlqk3squEGPGpYNfcza1oLtOdJTi
ynrufGi+cmSVGGoy5bTHic3ou0p7TM7LWgQ29gsZ/bQCjvKTpx5/1YQCg5Mb
VhhX4/qR6G3KW7g5bVnICGP1BvgvaRo410KKpUJZxSL/IjjbxuwId5Kiq2bC
9W0nRRB4bS6cf7Uc8TvWuibNKcFa/0iHXXZliJQoJhWnSDBkjI13wcpcOM4q
q1MLFGDmHc+oyYYylI27N7m2IgVr+n7lFTfzkBURN2DAl/+hf6A6do/q2DKq
Y9OoH1Onfuwc9WM2NFd2FrfPlW00V44kfew96WP7SR+zIp1/K+n8qaTzn6d9
pRHtK/fRvnIacRcC4i6WEHdxn/gxO+LHphA/9ovBwRYSz/+deP4a4vn/tl6x
fCgs3pvFVbL4JRYnwNrHsXRvlr7EmuPuUr/kRf3SCuqXWHWJ9f70mvl0psEG
GU551lmKJSJ8Es4dqehahqMTd+nr8SrhWXD0UXFIBVpnGGacEYqQqnNXVpTD
x1Gvz5KaXaXQvvCoKOyIFOdkMebvdXKxN3xFh85HBfgUaun7QFsGa88Fw5cF
p0LX5ML5Vzp86LomPr6vIwF2jy4x6Z6E4QnvdloN46G86J7W2DlieIzi//M+
IBkpiubzlAN5mN/P2rM2Qoz7Y7VeTNr/FhPO7Nd5Mp6bL3g6z10VpDhx4ueZ
Ho/yMfaOka9tRAkGfdtb1EOuCgdsxR/eCLn6aB4cpVRQihq3sftkRlL0e/Ix
uusubs5X+Lh1K9dHP9ayiqnxE2NAr07rDbj6EZXKTTyGlbAaO/Do47UiHOWd
7Vc2sArTru716qcjRtjkOy9nXC7FpylLJy8MaYSp17fLvdOkGF8edrIouQA5
W1Yt2J7aBOG9shOaM6qRPkYlUO2KAK0PLwx33dwMU2nD4FsVNah5UXnipV8Z
Zp7V13p5rhk9+y1XktrU4tSXriYGl8thtdLBt9u0Zvw6NfPCkCM1MLGSncq5
VYp9mm97O5xogtynzevEd7jzc0yVf3/1YsxYdnLYFPkG3M679/zCeCmiNS73
0Yoogt3EqV0/fZRi+oUPL1VeiLBwhcW90Z/LcD66VnDzBvd8KSkuRlYZRq/X
0gtfK8Emd529ozfmISzuQczerwLolX819/GRwbGwKdTIIRXLbZvivivy4ec9
/XMXrr9lPVdtVMe2UB0rojpmS/1YHPVj06kfs6G58jPNlbtorlxK+tgT0sdU
SR8rIp3fhnT+VNL5XWhfaUH7ylDaV34i7uIecRdjibv4TPxYJvFj0cSPSYmD
fUMcrDJxsB+I548mnv878fxO5EuqJ1/SRfIl/W29Gk7+uPg//HEsHwqL92Zx
ldXEL7kSvxRF/BKLE6infZwW7eMqaR/H0r1Z+hJojnOjOe4FzXGsfolVl1jv
W6rhuP3PvhTj6/OQJIuyUvQb/bNgjb4UISHbBica5iOxS+j73ZtKoPHxw4J6
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
7bnWdpRrvYFyrf0pn7835fMPpnz+43TPiBLdMxJK94z8bb16SfehKP1xH0p3
xr0DXynfew/le/egfG8bytE99EeOrh3lVX6kvMqJlFfZQrlwvygX7iTlwjlQ
/tIeyl9aQ/lLiynnpAflnGRTzslayhMopjyBM5QnwPLtsvxxLB8Ki/dmcZUs
fonFCbD2cSzdm6UvseY4Vr/Eqkus5yRJ9UVLANc/T1ZTe+jD9c/J2pfmuXDn
7ab6uYpvpifBqMVIqd94Hh48Nxu+6n/ICRFRHTtFdWwA1TE5tfZ+rIz6MVPq
x7rTXJlHc2U/mit5pI81kj72gPSxYNL5v5DOr0E6/zTaV3rRvvIY7SttiLvI
Iu7ClLgL4R/82FDixxz+4GA1iINVIJ7/B/H8CcTzV5MvyZh8SbPIl1RM/sp3
5K/MJn9lE/nEI8gn/pJ84q6Ud+FKeRdalHfhTbk9Qym3x5Rye967tueP7aH8
sauUP9abchR3UY7iYcpRjKE82GTKg31CebDhlGvdjXKtzSjXuhfl81+lfH4D
yuc3p3tGhtE9I2V0z4gt3ZdkT/clqdN9SX9drxj3NLHuQ2HdO8DK92bl6LLy
Klm5cKz8JVbOCStPgOXbZfnjWD4UFu/N4ipZ/BKLE2Dt41i6t5D0pSTSl66Q
vsSa41j9Eqsu/e1ztYVRx8TUj+lRP/aU+jEBzZVqNFc+orlyD+ljBaSPSUgf
6006/+0/dH5v2ldOoH2lOe0rWdxFDvFjWn/wY52Igw0hDtaQONgLxPNfI57f
l3j+oeRLWk++pA/kS9pB/koL8lc+J3+lPfnEdcknvpp84m6Ud1FEeRf1lHfh
Qrk9pZTb00S5PV0of+wa5Y+1Uv5YN8pR1KMcxVGUo/jJvz0PVpXyYKdRHuxc
yrVeSLnWGynXOpfy+cWUz9+P8vmj6Z6RJ3TPSB+6ZySA7kuaTPclydF9SUvp
3rd4uvetie59+9vninV/HOueJtZ9KKx7Bzz/yPdeSu/DcMrR1aX3bTy9byPo
fTam97kbvc+sXDhW/hIr54SVJ8Dy7bL8cdfoub1Jz+1Rem5ZvDeLq2R9j1ic
AGsft4O+13l/6N4sfYk1x/1tv8R6PYvqHqjupVLdW0x1sprqZCbVyY1UV2Oo
rm6nuvqB6vBbqsOhVIcTqG7rU92up7o9jur8PqrzJ6jOe9C5oEfnwhs6F8Lo
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
xKpLrPftW2C7r/w++cpTyFeuTz70peRD70A+9Hcd233ro8m3fox867fJ576G
fO6F5HM/Rb74ePLF+5Ivfjr56HXJR19BPnp533bf/Qny3S8m3/1a8ukvI59+
Lfn0R5Gv/yz5+jvHtfv6V1AOwD3KAThDOQDjKTfAiHIDAik34AnlDPApZ+Ad
5QysoVyCs5RL4Ey5BE8px2Aw5Rh0oxyDfZR7MJ5yD+op94CVk+DIyFX423pl
QDkPyyjnoYVyHvQpF8KaciHOUC6EBuVItFCOhAvlSJRS7sRVyp0IodwJ1j3g
rPt2Wfdasu6PY93T9O99KP0pl2M+5XKw7h2YRbkfEZT7cYdyP1g5uqy8SlYu
3N/mL7HyBIIZvl2WP47lQ3H7g/feTTo/i6tkcRcsToC1j2Pp3ix9afAfc9xP
muNY/RKrLrHeZ2fK+ZlHOT+9KecnhHKBhlEukDzlAm2iHCF3yhE6SDlChyl3
yJ5yh4ZR7tB6yikypJwiA8opmk+5Rocp1+gb5RrFUQ6SGeUg2VEO0kXKTfpK
uUl8yk3qc7o9Z2kQ5Sx5Us7SbMpl6lTQnst0hnKZxlKOUz/KcbpLOU4PKfdJ
m3KfPlPukyojJyqHcqXKKFeqG+VKxVEOlQPlUHlQDtV9yq0qotwqZcqt+ut8
UcrRWkw5Ws6Uo7WEcrciKXdrAOVuXaecLmXK6QqknK4MyvWqp1wvX8r1UqMc
sL6UA/aVcsBY94Cz7ttl3WvJuj+OdU8T6z4U1r0DrHxvVo7u3+ZVvmPkL7Fy
Tv4Pe28ejWX3vo03UEohKqIiVFSEMkZn0WSqiIhUKJQhpFCSp5KiREk0KhWa
UISS4jaHkPu+zdyDeaoolaHf9Szn833Waq39+fy8a71rvX98/Xmte2372tfe
5z6H4zwOEp8AqW+X1B9H6kPZ8gfeWxNxFyRcJQm/RMIJkOpxpLw3Kb9EiuNI
/hLJLpG+izHyLhYg72IK8i5uRp7GjcjT2I88jUvWj/E6OiCvowjyOpYjD+R5
5IGcfH+MB9IBeSPtkDfyFPJGcpFn0gx5Jm2RZ3LyujFeyk/ISzkNeSk3II9l
OfJYzkMeSxbyXl5D3ktf5L3k+z3GkzmIPJl6yJOpgLyaUcirmY+8mneRhzMP
eTj3Iw/nc+Tt/Iy8nUuRt3Md8nwGI8/nd+T5rENe0DjkBeUgL+h47dVr5Cl9
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
mTXAxaMs1s+8XkjRl/36K68dhvkTnhz50AjpJ98W7Zr5t45YceqhH61Q56Gk
n29aC0F7X7xKONwL8VcUz6n0toHe9nSXbSn1MHxIIONbbg8YJ86+6K7XCuL7
d53oD68GZn8T60p9N3gESnn6jnJAbavmRrkvlbDdtty/5Hwp7LTolyoXrAaF
gGN8bjkceHzm3vqQg3kwEvdm4toyKk5v18u5U8eCmFSTTX/154BLdPeaNZJ0
2O/523n+Fmqdz/YExj/LgwniS5LlWXSY+UXWMLyLWmejdfMHD5eA2vDRrNJs
JvgF8dY+C+CAbojLvfuUX9i5MS3Y1Kge5h4IEXpQwqbidZlUiyeNMF92XoSC
eiO4HfA4JEGdJ2t7Sz/ppj7QumXs1Xy2Cyas3rjVpPTfc9FxmGvYfq4bqkyM
Qvv9/sVjBFpUXgtM6oZ5+zt9fhX/+/zddV2tW8GU/avX7uHa/4sPjIkSO3zt
Sw+sWLhV6Yfsv3n43FVSsbMGu2GWbf2s9dv+1RkJe7imLWeoB9wYlz1marRB
4+3bLw6+7oMzz3+dEJbvguu32uuPW/87zy0KMg+Hd3RD28C9VN8FXODwK15e
oNIHodn2MmZVHbAupG7Nt5RmGLx88qX/cA9khywb3VTWCsWJOu82dNaAXDbf
9y6JbhD7cLO6OYoDEVqyL0z2fgLTwuum9afKoL9f44e7WTUsEbQR2DTMAdW6
9zGP9ArgwbXKTZ9NGHCD7i5814AN8paOgV8/0kDnS4G09246WJmmD6afIMfd
zyQrXFyUaXBYnGnmpkSHNrXoGzd3skAVx1mH4+zGcYbwPHrjeUzE8+iF5zcO
z68Wnt89f+T3lmJ+Twjze/Mwv/cd83ueeG9+w3tzz3+5N0n3IBzOd9pf2gsD
Gfv0AqvbYb7YzQtuPxvhRfOgke0jahzz+pMjx9ph64PSY6FTG2Gbrx3tJXXe
539qffghpB22ywybLV3TCAf21kfUyPeC2ZXryo+hDR6dvrDaZ3IdNJl/2xwc
0ANnf5l/sY9qgajNslnvOhgg26g9t1WhBCYdD39+JJEJVT5eAmoeHLh5vsNA
824uyEi4fJgeSa3Dmq/71z2lzpGsaqjqAhqEXFrQWE7FI+6Vw1OaqXiky2TW
LpmpBfCVP0l20XoG+HurLfai7qPnrq89Hk74CKPtooLqPtVwVtKOx1WcC9n7
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
/x7bX4vpx8X1veH65HD9Mbh+Glw9Ple/Hw4cHgMcXpMgw+EaqNNPBh7IBx5o
qI66HPn9ccjvmyC/z+n9OH1LuZy+pSX0LbHQVV6ArjIbukour83lB7n8dUPj
WQ6XcjiW86ec/+XuNWcHRqJvjxf69ixB3x5u/TT6gLW8IusDloU+YIPQF2g6
+gKtQF+g5XJ9hHqgj1A2+g4NQN+h6eg7pIY+RW3Qp+gW+hQ5o6+RP/oarUVf
o4bOJazF3KtK9Fl6/5e5V9w8IG5eyRf01y2R66/L9dHl+u5yfTjl+3aORX88
ri8f18eP65fF9dcazPTV4frwdIqS4X9t4P+ajjL8z/XbiZerY9r0lzomrv7i
AvRF/aEv8oG+iNMJc/q309BvX4B+ezn025wu7n4D+WqO1+LiUC5u5fAzh7fV
4Me7yPnxV3J+3wt+n7vvJugf2Bn9A7+myvoHcutn0Xe0AH1HQ9F3NAP9CTej
P+FE9CdMQT/DNehnaIR+hlz/wxj0S6xFv8TGD2X9Ei+jv2Ir9FfsgP6KCujH
2AP9GL+hH2ND55Y2dH4iN0ePmy/GzT9qaP98ri8318f7O9PXl+sDzPX55PqC
qjL997h+fQrqsjjIDHHQM8RBXF++htYR19dFzoXuZRp0LwnQay2AXmst9Fpc
/QtXz1Vf/6IN/VgZ9GMtA0M7LF6fJ7xnWxOrPznkOmbWj6devP6N09k2NP/F
8eQcr87xXRw/xsXpXFzP2Yc89Df2RH/jc+hv/Bv9kKeiH3J39EP2Rv/z++h/
fhT9z/ejj7oh+qiXoI/6fcw76Ih5B/sw7yATfZv10bd5Nvo2b8Q8hW2Yp5Ba
P08B/Z8D0P85FP2ffdEvuhr9ouegX/Qy9Jf2+/85R5Wbs7kD/a5noN91Bvpd
d2fm1KzEnBo7uTk13ByNPGbuBte3v77Pv5Vcn3+u7zfXJ5zrA8z1DQ5D/HUe
8ZcZ4i+ub/Df+gb8gk4mEjoZrj5aF/3eQ9DvXQ393jk9Xn0/eSX0k/dGP3mu
rpOrV9rE6PAvW26foyHNo6wVG2ySJuWSy/y169tOzGuwXoXLj3P5Mi6/xvHh
HF+3DHNDbDA35A7mhnhizsh1zBmxxJwRP8z3scB8n1jM95Gfj/AV8xG8MCfo
NuYElWNOUHfMX+iJ+QvVJ2TzF9pi3tBWzBvqgXlDOZhbpIC5RT+WyOYWbcZ8
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
pZF7y4I/KUdRyNX97mljUmjzgI0jXoyUkmRj9zZzpkVR6/lbJ7yYmUIhlYOa
JU+S0vQ2vX74zYyiG5/UF5QI9jbt1eY3iYK9Vb+9vbRGI4oe2WXNHTA+hRYc
eTHhyCgpBY3bVNntViTp2llNWSb4w6Ftav8E6kkpasyQuuIOkVRsVqjXrU5M
nW8nR/9sIqVmVrERL5dG0KvL63oaxYupUUXJ5KcZEgp48LKxY6NwWuF/pXOZ
cJ5HXhu8qt0+CY3bfjU+vzySJAmWSUuGppC21vXYyMFSqmn3OC9AFEVWr3SH
b92YQi+qr/f3c5SSVC3//hCbaFo77dMI0ZkUGr72jMcCbymd27lKKfNMNE0V
HV666F4KLTpYOvXjKSl98bNI3ecXTbEGk/vsvp1CEQYnNu3wl9KJ8LZB882i
6eP66i46J4X3c+3qp5g9UjpV2d1i/d0oKmmTW7VmbQqVTt0rnrFE8Gt2n0eK
fkXSkOhc0x8jUmhM1a/ZsaZSumNm1+29cSSdujCDHiimUImyocvgf6Rk+Lyw
t9vaCFLd2TzEIEFM9zueC6Vs/vxYpp9T87rzloJ/xBytFuz/ct2Dd68L9t9D
fX+bYXsSaNSzuOLeLdOpMG1X7Em/Avo96UbLugGJ5JguunlvubBupdy9urCA
PYd+/qG7rFLTafVXD62Y3VmU+M/ZiBWnpRRqmWjvOzSZft+Orsz2zqDQ5nc2
PBxTQFcczhVuapVA64dn2FeHp9EP0wNFGnML2PPc4/Kl6+N/Cb/rmGG3JVpi
GmCxYFW5EOc+FOW0CrobTo2iVWfpnRKTvnXq5ENCXOxX+2Bb6YNiclI6mdR9
mZTqsn707W+XSukeBrl7FQrI2OuOz6CwPJqlVr26dWEWWYU3TTjQPZe8vkkz
7OxzqJEk98kVJcGeb97a8eSaVDI9G7hg2Y1M2lQXrLZkej69M3liOWxhInkq
Fpcv8kinot+S74G/Cth7t6Jxq5HFg8vI/sr+tMlC/NB7zUU3U+F3cPPiN2+d
VnZt+0cKeLr3nxk3BX/QwuGc7YYUclRd+FxpeQEdiu23ZGRBHvkXN9bduTKL
dvbZvCbGJ4fsPu7ev9Ygh056Gp7uOEx4b/pePSuF79VNaXWL78L3Coptrzha
+F5tj03sP0hV8EeaWVda9hJT9PUIX88pEgot+id18/0Iejyt+5IoqZgqwk7+
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
7ssx+LWP8Gvj4Ne4e1T7WOY3v8Nvzoff5O4X933Hw4+PhR//Cj/ujvv4B/dR
hPvInUPunBwGDnEEDvkKHMLda+48c+ctGTgqAThqCXAUZx+487kBuG4bcN1q
4DrOngwHbnwN3CgCbuTsTCnszAI5O7MPOHYXcOwG4FhunfP7nH/n/CznHzlc
xOEfDudweIbDJxwO4fDAf8uPc/eau7/cPeXuI3e/uHvBnWfufHLnMH7OCtfs
1RHUPGqCw6N3Yko+efpOdpaE5pRLFfY5RtDZsStCq+LFFDKqQ/LCTAlN3Tf/
9zyzCCqQrPGPfy0mt4un99UkSkg1r+W4Nr/CKcKzXazPbTE9EQ+jsFcS6mam
Sg/aRNIGHb+C1F9imrtxTt+2ClIStzhtMk8/kqaej14U3ySFGk3utkPUQkqu
yj/NROqRtOZiXdf+f8Q0zznzbl5TKbUKVTrSVxJBCf63p26uEJPfNVvjc98l
pOM3fO/P/RHUTXl4f7NUMd3bMMR7cL6EgmOWDEjqFkHhhwPDRY/FZOtZYjUv
VkLKX2bOjLsVTv7W0ybbBYipbNnInMLb/+f708Z9GRfyaWQmpR1tPLpPk2xK
2VXy7eFAKc1JS/uhnpFLAW+vDfQ7l0NPGh1tppmeR3H4Lopy30X3pvScxgYR
WVxSdLs5WkxHhs5+WruU/17u31+OPHhKRH2iy90+ThJTXdzTWOc1wr1znJtx
ap+IfJc9VFowQUzT7ZwoZoWEpuP7FuL77sL3vTN+dNqhFyI6cGlEyvnZYloR
8+jL5U0Syt1atlXnlogqVm6tUpkh+NONiifeCnagE85DJM7DU5wH7v30alQy
x0j5Dc15tsWzo30qhT4dHjDNMJ8sjohO90oR0bWCwclGdmI64Odq1ne7hEyN
LbQ6x4lo1LILd5cK5/xN2Ksd77fw+/8+3nL4gzZvaO7NsxoOC1LpfbtDH571
zafW2yvnjRPs1cnR6r/WCfbKtnLuA1XBXtXlfcuwzBIRnQifULhAsD/mbbqd
3iH4i4Fuuq/SY2lQ1bGL36emUo7qk7qjWvns/9s/8tKMNLGIPqU829tZeP7i
MwOcOwvPn58V7aEs7H9t85+4ZGH//a6Lhx4S9ldut+vHCa03VPFzn3HpklSa
4ugevWRAPu1yzGnd4qWAM7sbDQ0X3n+Hw04dRcL7L1I1GfBbuO/j7TSvzhfe
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
JHRGnKPwRUtENXGqi7SEdbdzy6/9Ev7fmQnWl47piejpnMvX7/UV04Ph4fmT
rIXviOckPOdAPOc97P8F+1di/2vY/zf298D+fgF7wvzv5ZFDeduDqw1y6UCE
iU3tEuE8PBx322RCNjUu8mpq/ySb+jpkZG8LkJBRcHCVpZNwj7adWZxsl0V+
1XZuvZ9LyRX5mtXI1zxBvib3SlWptb6IHs67quhiKKb3aUXelcLzN+vce7xK
bxFlqyU5aAjrfoP2Nb4irE8/MvOPpoGIZh26bF4lrJ9K7fZm/kzBL+A9PMd7
CMV7+IT9H2N/MfZvi/3zsP9x7M89/zrz8hPml95TeDOdgat+p1PCjuwRaU8K
qN+W/idzM8U07Nmg5Xs0M+mIbatNbWPy2fWRD56Nte2ZQHVBm3o4J6fRzz49
NvdxLKCQ+09Lty2NI9Py0XcLXqRSYKChxHRHPrUxdDGRCL/3ioGqSZ9+wu86
bmjuLfze6de/Pz8nrGtuaX1cXVjvFOq2bJuw/qP59fHHhXUro+8OHYX1hLa7
Hm0W1ufjvc3BezuD96aG/YOx/2Psb4f9tbB/Z+yviLzhCeQNS5A35J5/cOKC
JTcvRFKHc6H2brop9OD2jgR9XR6f7Apsv2RcHxHNtNyr/lh4Tt2Z29v3Ef7f
UJ9tZW2E5+kjjt/7WVgvXKUYN0dYb276Zoui8B0TXMTd1IX1Nz/tR14UvmPj
FrL3MBnv4T3egzf2t8H+etg/DPsbYv8P2D8Qedsw5G1nI297/mHYqmpdEZVe
UZ9Jwnm7tKHzzVLhHnmXHe16XDiH7T63jv/POdTuXfLnP+fwXWO3wyO1RXRv
48/SwcL9Opl5K7GN8Pft8PxJeP54PP917F+B/a9gfz/sr4r9dbG/CvLanZHX
voW89rYfxZ4vX0fQkCfZK5p9EJOyR+s5uz7z60891p5srxVDG8yfvT+YkkLG
inaeDk+kpGYztcRb8Q11CfbMdJwvxNeTWt1UMsinuG7huf27i2he0tW+lwQ7
c6Sb78+jgt1Ix+99gN8bgN+bjL+3w9/74u+rHsry/m+Q9z+EvP8N4K7twF1j
gLs4f8f5F84fcb9LI1Llxexvwnm+8cLMtyiVUrtYqN04y6/bQxfhCF3ELOgi
vg+S4clzwJOOwJMcHuD8MufHE+E3R8FvKsNvPoXeYyL0HjWTZHoPd+DemcC9
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
/XREx5WhXBi5vTRz5tcqSFBdY2m9kML3oU8jnEo50B68ZJTNcDrxngLpfsFR
lP+5KP9JKP9GqEfnUY/eox6R+vwnaDlMSklhQeBR2aXuJgxgHWi1fLC1Bvwu
/LC1VE+H/eI9jmBcAnMvZX50MmBBt6GdSkNEKqw96GVqWEuH9XLT93c3MuEl
Pn8En1fF58et7n1+Az5vjs8f+M2dU/E2Ba7svaI/+z4dMsuZp3Upvblwo/DT
8WwajLw/NXWxBR0cmmIyn5xlwiq0P8PR/nSh/QlE+zka7edPtJ9ViB+q0R4W
oj0UFicI6/dj0V98QX+x9g/+/TA3ruZlSwvwbfRscxU4sLb4hcr8TUVC+2th
/XJlFOODuUoK+NtZiLmeooN25TYnN28m1Jw/LXJoUioMLxi78tcbOvy6Lr60
OoMJS8/PnPlhWiosjHilmhhHh7GBE+6aZzGF5sPA5wPweR18novPj8Tne/D5
5fi/6vi/E/B//yk+wuKTxULikD78dgDxWybit1VC4g1hcUV9wZyKafWpYM19
NKr8Mx1cyydEZXYx/8Ybk/9DvCEsrtiAen0J9ZqGen0I9XoY6vUp1Ot1iB/i
ED+EIn7Ym/jeM9iqFqamz9vkd6oGZq1S7NbsZsB7/ZbNthI0CEp6EK6gQIcq
/slTX9Yy4eZM5ac2M5gwvFQ6ze5cLfwYZDV5vDwVnxD4XMTnB+DzIoN7n3+3
a/Mg1gDq94HtG5dnNTC6efrRE58YMNA3OvAaNwOM4y08K9JKIKnyg8icKBbI
bKq/Nru2Fe6dVp7c5tIMWvYxKvs+UfLjyHSTbmuFoB3h141eNsP24sti08TY
ENS1o1JJPAf0lk42v/yAigu+GzeW2bAh+umQjhcKaXBXz9AkcxAlb6nfDLnU
Pm9GPPAF8UAt4oErizTkVmwpgPMn9wV2OJZD+oQ0X1YnBwx91syuT2gFD9+o
cMMFzRC1xrZ+gTUL2FBY+SujFa4v+81yofxbmXfZjadXWJB0SPzIhJlp0KBz
4qgZ9b9WSyTOXKb+V1L2+1xNVgpI/y5KfviIDroGN3w+xzNBdnrMRb3sehi6
f9rumHdMeDAsfte4oHLYndpkPlunDtR++t6WX/BXHi3lyNcjlVCx/1OVZQwf
TisdrWu/wYVxlmkzz6yogbmftrVpLG4Erbi9vJs+LLjwxnbuXGpfz/oP+OC7
vAFCTz1y2FjHhF/DIyYeHF0OA12j3Vyjm+DurWFOJ6UoufdON+JJ0EHGdXjq
usNcoGnvbH9szII12rBpWEwpbHSoTQvX44Hi5qD5Cj85YJ95zzbLmg6FdnJF
P1bzgL1w+drzknUwdti9108pOX353jjzmVQzTNGf+T1Vmw2uTv7Gk72K/5o3
LP7tGbXuJGtRsT0skNptKbpoTymsF985Z+zZJvgx9NqPoaJs+G5Kb/FdTfFp
vXrvvDgXVtQ1mzLnsKDt95ncD7PKwKyh8lJsMA2mMbLlzNfRwa2a3fHoMBPU
75hFikTSwLJMoZ23ng6K4xnBpUeZxP0Reb6hO2IrhZMveUVOuUXhsNYa/dPT
K4j7w5zPGXKyswEyvP2XqcxgweDGTLtpOmXwGt93Kr6vC75vbLBh4scoLvj8
ODJKfze1n8tOG2fvI79v07Ehb66e5kL6bTnb65RfORu6W3FbRClY1+vHJH/m
gsusC7q5DiyYvq9rmcikUng8+97gn/sbQGtfu/vpNiYMdOFkn+SUweYdr08t
GlUMLllu64PPVYBjz9TQE5Sd/DFIOqPMtwhEpi3x2WBaAUNanu0pOcaBm1eK
bUVD+KD73XlVwH4uxBp/6N5aXw2/zN2d/poLnduTPlhmHRdeb5TtiAivBmcd
2LaxmwfTkkbOqP5UD97OfE2dxnLY2fzM53FMC7z/XfZR4RMbrp6smXokphCO
BD4c6lveAl+e3TIZ2MkGubATC0JrConPF9LkzCpleLBnRKrP/CAKlycuNnx9
oRhURU2VnQcVglJZ7b6lKeUg2a70JbqJA8k2MguzphTAyK1e6s2W5RAbmeAi
VsWBRPNTd5/sKAXYGpCYG1EJB9d5rJE0Z4PEhaYPV9uqQfrr1oOaHdXgeNSv
xc6GCQ7ncjdt2lQFYXMiygfvqQYVidsaTCYTtBDXPUVc9xpx3Uq0D25oH8LR
PjDQPrihfchF+0Cyh/TP561yxjFhj2w489iRWpjXnrlNfy4D7NAvKKBfEMH8
TMhn5VCfTuq97l3KV6mqhPYBIQ8PzGET7erhhf4hQz6lg/6Ji2yp0yVgviD/
foYtCx6iv1uP/q4D/Z3Wt9b4079yQO1oga1MYyk43bCBvBCyvY2iRywKy8+h
/PmaxY+qSuHb+0gJEz82rEW5PYdyq41yW+kcdjVhcRNsnNsR/obPAprBtje3
79CJeZKy/FP3JxZkwPoObqpZUgncanmy/ulDFoSinfdDOx+Edp5/Vf65X3Q9
fPjqe/d+DBPOVnncTk8qh6WtW1YoPqyDYaHrKsQ2Urhd7vuuSx0VRDxGyp9w
cD0bcT2+uJ7lGPf9wrjvNcZ9E9Gv3US/Nh/9mhH6NV/0a6bo10j5kKF4LjPx
XE7gucwbc+78maOpkNhsIRmXT4cPyfJDX1dTuFEgv3EYcXgayo8Ryk8jys87
jK+/YHzti/F1oWOvvoiivtxAfQmNsm/MZ9YCI3DmitXhNbBzjPbl8hIGBKLe
qaHenUS9G4P6K4v6K4P6Gydjdjt4VxH47o5wDYIKYMssbD/rzIF3e+n2N7U/
weh9QdZNP0qBXe3cmR/DBgb62Vb0s/vRz85GPyuLfnYF+lnPjZPKd0+hQbTE
jIE1c+gQfc99UvN6yt4P/Xg5jorH3449FJZAxeM6KivePqficctjpXLbVWgg
a3xim60yHawHt+rdMWOCz9rkqY8ZRXCC1nlyuV0FFHCiFs7YTtnVBpunt7SL
IXtOfnuzRwUYqbgHF+tzYO6NzuNdd+rAynz8BYl1TLCL6NqxYGglBDzKiLfZ
y4XyWzISC9aw4CM/rDAqvhQ6HV+WeZZwwV5upPOdoxQuXA8/ihZTehnNOR3v
yIWw048s4jdQOLjjI29cUCm4DFf7vNejHtZO23fDP5wJU1be2vaDWw4DXmfq
7k+rh6drVrl2v2XC0SEjbqaFl0P3Zs56V98CcDzJD1gZWA6+1/ay7MTrYGD4
Wp8LUAg7uBrKj8vL4U6WfM/HMg4s/X1g8vXMApCw2jlaPaYcinebfbSj/H9Q
9PjHkvwCkBp66cLw9+UwiTP0c8xnDuTu35MdUp4P40/dezhiSTlEXMnSnJrA
gUZVnVtZ7/JB7ETXgWaFcvhxeNjyqKh/M/+h6qP/EBEaDJ7ATCmYTge1RxOs
f6xhwinXEVYT9WiguMHlXIYaHUZa749auZUJI5/17s9T3J+6b73706W3/PR0
7WZod3c5e3s1G8y2ttfAnmLYfIA15fqpZhi585v0lB1saEydsv+mbDH4fQ/6
tuYtDwpuXZyeMb0eKo+c8Ti8rAyeO3y+Um7AA8nyzLGR1H6du2P3ZvlVOri7
5V/ao8SD+e3fB4qlcWDDiYgvIxnFIHq4e80oUx40xO9zUJ5RB7NMTMS9M+kg
gvKwEeUhAOXBVE80ZJE8BzIaXn03z2aA5FP/kzkfqsB7b7P3FwqfNp18dbSj
jQH6H9RW6WlWwaEXg1ZNHV0Cl5mv05nKlXCnYQW8iGNDuMeYpUvpTJi28ELB
y65aqLo8LGLl8VoiXtKs67z6SC8Fkg+m6o44R4eG4hSbzb5McNfyOtzpkgua
41JHVm0qg4vH9kw4/YtCvQMKDFWk0uBHWcaJj7/psNH/2G0nERZ83p4ud3Q9
G1I9DjV9v8SAjniHXzqvqsG8cvBmyxHlEDfsxMUC7SrwK5vnklrGgova/taR
vFy46GNg+uVoGQxeeXvXz/EcOPSxce7jGTSYGZeXzFKiQ2BhcUTgBibYJ+x4
XhhfA0e9fhp2adXA2VERG5fNY4JBwhtfee1KOPVxQcfVQdWw2z1ziLYaC+xl
Lig4UHZnybqp8V6zqiG0VmP2yvEs2NsUZZa3IwtUDvkMlaLizS4Js9GiVLzp
c9xCSuNrNgxRVVwwi5KbMZaRWmes2SDDie3usc6GAQW37befKoUkC9m2z3ps
OJZiq9mikgNXp5jTb1L4WGEVTXvWUTZcbtwSPtY+C94x+NdHLiwF088P5lhS
9txW9a79iYNZYJx19B5LtRQc0qVkl1B0t1DQm1aXCscaEzJuUnGlyPGr/p5U
XKnMtNsTZpwOoS11/r82lsDTS233VdZScZA2VDF2pIPZJy2vdMofcS7e4i2l
/FEt6vVx1OtA1GuD2KejZyjmg+yYlNNH6WXQkyJfMnA/B1psy9ruheXBwK37
8hweUPSIzCgfXQ444nqO4HoG4XomPrthJ9qWAhfyf7HEo+iQ8eSnetgHJnTO
PR0+VDwVyu8bcV69oOjfG7/rpZL1l6Tv/wuW5wkR
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {
       FormBox["\"x1\"", TraditionalForm], 
       FormBox["\"x2\"", TraditionalForm]}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "ScalingFunctions" -> None}, PlotRange -> NCache[{{
         Rational[-3, 2], 
         Rational[3, 2]}, {
         Rational[-3, 2], 
         Rational[3, 2]}}, {{-1.5, 1.5}, {-1.5, 1.5}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1:eJxFlwmcjvUWxyV3YmZsZbtJ9i1q7q2spR9ZrrJUuLYUQiEx1iRRdmNwiySk
kEtlS8qSUYYwxjIz774/27svM7JV0r3P/zznmff9fHx4/6/3Of/fOd/zO+dt
/tqMIZPurVKlSpH+5x79j/j3mmnhO19dK0TT5fGXjj1sQ395Qb0D/5LxUFzp
/ODPZ/Br2aDX6oy0YeIr3n73zpexf4p/Zt66s/il2aFZkz+04X1Xj3dG7pXx
TMS1748xv2Dz9PuX/nzRhm3//vyb/U4ZV1+3had2OIc3T87Z0KiaHUdLq/ir
1lAwLljSwvP7OTyT6diV28MOiwjTTcG1CZdeGXDhPOqO7Hbkwjw7yovOPLt/
ioIlyvnNP266AG331rPNDtmR1a/13KpbFDww/oylw6QiHL1+1zo/akfbwhV7
RlxU8GXgVK1tT1xEXi8RyYHedEEFnV898Vx21WKMWV94s90YB+htBxXnvN8v
W1hSjH/4WmV88LEDCzp/88yIl1WMfPnbnxLbL6Fqh5UNXFcc2HQ4e+a+NSpI
7luXYZsfbfPP6k4cfmz6rntOqlgwcm+ny09dwd5zA7qs7uXEla+v2oYnVJDM
zKt4V2R3gRMx/Vv7HtI4T1cxWMg/4kTGro+63zNIQ4Opg66vG1qC5iLNSSda
NL0xbfh7Gsa2L65z/kQJbgi5bVzosVU8QMPeSP/H/te8FOdF2HEujGooMq2h
Yo+4SCm2fCpeLszVqzC8VhDtFuUff7NGGR49/Fn5nnMu2LaEmuyJaBg/bEjb
L1aX4fTFHX1/uO7CkzuPdPmtUMOWRxp9bK1hwTBVFMCNDV8teem5zzSUiXLm
WRDRKSob5Mb1Qy++ueVtjfVaWa8bQ449rBOmoTcBZEVtCuzGYT27T3fUsHBp
zsD/ZtqwU4961+pG3fMnjq3N0HBk1M3j7jwb182D3CuryvySikTOj21rZ9lR
NO/U5w/meFCiZznnRxWt9er1XmPn+nqQQ/VU8arAN8vB+fBgvfZr07IZKtfT
AR1aXbAHqfjP3Vo+r+KqCJPlREPXldtDVQ8G69WY00pF9bGbB9bPd+Lra6Ix
vNivU/DLXwp6dhIXdDHPXmQTMArmZ7XSU+1CqU77oqleTKvx+xdvfKfgkBz9
+HC2G5OeCryw9hMvLtURghXEjh68N5zvxm9DRaK96CDSPllBi3VzZzau6UE+
9asXeU0npEY/q2D0RPEAD/evj7lSsEGnaFlNL6i8A3x4Tqfj7i0ZxRTHi34i
zfN9+EqndXCpjGrh/HbJmj6Q3N0+VCewZDxdMGRT83U+vCXClvkwuc+UGRXL
ZebIjyr08jN3Mg6QP/ixUXz8qB9thv5NJ1pGiDoygLbieqP9WDHaclKtJ+Nh
Aj0AasOVfgTH77A/WS6h461PfBvuk7gv/OgrwhZJ7E8SFLIpP77UKXPskjBR
2MZKie8VQDVKvIT3j/bUrUOCiKqnChMWC8OSsG1ny+N/3idj21lhZAGQbTwu
4fjajIoG/WX2gQDnXYJd9PkqGWd0qtYXBtgPAviV/EqGLlZPdQCndXreXRpA
rRcObpxUXeH76Pfo/9N7TboG8Ej3j4oX91cgqPW1ktBzhDAYP8jOVil8Twl/
Tbqtjd/hB8m/oHD/SCgQNjrcj0V3uudeqa7y/SXuHz+2ijbur4LsVddP4X7y
Gb67WuV+kPCHTmFstg9WvQpNilS8I2xsn4RjAr92PqNPamisV8LbdGGda2p8
jfmW0Fng86HX8JPVGudBwg2P44PZ/bwgXIo0fCHkZsg4Epv9ff07HsNnagSZ
Vxmzfq8dPXrQg/cgGimIJ+gl43FKiMfwn9VB/lyGXqQX/2zkwQ/17xSnioKV
/B1srS3dftlt+FJmCJS+eTKmPylIcHN/h7hvZHTsLSad2/CrvBDzJEN00/K4
i+dJCKmFIrCMr8eJi7vQR/hYZhhdV4sBI4NkDnNhnLCH58MQLjQtLLPPuoz6
5IVRLGz1rgxqt1NOnpdh1Bc2WU8BjbdZTsP3MiM8nxRMpMBOlPZxVtx4PsLz
RYFO8Uo910gKP1wT4XmtgMblfxyo3nj7q+2LIyCbma5gp95dXfs6ICjonRUF
2cZyBeMJGDt60QCO4qqwga0Kmomxc8AOGv9roqC2PqwgoLt+0wl2vHO+vY5Y
tJLT7XV3F5xuaDd8NSsGo+0UjGkmnmxjP4rhlsDqpoLGBKQNZOtrYuyjKtxi
rehkQ1zgUhwDpbmFik9FemNW3Cd8ODvOe4M5p60Q3ZczMI4mVGCV56jVeG5+
HK/TS+W5beV7xUFjdqGKjSuX685kMXw7O4E/Fk3VNxcVQ3UXnDvTgo23MvTI
CfShxUnF/UJuGwu+FX6en4CeZL2gKkq+EwUsw+VL4pUAjUOHChpL68v4fQIz
BW4VKvtJGYz1K8HzUwO1ey0LEsRjwuCzpQay40EWzmOC547GXFvYl5NGnBEa
38PCz00acXM1UDtlW5m/JPeBxnWy8lxJcl9oPF+taE8DNmnELdCYYyv3Lcd1
mHuAje/HcSs07mNz3+S4mUGezzb2O47bMogJxJeN5zrH7RHkOtrxBtXV1Bvk
59pZZxJ0/dwgjtOcsfNeYuoNoiMJtnM/mHqDIJvOcHDdkqDHFARxPy0MDt6r
TL1BLKPvO/j7HLciCGqnsw5Qmg+YekOYSnuxEyT3mKk3BC81qJP9l+P2COEF
AszJ9TT1hkDXK3TyPcz6hozyVnUxV8lKnzP8w8VcmXpDILkfuJgrs74h5trF
XKU4Tojfs39mpri+IVA7wc1cpfjzMM8lN3OVYr1hkE2fcjNXKa5vGLSG3nUz
Vxx3RJg/9/DfHDc3zH3s4fpzXN13W4r166SHueK4u8LYJGxan0cGVxy3IMxz
2MtcpeAkvWHmxsvxUlzfMBI0H7z8uak3grEk2MtcmXojIJvu5mOuUlzfCPrw
XmZwZeqNMB8+vjfHzY3gEWEbt33Mlak3AmrfLn7+nqk3wvPQz1yZeiNYQvuv
n7ky6xsB/bebfn5v6o2AytspwFyZeqNwizTPCTBXpt4oSO6RAHNl1jcKCns9
wByVs94oSP7fJX5uOec7yn4vMVflrDdq7COjJOaqnPVGec+VmKty1hvFYtF4
myXmiuM6opwvie/HcSuixlx1mvsnx82MgWz7tsRccdyWMZANN5SZK47bI4bt
VBeZuSo3uBoRY90y6zT1xir3F4MrU28MZGObZObK1BvjOsrMVTn7VQzGz2+Z
uTL1xri+Mn+/nOsbw2PCBuorzJWpN851VzhPpt648bttmMJcmXrjzIPCXJn1
jYPkbFT4Hhw3N877vsJcmXrjWCHSbFGYK1NvnPlRmCuzvnFjbj+gMlcVHCfO
9U6fG/WLc77T58RHowTrT58b/CX4Hulz43dNgjnTKs+NuiW43ulzY79KVM5V
89zwqQT/vkmfG/t3gvkOVp4b+2QCr1DB0+fm3DbqnT6fTQVMsp+lz2kcjEsa
dakXqjw35kESJPel9DmN+x1J5ix9Xsjzisp9KX3egH5YJivngHluzL8U91X6
3Ph9lGK+0+fG3E1xnPT56+zTxvsI/g9eITvj
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.499999999999999, -112.49999999999999`}, {
                7.499999999999999, 112.49999999999999`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.499999999999999, -112.49999999999999`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -112.49999999999999`}]}, {{
                    7.499999999999999, -70.04716981132074}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -70.04716981132074}]}, {{
                    7.499999999999999, -27.594339622641506`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -27.594339622641506`}]}, {{
                    7.499999999999999, 14.858490566037734`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    14.858490566037734`}]}, {{7.499999999999999, 
                    57.311320754716974`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    57.311320754716974`}]}, {{7.499999999999999, 
                    99.76415094339622}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    99.76415094339622}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.499999999999999, -101.88679245283018`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -101.88679245283018`}]}, {{
                    7.499999999999999, -91.27358490566037}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -91.27358490566037}]}, {{
                    7.499999999999999, -80.66037735849056}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -80.66037735849056}]}, {{
                    7.499999999999999, -59.433962264150935`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -59.433962264150935`}]}, {{
                    7.499999999999999, -48.82075471698113}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -48.82075471698113}]}, {{
                    7.499999999999999, -38.20754716981131}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -38.20754716981131}]}, {{
                    7.499999999999999, -16.981132075471695`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -16.981132075471695`}]}, {{
                    7.499999999999999, -6.367924528301886}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -6.367924528301886}]}, {{
                    7.499999999999999, 4.245283018867937}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    4.245283018867937}]}, {{7.499999999999999, 
                    25.471698113207545`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    25.471698113207545`}]}, {{7.499999999999999, 
                    36.08490566037735}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    36.08490566037735}]}, {{7.499999999999999, 
                    46.698113207547166`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    46.698113207547166`}]}, {{7.499999999999999, 
                    67.92452830188678}, 
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    67.92452830188678}]}, {{7.499999999999999, 
                    78.5377358490566}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    78.5377358490566}]}, {{7.499999999999999, 
                    89.15094339622641}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    89.15094339622641}]}, {{7.499999999999999, 
                    110.37735849056602`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    110.37735849056602`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -112.49999999999999`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -70.04716981132074}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -27.594339622641506`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.499999999999999, 
                    14.858490566037734`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    57.311320754716974`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    99.76415094339622}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", "1.055998114057877`"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.740265967383293*^9, 3.7402660364096947`*^9, 
  3.7402660831377287`*^9, 3.740266136569707*^9, 3.740266179945751*^9, 
  3.7402662487306747`*^9, 3.740266334313385*^9, 3.740266431978487*^9, 
  3.740266628074251*^9, 3.740266680760915*^9, 3.74026673343462*^9, 
  3.740266949879588*^9, 3.740267100293532*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1154, 716},
WindowMargins->{{16, Automatic}, {0, 28}},
Magnification:>0.75 Inherited,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (August 2, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 264, 5, 70, "Title"],
Cell[CellGroupData[{
Cell[869, 31, 187, 4, 27, "Input"],
Cell[1059, 37, 225138, 3695, 164, "Output"]
}, Open  ]],
Cell[226212, 3735, 99, 1, 49, "Section"],
Cell[CellGroupData[{
Cell[226336, 3740, 86, 1, 39, "Section"],
Cell[226425, 3743, 147, 2, 27, "Input"],
Cell[226575, 3747, 201, 4, 23, "Input"],
Cell[226779, 3753, 190, 4, 23, "Input"],
Cell[226972, 3759, 200, 4, 23, "Input"],
Cell[CellGroupData[{
Cell[227197, 3767, 1914, 30, 54, "Input"],
Cell[229114, 3799, 438, 8, 18, "Message"],
Cell[229555, 3809, 798, 13, 23, "Output"],
Cell[230356, 3824, 798, 13, 23, "Output"],
Cell[231157, 3839, 768, 12, 23, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231962, 3856, 1250, 29, 39, "Input"],
Cell[233215, 3887, 1331, 25, 23, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234583, 3917, 744, 16, 39, "Input"],
Cell[235330, 3935, 1274, 24, 23, "Output"]
}, Open  ]],
Cell[236619, 3962, 201, 4, 25, "Input"],
Cell[236823, 3968, 167, 3, 23, "Input"],
Cell[CellGroupData[{
Cell[237015, 3975, 1037, 28, 79, "Input"],
Cell[238055, 4005, 1128, 19, 18, "Message"],
Cell[239186, 4026, 1128, 19, 18, "Message"],
Cell[240317, 4047, 1128, 19, 18, "Message"],
Cell[241448, 4068, 1185, 20, 18, "Message"],
Cell[242636, 4090, 2464, 60, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[245149, 4156, 105, 1, 49, "Section"],
Cell[CellGroupData[{
Cell[245279, 4161, 107, 1, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[245411, 4166, 2461, 50, 79, "Input"],
Cell[247875, 4218, 1236, 35, 52, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[249160, 4259, 109, 1, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[249294, 4264, 1125, 31, 76, "Input"],
Cell[250422, 4297, 767, 16, 23, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[251238, 4319, 108, 1, 28, "Subsubsection"],
Cell[251349, 4322, 292, 6, 23, "Input"],
Cell[CellGroupData[{
Cell[251666, 4332, 1397, 39, 76, "Input"],
Cell[253066, 4373, 778, 13, 23, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253881, 4391, 219, 5, 23, "Input"],
Cell[254103, 4398, 772, 13, 23, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254912, 4416, 282, 7, 23, "Input"],
Cell[255197, 4425, 1236, 28, 23, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256470, 4458, 676, 20, 27, "Input"],
Cell[257149, 4480, 1236, 28, 23, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[258434, 4514, 157, 2, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[258616, 4520, 721, 16, 41, "Input"],
Cell[259340, 4538, 2762, 67, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[262129, 4609, 475, 12, 41, "Subsection"],
Cell[CellGroupData[{
Cell[262629, 4625, 316, 10, 30, "Subsection"],
Cell[262948, 4637, 290, 8, 28, "Input"],
Cell[CellGroupData[{
Cell[263263, 4649, 4375, 105, 232, "Input"],
Cell[267641, 4756, 1136, 17, 23, "Output"],
Cell[268780, 4775, 4125, 109, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272942, 4889, 3317, 79, 187, "Input"],
Cell[276262, 4970, 4026, 96, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280325, 5071, 2347, 61, 179, "Input"],
Cell[282675, 5134, 12854, 373, 154, "Output"]
}, Open  ]],
Cell[295544, 5510, 172, 4, 25, "Input"],
Cell[CellGroupData[{
Cell[295741, 5518, 4101, 99, 224, "Input"],
Cell[299845, 5619, 23682, 630, 391, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[323576, 6255, 108, 1, 34, "Subsection"],
Cell[323687, 6258, 430, 8, 23, "Input"],
Cell[CellGroupData[{
Cell[324142, 6270, 291, 7, 23, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[324436, 6279, 2428, 62, 98, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[326879, 6344, 1109, 17, 23, "Output"],
Cell[327991, 6363, 6810, 144, 459, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[334804, 6509, 1768, 38, 66, "Output"],
Cell[336575, 6549, 2143, 59, 87, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[338721, 6610, 647, 15, 23, "Output"],
Cell[CellGroupData[{
Cell[339393, 6629, 12274, 255, 578, "Input"],
Cell[351670, 6886, 2134, 48, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353841, 6939, 3276, 82, 201, "Input"],
Cell[357120, 7023, 2058, 47, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359215, 7075, 547, 15, 41, "Input"],
Cell[359765, 7092, 1044, 20, 23, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360846, 7117, 120, 1, 28, "Subsubsection"],
Cell[CellGroupData[{
Cell[360991, 7122, 2869, 73, 111, "Input"],
Cell[363863, 7197, 4500, 108, 132, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368400, 7310, 1333, 35, 71, "Input"],
Cell[369736, 7347, 3443, 95, 132, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[373228, 7448, 119, 1, 28, "Subsubsection"],
Cell[CellGroupData[{
Cell[373372, 7453, 2772, 71, 130, "Input"],
Cell[376147, 7526, 3790, 97, 132, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379974, 7628, 1164, 32, 81, "Input"],
Cell[381141, 7662, 3759, 97, 132, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[384949, 7765, 171, 2, 28, "Subsubsection"],
Cell[CellGroupData[{
Cell[385145, 7771, 2799, 72, 130, "Input"],
Cell[387947, 7845, 3808, 98, 132, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391792, 7948, 1170, 32, 81, "Input"],
Cell[392965, 7982, 3782, 97, 132, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[396808, 8086, 100, 1, 33, "Subsection"],
Cell[396911, 8089, 487, 10, 43, "Input"],
Cell[CellGroupData[{
Cell[397423, 8103, 106, 1, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[397554, 8108, 10837, 252, 526, "Input"],
Cell[408394, 8362, 6559, 174, 298, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414990, 8541, 2178, 57, 97, "Input"],
Cell[417171, 8600, 12573, 344, 244, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[429793, 8950, 109, 1, 28, "Subsubsection"],
Cell[CellGroupData[{
Cell[429927, 8955, 9763, 237, 526, "Input"],
Cell[439693, 9194, 6399, 169, 223, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446129, 9368, 2313, 60, 97, "Input"],
Cell[448445, 9430, 12043, 325, 327, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[460549, 9762, 118, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[460692, 9767, 138, 1, 28, "Subsubsection"],
Cell[CellGroupData[{
Cell[460855, 9772, 7188, 166, 514, "Input"],
Cell[468046, 9940, 16358, 432, 558, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[484441, 10377, 1527, 39, 56, "Input"],
Cell[485971, 10418, 31505, 839, 924, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[517525, 11263, 138, 1, 28, "Subsubsection"],
Cell[CellGroupData[{
Cell[517688, 11268, 7036, 164, 514, "Input"],
Cell[524727, 11434, 8742, 223, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[533506, 11662, 1511, 39, 56, "Input"],
Cell[535020, 11703, 33406, 871, 1194, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[568487, 12581, 165, 2, 34, "Subsection"],
Cell[CellGroupData[{
Cell[568677, 12587, 6612, 171, 363, "Input"],
Cell[575292, 12760, 13723, 318, 95, "Output"],
Cell[589018, 13080, 1417, 21, 23, "Output"]
}, Open  ]],
Cell[590450, 13104, 629, 14, 27, "Input"],
Cell[591082, 13120, 598, 16, 23, "Input"],
Cell[591683, 13138, 459, 14, 23, "Input"],
Cell[592145, 13154, 3248, 73, 116, "Input"],
Cell[CellGroupData[{
Cell[595418, 13231, 101, 1, 28, "Subsubsection"],
Cell[CellGroupData[{
Cell[595544, 13236, 7476, 147, 325, "Input"],
Cell[603023, 13385, 750, 11, 23, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[603810, 13401, 5238, 127, 252, "Input"],
Cell[609051, 13530, 207, 3, 23, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[609295, 13538, 281, 7, 27, "Input"],
Cell[609579, 13547, 77, 1, 23, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[609693, 13553, 2890, 73, 150, "Input"],
Cell[612586, 13628, 612, 11, 32, "Message"],
Cell[613201, 13641, 896, 16, 32, "Message"],
Cell[614100, 13659, 514, 7, 23, "Output"]
}, Open  ]],
Cell[614629, 13669, 105, 1, 23, "Input"],
Cell[CellGroupData[{
Cell[614759, 13674, 973, 18, 27, "Input"],
Cell[615735, 13694, 77, 1, 23, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[615849, 13700, 1908, 37, 60, "Input"],
Cell[617760, 13739, 2842, 70, 102, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[620651, 13815, 121, 1, 28, "Subsubsection"],
Cell[CellGroupData[{
Cell[620797, 13820, 1348, 34, 159, "Input"],
Cell[622148, 13856, 356, 6, 27, "Output"],
Cell[622507, 13864, 316, 5, 23, "Output"],
Cell[622826, 13871, 357, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[623220, 13882, 3867, 66, 79, "Input"],
Cell[627090, 13950, 280248, 4678, 272, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

