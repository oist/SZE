(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    221402,       4878]
NotebookOptionsPosition[    216869,       4722]
NotebookOutlinePosition[    217196,       4737]
CellTagsIndexPosition[    217153,       4734]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["K and WF", "Title",
 CellChangeTimes->{{3.740795041430786*^9, 3.740795051098796*^9}}],

Cell[CellGroupData[{

Cell["From Irinas script \[OpenCurlyQuote]RandomLatticeTG_ShortMoveOut_mod\
\[CloseCurlyQuote]", "Chapter",
 CellChangeTimes->{{3.7407950605734987`*^9, 3.740795066583619*^9}, {
  3.740795102164999*^9, 3.740795106759733*^9}}],

Cell[CellGroupData[{

Cell["Define things", "Subchapter",
 CellChangeTimes->{{3.740795115521471*^9, 3.740795117878787*^9}}],

Cell[CellGroupData[{

Cell["System parameters", "Section",
 CellChangeTimes->{{3.740795169855535*^9, 3.740795174438465*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numBar", "=", "5"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Total", " ", "number", " ", "of", " ", "the", " ", "delta", " ", 
    "barriers"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ys", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"\"\<y\>\"", "<>", 
       RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "numBar"}], "]"}]}]}], " ", 
  RowBox[{"(*", 
   RowBox[{"List", " ", "of", " ", "the", " ", "variables", " ", 
    RowBox[{"(", "placeholders", ")"}], " ", "for", " ", "the", " ", 
    "positions", " ", "of", " ", "the", " ", "barriers"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ds", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"\"\<d\>\"", "<>", 
       RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "numBar"}], "]"}]}]}], 
  RowBox[{"(*", 
   RowBox[{"List", " ", "of", " ", "the", " ", "variables", " ", 
    RowBox[{"(", "placeholders", ")"}], " ", "for", " ", "the", " ", 
    "heights", " ", "of", " ", "the", " ", "barriers"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"specificRules", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"L", "\[Rule]", "10"}], ",", " ", 
      RowBox[{"\[HBar]", "\[Rule]", "1"}], ",", " ", 
      RowBox[{"m", "\[Rule]", "1"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Rules", " ", "to", " ", "fix", " ", "the", " ", "length", " ", "of", " ",
      "the", " ", "box", " ", "L"}], ",", " ", 
    RowBox[{"and", " ", "the", " ", 
     FractionBox["\[HBar]", "m"], " ", "ratio"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"$Assumptions", "=", 
  RowBox[{
   RowBox[{"Element", "[", 
    RowBox[{"ds", ",", " ", "Reals"}], "]"}], "&&", 
   RowBox[{"Element", "[", 
    RowBox[{"ys", ",", " ", "Reals"}], "]"}], "&&", 
   RowBox[{"Element", "[", 
    RowBox[{"L", ",", " ", "Reals"}], "]"}], " ", "&&", 
   RowBox[{"Element", "[", 
    RowBox[{"m", ",", " ", "Reals"}], "]"}], "&&", " ", 
   RowBox[{"Element", "[", 
    RowBox[{"\[HBar]", ",", " ", "Reals"}], "]"}], "&&", 
   RowBox[{"Element", "[", 
    RowBox[{"k", ",", " ", "Reals"}], "]"}], 
   RowBox[{"(*", 
    RowBox[{"General", " ", "assumptions", " ", "about", " ", 
     RowBox[{"parameters", ".", " ", "They"}], " ", "are", " ", "all", " ", 
     RowBox[{"real", "."}]}], "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.7407967960542994`*^9, 3.740796796132634*^9}, {
  3.740808002738109*^9, 3.740808052244378*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y1", ",", "y2", ",", "y3", ",", "y4", ",", "y5"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.740795749309144*^9, 3.740796745014496*^9, 3.740796994415159*^9, 
   3.740807574366007*^9, 3.7408078854855003`*^9, 3.740808006252305*^9, {
   3.740808037448029*^9, 3.7408080559782887`*^9}, 3.740808127830187*^9, 
   3.7408085363146152`*^9, 3.740808782756023*^9, 3.7408090044042263`*^9, 
   3.740869564071026*^9, 3.740869623409539*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.740795749309144*^9, 3.740796745014496*^9, 3.740796994415159*^9, 
   3.740807574366007*^9, 3.7408078854855003`*^9, 3.740808006252305*^9, {
   3.740808037448029*^9, 3.7408080559782887`*^9}, 3.740808127830187*^9, 
   3.7408085363146152`*^9, 3.740808782756023*^9, 3.7408090044042263`*^9, 
   3.740869564071026*^9, 3.7408696234113894`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"d1", "|", "d2", "|", "d3", "|", "d4", "|", "d5"}], ")"}], 
   "\[Element]", "Reals"}], "&&", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"y1", "|", "y2", "|", "y3", "|", "y4", "|", "y5"}], ")"}], 
   "\[Element]", "Reals"}], "&&", 
  RowBox[{"L", "\[Element]", "Reals"}], "&&", 
  RowBox[{"m", "\[Element]", "Reals"}], "&&", 
  RowBox[{"\[HBar]", "\[Element]", "Reals"}], "&&", 
  RowBox[{"k", "\[Element]", "Reals"}]}]], "Output",
 CellChangeTimes->{
  3.740795749309144*^9, 3.740796745014496*^9, 3.740796994415159*^9, 
   3.740807574366007*^9, 3.7408078854855003`*^9, 3.740808006252305*^9, {
   3.740808037448029*^9, 3.7408080559782887`*^9}, 3.740808127830187*^9, 
   3.7408085363146152`*^9, 3.740808782756023*^9, 3.7408090044042263`*^9, 
   3.740869564071026*^9, 3.740869623414102*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cyclic permutation barrier heights", "Section",
 CellChangeTimes->{{3.740795183676564*^9, 3.740795190584421*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cyclicBarrierShiftHeights", "[", 
    RowBox[{
    "\[CapitalDelta]_", ",", " ", "ys_", ",", " ", "ds_", ",", " ", "L_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "shift", ",", " ", "signs", ",", " ", "dels", ",", " ", "resultDs", ",",
        " ", "Nb"}], "}"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Nb", " ", "=", " ", 
        RowBox[{"Length", "[", "ds", "]"}]}], ";", 
       RowBox[{"dels", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              FractionBox["L", "2"], "-", "#"}], "&"}], "/@", " ", 
            RowBox[{"Reverse", "[", "ys", "]"}]}], ",", " ", "L"}], "}"}], 
         "]"}]}], ";", 
       RowBox[{"signs", "=", 
        RowBox[{"Sign", "[", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"\[CapitalDelta]", ",", "L"}], "]"}], " ", "-", " ", 
          "dels"}], "]"}]}], ";", " ", 
       RowBox[{"shift", "=", 
        RowBox[{"Floor", "[", 
         FractionBox[
          RowBox[{"Total", "[", 
           RowBox[{"signs", " ", "+", " ", "1"}], "]"}], "2"], "]"}]}], ";", 
       RowBox[{"resultDs", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ds", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Nb", "-", "shift", "+", "1"}], ";;", "Nb"}], "]"}], 
            "]"}], ",", 
           RowBox[{"ds", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", 
              RowBox[{"Nb", "-", "shift"}]}], "]"}], "]"}]}], "}"}], 
         "]"}]}]}], ")"}]}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Cyclic", " ", "permutation", " ", "of", " ", "the", " ", "barrier", " ", 
    "positions"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cyclicBarrierShiftPos", "[", 
   RowBox[{"\[CapitalDelta]_", ",", " ", "ys_", ",", " ", "L_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Nb", ",", " ", "resultYs"}], "}"}], ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Nb", " ", "=", " ", 
       RowBox[{"Length", "[", "ds", "]"}]}], ";", 
      RowBox[{"resultYs", " ", "=", " ", 
       RowBox[{"Sort", "[", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"ys", "+", "\[CapitalDelta]", " ", "+", " ", 
            FractionBox["L", "2"]}], ",", " ", "L"}], "]"}], "-", 
         FractionBox["L", "2"]}], "]"}]}]}], ")"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.740795205413826*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Bethe Equations
\
\>", "Section",
 CellChangeTimes->{{3.740795218615921*^9, 3.740795247635139*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalT]", "[", 
   RowBox[{"n_", ",", " ", "ys_", ",", " ", "ds_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "combs", "}"}], ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"combs", "=", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{"Length", "[", "ys", "]"}]}], "]"}], ",", " ", 
         RowBox[{"{", "n", "}"}]}], "]"}]}], ";", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"2", "n"}]], 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Times", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ds", "[", 
               RowBox[{"[", "#", "]"}], "]"}], " ", 
              FractionBox["m", 
               SuperscriptBox["\[HBar]", "2"]]}], ")"}]}], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], ">=", "1"}], ",", " ", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"k", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ys", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", 
                  FractionBox["L", "2"]}], ")"}]}], "]"}], 
              RowBox[{"Sin", "[", 
               RowBox[{"k", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox["L", "2"], "-", 
                  RowBox[{
                   RowBox[{"ys", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                   RowBox[{"[", "n", "]"}], "]"}]}], ")"}]}], "]"}]}], ",", 
             " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"k", " ", "L"}], "]"}]}], "]"}], 
           RowBox[{"Product", "[", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"k", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ys", "[", 
                   RowBox[{"[", "#", "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "-", 
                 RowBox[{
                  RowBox[{"ys", "[", 
                   RowBox[{"[", "#", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"j", "-", "1"}], "]"}], "]"}]}], ")"}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "2", ",", "n"}], "}"}]}], "]"}]}], "&"}], "/@",
          "combs"}], "]"}]}]}], ")"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"\[ScriptCapitalT]", "[", 
   RowBox[{"1", ",", " ", "ys", ",", " ", "ds"}], "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"makeBE", "[", 
   RowBox[{"ys_", ",", " ", "ds_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[ScriptCapitalT]", "[", 
       RowBox[{"n", ",", " ", "ys", ",", " ", "ds"}], "]"}], 
      SuperscriptBox["k", 
       RowBox[{
        RowBox[{"Length", "[", "ds", "]"}], "-", "n"}]]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", " ", "0", ",", " ", 
       RowBox[{"Length", "[", "ds", "]"}]}], "}"}]}], "]"}], "\[Equal]", 
   "0"}]}], "\n", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"TGBE", "=", 
    RowBox[{"makeBE", "[", 
     RowBox[{"ys", ",", " ", "ds"}], "]"}]}], ";"}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.002605`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7407957494627047`*^9, 3.74079674515204*^9, 3.740796994542631*^9, 
   3.7408075744671793`*^9, 3.7408078856759644`*^9, 3.740808006473435*^9, {
   3.7408080376612587`*^9, 3.740808056119174*^9}, 3.740808128146042*^9, 
   3.740808536700344*^9, 3.740808783048747*^9, 3.740809004545393*^9, 
   3.74086956448658*^9, 3.740869623814452*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Normalization coefficients", "Section",
 CellChangeTimes->{{3.74079527338901*^9, 3.740795279030725*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "n", " ", "is", " ", "the", " ", "number", " ", "of", " ", "the", " ", 
     "well", " ", "in", " ", "which", " ", "the", " ", "particle", " ", "is", 
     " ", "in"}], ",", " ", 
    RowBox[{
     RowBox[{"for", " ", "1"}], "-", 
     RowBox[{"particle", " ", 
      RowBox[{"case", ".", " ", "The"}], " ", "coefficient", " ", "we", " ", 
      "are", " ", "calculating", " ", "is", " ", 
      RowBox[{
       SubscriptBox["\"\<\[ScriptCapitalA]\>\"", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "[", 
       RowBox[{"{", "k1", "}"}], "]"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "with", " ", "1", " ", "in", " ", "the", " ", "well", " ", "number", " ", 
      RowBox[{"n", ".", "  ", "ds"}]}], " ", "-", " ", 
     RowBox[{"heights", " ", "of", " ", "the", " ", "barriers"}]}], ",", " ", 
    
    RowBox[{"ys", " ", "-", " ", 
     RowBox[{"positions", " ", "of", " ", "the", " ", "barriers"}]}]}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"makeCoef", "[", 
      RowBox[{"n_", ",", " ", "ds_", ",", " ", "ys_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "combs", ",", " ", "posCombs", ",", " ", "elems", ",", " ", "curProd",
          ",", " ", "curYP"}], "}"}], ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"combs", "=", 
          RowBox[{"Subsets", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              RowBox[{"n", "-", "1"}]}], "]"}], ",", " ", 
            RowBox[{"n", "-", "1"}]}], "]"}]}], ";", " ", 
         RowBox[{"elems", " ", "=", " ", 
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Times", "@@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"ds", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "*", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "m", " ", "\[ImaginaryI]"}], 
                    RowBox[{"k", " ", 
                    SuperscriptBox["\[HBar]", "2"]}]]}], ")"}]}], 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", "#", "]"}], ">", "0"}], ",", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", 
                    RowBox[{"(", 
                    RowBox[{"L", " ", "+", " ", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    RowBox[{"ys", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}]}], "]"}]}], 
                   ")"}], ",", " ", "1"}], "]"}]}], ")"}], 
              RowBox[{"Product", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", " ", "k", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"+", 
                    RowBox[{
                    RowBox[{"ys", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"ys", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"j", "-", "1"}], "]"}], "]"}]}], ")"}]}], "]"}]}],
                  ")"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"j", ",", " ", "2", ",", " ", 
                  RowBox[{"Length", "[", "#", "]"}]}], "}"}]}], "]"}]}], 
             "&"}], "/@", "combs"}], "]"}]}]}], ")"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"makeCoef", "[", 
     RowBox[{"2", ",", " ", "ds", ",", " ", "ys"}], "]"}], ";"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell["Real Part", "Subsection",
 CellChangeTimes->{{3.740795339813465*^9, 3.7407953428669643`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"realPartMakeCoef", "[", 
    RowBox[{"n_", ",", " ", "ds_", ",", " ", "ys_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "combs", ",", " ", "posCombs", ",", " ", "elems", ",", " ", "curProd", 
       ",", " ", "curYP"}], "}"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"combs", "=", 
        RowBox[{"Subsets", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            RowBox[{"n", "-", "1"}]}], "]"}], ",", " ", 
          RowBox[{"n", "-", "1"}]}], "]"}]}], ";", " ", 
       RowBox[{"elems", " ", "=", " ", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Times", "@@", 
               RowBox[{"(", 
                RowBox[{"ds", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "m", " "}], 
                 RowBox[{"k", " ", 
                  SuperscriptBox["\[HBar]", "2"]}]], ")"}], 
               RowBox[{"Length", "[", "#", "]"}]], 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "#", "]"}], ">", "0"}], ",", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"k", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["L", "2"], "+", 
                    RowBox[{
                    RowBox[{"ys", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "]"}]}], 
                  RowBox[{"Cos", "[", 
                   RowBox[{"k", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ys", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"Length", "[", "#", "]"}], "]"}], "]"}], "+", 
                    FractionBox["L", "2"]}], ")"}]}], "]"}]}], ")"}], ",", 
                " ", "1"}], "]"}]}], ")"}], 
            RowBox[{"Product", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Sin", "[", " ", 
                RowBox[{"k", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{
                    RowBox[{"ys", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"ys", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"j", "-", "1"}], "]"}], "]"}]}], ")"}]}], "]"}], 
               ")"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"j", ",", " ", "2", ",", " ", 
                RowBox[{"Length", "[", "#", "]"}]}], "}"}]}], "]"}]}], "&"}], 
          "/@", "combs"}], "]"}]}]}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"realPartMakeCoef", "[", 
   RowBox[{"2", ",", " ", "ds", ",", " ", "ys"}], "]"}], ";"}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Im Part", "Subsection",
 CellChangeTimes->{{3.740795358663041*^9, 3.7407953606377087`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"imPartMakeCoef", "[", 
    RowBox[{"n_", ",", " ", "ds_", ",", " ", "ys_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "combs", ",", " ", "posCombs", ",", " ", "elems", ",", " ", "curProd", 
       ",", " ", "curYP"}], "}"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"combs", "=", 
        RowBox[{"Subsets", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            RowBox[{"n", "-", "1"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";", " ", 
       RowBox[{"elems", " ", "=", " ", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Times", "@@", 
               RowBox[{"(", 
                RowBox[{"ds", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "m", " "}], 
                 RowBox[{"k", " ", 
                  SuperscriptBox["\[HBar]", "2"]}]], ")"}], 
               RowBox[{"Length", "[", "#", "]"}]], 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "#", "]"}], ">", "0"}], ",", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"k", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["L", "2"], "+", 
                    RowBox[{
                    RowBox[{"ys", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "]"}], 
                  RowBox[{"Sin", "[", 
                   RowBox[{"k", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ys", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"Length", "[", "#", "]"}], "]"}], "]"}], "+", 
                    FractionBox["L", "2"]}], ")"}]}], "]"}]}], ")"}], ",", 
                " ", "1"}], "]"}]}], ")"}], 
            RowBox[{"Product", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Sin", "[", " ", 
                RowBox[{"k", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{
                    RowBox[{"ys", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"ys", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"j", "-", "1"}], "]"}], "]"}]}], ")"}]}], "]"}], 
               ")"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"j", ",", " ", "2", ",", " ", 
                RowBox[{"Length", "[", "#", "]"}]}], "}"}]}], "]"}]}], "&"}], 
          "/@", "combs"}], "]"}]}]}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imPartMakeCoef", "[", 
   RowBox[{"2", ",", " ", 
    RowBox[{"{", 
     RowBox[{"d1", ",", "d2", ",", "d3"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"y1", ",", "y2", ",", "y3"}], "}"}]}], "]"}], ";"}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Norm", "Subsection",
 CellChangeTimes->{{3.740795367861733*^9, 3.740795372638685*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"calcNorm", "[", 
   RowBox[{"ds_", ",", " ", "ys_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ReA", ",", " ", "ImA", ",", " ", "ReA1", ",", " ", "ImA1"}], 
     "}"}], ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ReA1", " ", "=", " ", 
       RowBox[{"realPartMakeCoef", "[", 
        RowBox[{
         RowBox[{"numBar", "+", "1"}], ",", " ", "ds", ",", " ", "ys"}], 
        "]"}]}], ";", " ", 
      RowBox[{"ImA1", "=", 
       RowBox[{"imPartMakeCoef", "[", 
        RowBox[{
         RowBox[{"numBar", "+", "1"}], ",", " ", "ds", ",", " ", "ys"}], 
        "]"}]}], ";", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ys", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          FractionBox["L", "2"], " ", "+", " ", 
          FractionBox[
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Sin", "[", 
              RowBox[{"k", 
               RowBox[{"(", 
                RowBox[{"L", "+", 
                 RowBox[{"2", 
                  RowBox[{"ys", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}]}], "]"}], 
             ")"}]}], 
           RowBox[{"2", " ", "k"}]]}], ")"}]}], " ", "+", " ", 
       RowBox[{"2", " ", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ReA", " ", "=", 
              RowBox[{"realPartMakeCoef", "[", 
               RowBox[{"#", ",", " ", "ds", ",", " ", "ys"}], "]"}]}], ";", 
             RowBox[{"ImA", "=", 
              RowBox[{"imPartMakeCoef", "[", 
               RowBox[{"#", ",", " ", "ds", ",", " ", "ys"}], "]"}]}], ";", 
             " ", 
             RowBox[{
              RowBox[{
               SuperscriptBox["ReA", "2"], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ys", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], "-", 
                 RowBox[{"ys", "[", 
                  RowBox[{"[", 
                   RowBox[{"#", "-", "1"}], "]"}], "]"}], " ", "+", " ", 
                 RowBox[{
                  FractionBox["1", 
                   RowBox[{"2", " ", "k"}]], 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"k", 
                    RowBox[{"(", 
                    RowBox[{"L", "+", 
                    RowBox[{"2", 
                    RowBox[{"ys", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}]}], ")"}]}], "]"}], "-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"k", " ", 
                    RowBox[{"(", 
                    RowBox[{"L", "+", 
                    RowBox[{"2", 
                    RowBox[{"ys", "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "-", "1"}], "]"}], "]"}]}]}], ")"}]}], 
                    "]"}]}], ")"}]}], ")"}]}]}], ")"}]}], " ", "+", " ", 
              RowBox[{
               SuperscriptBox["ImA", "2"], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ys", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], "-", 
                 RowBox[{"ys", "[", 
                  RowBox[{"[", 
                   RowBox[{"#", "-", "1"}], "]"}], "]"}], " ", "-", " ", 
                 RowBox[{
                  FractionBox["1", 
                   RowBox[{"2", " ", "k"}]], 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"k", 
                    RowBox[{"(", 
                    RowBox[{"L", "+", 
                    RowBox[{"2", 
                    RowBox[{"ys", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}]}], ")"}]}], "]"}], "-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"k", " ", 
                    RowBox[{"(", 
                    RowBox[{"L", "+", 
                    RowBox[{"2", 
                    RowBox[{"ys", "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "-", "1"}], "]"}], "]"}]}]}], ")"}]}], 
                    "]"}]}], ")"}]}], ")"}]}]}], ")"}]}], " ", "-", " ", 
              RowBox[{"ReA", " ", "ImA", 
               FractionBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"k", 
                    RowBox[{"(", 
                    RowBox[{"L", "+", 
                    RowBox[{"2", 
                    RowBox[{"ys", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}]}], ")"}]}], "]"}], "-", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"k", " ", 
                    RowBox[{"(", 
                    RowBox[{"L", "+", 
                    RowBox[{"2", 
                    RowBox[{"ys", "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "-", "1"}], "]"}], "]"}]}]}], ")"}]}], 
                   "]"}]}], ")"}], "k"]}]}]}], ")"}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"2", ",", " ", "numBar"}], "]"}]}], "]"}]}], "+", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["ReA1", "2"], 
           RowBox[{"(", 
            RowBox[{
             FractionBox["L", "2"], "-", 
             RowBox[{"ys", "[", 
              RowBox[{"[", "numBar", "]"}], "]"}], " ", "+", " ", 
             FractionBox[
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"k", " ", "2", " ", "L"}], "]"}], "-", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"k", " ", 
                   RowBox[{"(", 
                    RowBox[{"L", "+", 
                    RowBox[{"2", 
                    RowBox[{"ys", "[", 
                    RowBox[{"[", "numBar", "]"}], "]"}]}]}], ")"}]}], "]"}]}],
                 ")"}]}], 
              RowBox[{"2", " ", "k"}]]}], ")"}]}], " ", "+", " ", 
          RowBox[{
           SuperscriptBox["ImA1", "2"], 
           RowBox[{"(", 
            RowBox[{
             FractionBox["L", "2"], "-", 
             RowBox[{"ys", "[", 
              RowBox[{"[", "numBar", "]"}], "]"}], " ", "-", " ", 
             FractionBox[
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"k", " ", "2", " ", "L"}], "]"}], "-", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"k", " ", 
                   RowBox[{"(", 
                    RowBox[{"L", "+", 
                    RowBox[{"2", 
                    RowBox[{"ys", "[", 
                    RowBox[{"[", "numBar", "]"}], "]"}]}]}], ")"}]}], "]"}]}],
                 ")"}]}], 
              RowBox[{"2", " ", "k"}]]}], ")"}]}], " ", "-", " ", 
          RowBox[{"ReA1", " ", "ImA1", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"k", " ", "2", " ", "L"}], "]"}], "-", 
              RowBox[{"Cos", "[", 
               RowBox[{"k", " ", 
                RowBox[{"(", 
                 RowBox[{"L", "+", 
                  RowBox[{"2", 
                   RowBox[{"ys", "[", 
                    RowBox[{"[", "numBar", "]"}], "]"}]}]}], ")"}]}], "]"}]}],
              ")"}], "k"]}]}], ")"}]}]}]}], ")"}]}], "]"}]}]], "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solve things", "Subchapter",
 CellChangeTimes->{{3.7407953948172817`*^9, 3.740795396274933*^9}}],

Cell[CellGroupData[{

Cell["Barrier position and heights", "Section",
 CellChangeTimes->{{3.7407954307124567`*^9, 3.7407954416887293`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"\[Gamma]", " ", "*", " ", 
    FractionBox["L", 
     RowBox[{"numBar", "-", "1"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"y0", "  ", "=", " ", 
    RowBox[{
     FractionBox[
      RowBox[{"-", "L"}], "2"], "+", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{"L", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"numBar", "-", "1"}], ")"}], "a"}]}], ")"}], "2"]}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"position", " ", "of", " ", "all", " ", "barriers"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"randYsAllDelta", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y0", "+", 
          RowBox[{"a", "*", 
           RowBox[{"(", "#", ")"}]}], " ", "+", " ", 
          RowBox[{"\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"y0", "+", 
             FractionBox["L", "2"]}], ")"}]}]}], ")"}], "/.", 
        "specificRules"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", " ", 
        RowBox[{"numBar", "-", "1"}]}], "]"}]}], "//", "FullSimplify"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"randYsAllDelta", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"-", "L"}], "2"], " ", "+", " ", 
            FractionBox["L", 
             RowBox[{"2", 
              RowBox[{"(", "numBar", ")"}]}]]}], ")"}], "+", 
          RowBox[{
           FractionBox["L", "numBar"], 
           RowBox[{"(", "#", ")"}]}], " ", "+", " ", 
          RowBox[{"\[Delta]", 
           FractionBox["L", 
            RowBox[{"2", 
             RowBox[{"(", "numBar", ")"}]}]]}]}], 
         RowBox[{"(*", 
          RowBox[{"*", 
           RowBox[{"Mod", "[", 
            RowBox[{"#", ",", "2"}], "]"}]}], "*)"}], ")"}], "/.", 
        "specificRules"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", " ", 
        RowBox[{"numBar", "-", "1"}]}], "]"}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thumorse", "=", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
      "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
      "1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"height", " ", "of", " ", "the", " ", "barriers"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"randDs", " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "+", " ", 
        RowBox[{"0", "*", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"#", "+", "0"}], ",", "2"}], "]"}]}]}], ")"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", " ", "numBar"}], "]"}]}]}], 
   RowBox[{"(*", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "3"}], "}"}], ",", " ", 
      RowBox[{"Length", "[", "ds", "]"}]}], "]"}], "*)"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"(", "1", ")"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", " ", "numBar"}], "]"}]}], "*)"}], " ", ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"randDs", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "+", " ", 
        RowBox[{"0", "*", 
         RowBox[{"[", "#", "]"}]}]}], ")"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", " ", "numBar"}], "]"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"randDs", "[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "7"}], ",", " ", 
         RowBox[{"-", "6"}]}], "}"}], "]"}], "]"}], " ", "=", " ", "0"}], 
    ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "barrier", " ", "parameters", " ", "etc", " ", "for", " ", "the", " ", 
    "bethe", " ", "equation"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"modified", " ", "version"}], 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.740796739431149*^9, 3.740796740691142*^9}, {
  3.740796825905333*^9, 3.740796834301128*^9}, {3.740807642735539*^9, 
  3.7408076437939663`*^9}, {3.7408076841663847`*^9, 3.740807759389061*^9}, {
  3.740807809346466*^9, 3.7408078794268293`*^9}, {3.7408081488487043`*^9, 
  3.740808150249394*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"randRulesAllDelta", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ys", "[", 
         RowBox[{"[", "#", "]"}], "]"}], "\[Rule]", 
        RowBox[{"randYsAllDelta", "[", 
         RowBox[{"[", "#", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"ds", "[", 
         RowBox[{"[", "#", "]"}], "]"}], "\[Rule]", 
        RowBox[{"randDs", "[", 
         RowBox[{"[", "#", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", " ", 
      RowBox[{"Length", "[", "ds", "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allYsAllDelta", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ys", "[", 
       RowBox[{"[", "#", "]"}], "]"}], "\[Rule]", 
      RowBox[{"randYsAllDelta", "[", 
       RowBox[{"[", "#", "]"}], "]"}]}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", " ", 
      RowBox[{"Length", "[", "ds", "]"}]}], "]"}]}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"y1", "\[Rule]", 
    RowBox[{
     RowBox[{"-", "5"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Delta]"}]}], 
      ")"}]}]}], ",", 
   RowBox[{"d1", "\[Rule]", "d"}], ",", 
   RowBox[{"y2", "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["5", "2"]}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]", "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Delta]"}]}], 
      ")"}]}]}], ",", 
   RowBox[{"d2", "\[Rule]", "d"}], ",", 
   RowBox[{"y3", "\[Rule]", 
    RowBox[{
     RowBox[{"-", "5"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Delta]"}]}], ",", 
   RowBox[{"d3", "\[Rule]", "d"}], ",", 
   RowBox[{"y4", "\[Rule]", 
    RowBox[{
     RowBox[{"\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["5", "2"], "-", 
        RowBox[{"5", " ", "\[Delta]"}]}], ")"}]}], "+", 
     RowBox[{"5", " ", "\[Delta]"}]}]}], ",", 
   RowBox[{"d4", "\[Rule]", "d"}], ",", 
   RowBox[{"y5", "\[Rule]", 
    RowBox[{"5", " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]", "+", "\[Delta]", "-", 
       RowBox[{"\[Gamma]", " ", "\[Delta]"}]}], ")"}]}]}], ",", 
   RowBox[{"d5", "\[Rule]", "d"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.740807886336627*^9, 3.74080800670107*^9, {3.740808038219584*^9, 
   3.740808056403715*^9}, 3.740808128431374*^9, 3.7408081614543324`*^9, 
   3.7408083356986217`*^9, 3.740808537229115*^9, 3.740808783523735*^9, 
   3.74080900473908*^9, 3.740869565086899*^9, 3.7408696242781887`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bethe", "Section",
 CellChangeTimes->{{3.740795480001512*^9, 3.740795481266691*^9}, {
  3.740795553392569*^9, 3.740795553831991*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bEF", " ", "=", " ", 
   RowBox[{"Experimental`CreateNumericalFunction", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", "g", ",", " ", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"TGBE", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"randRulesAllDelta", ",", " ", "specificRules"}], "}"}], 
         "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Delta]", "\[Rule]", "0"}], ",", " ", 
         RowBox[{"\[Gamma]", "\[Rule]", "g"}]}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"{", "1", "}"}], ",", " ", 
     RowBox[{"Compiled", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bEF", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0.5"}], "}"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bEF", "[", "\"\<CompiledFunction\>\"", "]"}], "[", 
   RowBox[{"1", ",", "0.5"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.740796850106723*^9, 3.740796855130707*^9}}],

Cell[BoxData[
 TemplateBox[{
  "CompiledFunction","cfct",
   "\"Number of arguments \\!\\(\\*RowBox[{\\\"2\\\"}]\\) does not match the \
length \\!\\(\\*RowBox[{\\\"3\\\"}]\\) of the argument template.\"",2,87,2,
   30427704386071445647,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7408090048063917`*^9, 3.740869565353518*^9, 
  3.740869624437237*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"betheEquationsF", "[", 
    RowBox[{"k_", ",", "g_", ",", " ", "d_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"TGBE", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "/.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"randRulesAllDelta", ",", " ", "specificRules"}], "}"}], 
      "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Delta]", "\[Rule]", "0"}], ",", " ", 
      RowBox[{"\[Gamma]", "\[Rule]", "g"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"bECompiled", " ", "=", " ", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", " ", "g"}], "}"}], ",", " ", 
    RowBox[{"betheEquationsF", "[", 
     RowBox[{"k", ",", "g"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rationalGammas", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "3", ",", " ", 
     FractionBox["1", "100"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"momenta", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "10", ",", "0.01"}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 5.289294374999999}, {
             11.960858124999998`, 8.29796625}, {11.080858124999999`, 
             8.29796625}, {12.417186249999999`, 4.337966249999999}, {
             13.193201874999998`, 4.337966249999999}, {14.540701874999998`, 
             8.29796625}, {13.688201874999999`, 8.29796625}, {12.82453, 
             5.289294374999999}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
             "]]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
         GridBox[{
           {
            RowBox[{
             TagBox["\<\"Argument count: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["2",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Argument types: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               PaneBox[
                RowBox[{"{", 
                 RowBox[{"_Real", ",", "_Real"}], "}"}],
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 5.289294374999999}, {
             11.960858124999998`, 8.29796625}, {11.080858124999999`, 
             8.29796625}, {12.417186249999999`, 4.337966249999999}, {
             13.193201874999998`, 4.337966249999999}, {14.540701874999998`, 
             8.29796625}, {13.688201874999999`, 8.29796625}, {12.82453, 
             5.289294374999999}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
             "]]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
         GridBox[{
           {
            RowBox[{
             TagBox["\<\"Argument count: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["2",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Argument types: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               RowBox[{"{", 
                RowBox[{"_Real", ",", "_Real"}], "}"}],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Variables: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"k", ",", "g"}], "}"}],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expression: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               RowBox[{"betheEquationsF", "[", 
                RowBox[{"k", ",", "g"}], "]"}],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{10, 11., 5468}, {
    Blank[Real], 
    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}}, {}, {0, 0, 3, 0, 
   0}, {{47, $CellContext`betheEquationsF, 3, 0, 0, 3, 0, 1, 3, 0, 2}, {1}}, 
   Function[{$CellContext`k, $CellContext`g}, 
    $CellContext`betheEquationsF[$CellContext`k, $CellContext`g]], Evaluate],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.740795749719866*^9, 3.740796745458145*^9, 3.7407969948006163`*^9, 
   3.7408075746812887`*^9, 3.7408078866948433`*^9, 3.740808007131825*^9, {
   3.740808038708157*^9, 3.740808056595557*^9}, 3.740808128963291*^9, 
   3.7408085381013813`*^9, 3.740808783982149*^9, 3.7408090048589373`*^9, 
   3.740869565521055*^9, 3.740869624627219*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solve Bethe", "Section",
 CellChangeTimes->{{3.7407955570494633`*^9, 3.740795559258945*^9}, {
  3.7407966163332577`*^9, 3.7407966174112797`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Delta", " ", "=", " ", "0"}], "\[IndentingNewLine]", 
   RowBox[{"GGamma", " ", "=", "0"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", "500"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"rootPt", "=", 
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"TGBE", "//.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"specificRules", ",", " ", 
            RowBox[{"\[Delta]", "\[Rule]", "Delta"}], ",", 
            RowBox[{"\[Gamma]", "\[Rule]", "GGamma"}], ",", " ", 
            "randRulesAllDelta"}], "}"}], "]"}]}], ")"}], "&&", 
       RowBox[{"k", " ", ">", " ", "0"}], " ", "&&", " ", 
       RowBox[{"k", " ", "<", "10"}]}], ",", "k", ",", " ", "Reals", ",", " ", 
      RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"ntoplot", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "rootPt", "]"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.740796051955172*^9, 3.740796053084392*^9}, {
   3.740796620097471*^9, 3.740796631963488*^9}, {3.740796708320197*^9, 
   3.740796708384719*^9}, {3.740796975864541*^9, 3.740796976246089*^9}, {
   3.74080858120152*^9, 3.7408085993096933`*^9}, 3.7408087799800177`*^9, 
   3.740808937158105*^9, {3.740809250763775*^9, 3.7408092558291597`*^9}, {
   3.740811910047241*^9, 3.740811931327175*^9}, {3.740812000708723*^9, 
   3.740812001008849*^9}, {3.74081271966619*^9, 3.740812720178039*^9}, 
   3.740869619343307*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.740795749851672*^9, 3.7407960540180264`*^9, 3.740796745493182*^9, {
   3.740796977094413*^9, 3.740796994868026*^9}, 3.740807574719322*^9, 
   3.740807886829508*^9, 3.7408080074169607`*^9, {3.740808038840042*^9, 
   3.7408080566073313`*^9}, 3.740808129156541*^9, 3.740808189149024*^9, 
   3.7408085384064007`*^9, {3.74080858353026*^9, 3.7408086001380463`*^9}, 
   3.740808784197687*^9, 3.7408090048661633`*^9, 3.7408092563503103`*^9, {
   3.740811913724595*^9, 3.740811931621716*^9}, 3.7408120113950453`*^9, 
   3.740812720988305*^9, 3.7408695657210827`*^9, 3.740869624731839*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.740795749851672*^9, 3.7407960540180264`*^9, 3.740796745493182*^9, {
   3.740796977094413*^9, 3.740796994868026*^9}, 3.740807574719322*^9, 
   3.740807886829508*^9, 3.7408080074169607`*^9, {3.740808038840042*^9, 
   3.7408080566073313`*^9}, 3.740808129156541*^9, 3.740808189149024*^9, 
   3.7408085384064007`*^9, {3.74080858353026*^9, 3.7408086001380463`*^9}, 
   3.740808784197687*^9, 3.7408090048661633`*^9, 3.7408092563503103`*^9, {
   3.740811913724595*^9, 3.740811931621716*^9}, 3.7408120113950453`*^9, 
   3.740812720988305*^9, 3.7408695657210827`*^9, 3.740869624733205*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "0.6282933989821316399973304690037704665`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "0.62831853071795864769253021008301894786`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "1.25658679796505691365421264415940594675`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "1.25663706143591729538506042016603173274`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "1.88488019694956945447198831876392655774`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "1.88495559215387594307758602996901993902`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "2.51317359593646289565752049024866491497`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "2.51327412287183459077012084033200183572`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "3.14146699492653086996503223004900056092`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "3.1415926535897932384626433832795028842`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "3.76976039392056700954723324987529439658`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "3.76991118430775188615517205993803987803`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "4.39805379291936494580502670377716714`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "4.3982297150257105338477007365935909968`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "5.02634719192371830923704413051114329706`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "5.02654824574366918154024168066351063337`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "5.65464059093442072928944104007589187632`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "5.65486677646162782923277222425862859643`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "6.28293398995226583420536883337051388063`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "6.2831853071795864769252867665590057684`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "6.91122738897804725087464520912121506938`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "6.91150383789754512461781544321500661096`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "7.53952078801255860468345691329826063947`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "7.53982236861550377231034411987607975606`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "8.16781418705659351936393719443158001213`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "8.16814089933346242000287279652650327895`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "8.79610758611094561684383783270461020967`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "8.7964594300514210676954014731871819936`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "9.42440098517640851709605609207301640325`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "9.42477796076937971538793865426816237421`20."}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.740795749851672*^9, 3.7407960540180264`*^9, 3.740796745493182*^9, {
   3.740796977094413*^9, 3.740796994868026*^9}, 3.740807574719322*^9, 
   3.740807886829508*^9, 3.7408080074169607`*^9, {3.740808038840042*^9, 
   3.7408080566073313`*^9}, 3.740808129156541*^9, 3.740808189149024*^9, 
   3.7408085384064007`*^9, {3.74080858353026*^9, 3.7408086001380463`*^9}, 
   3.740808784197687*^9, 3.7408090048661633`*^9, 3.7408092563503103`*^9, {
   3.740811913724595*^9, 3.740811931621716*^9}, 3.7408120113950453`*^9, 
   3.740812720988305*^9, 3.7408695657210827`*^9, 3.740869624766814*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", 
   "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", "28", 
   ",", "29", ",", "30"}], "}"}]], "Output",
 CellChangeTimes->{
  3.740795749851672*^9, 3.7407960540180264`*^9, 3.740796745493182*^9, {
   3.740796977094413*^9, 3.740796994868026*^9}, 3.740807574719322*^9, 
   3.740807886829508*^9, 3.7408080074169607`*^9, {3.740808038840042*^9, 
   3.7408080566073313`*^9}, 3.740808129156541*^9, 3.740808189149024*^9, 
   3.7408085384064007`*^9, {3.74080858353026*^9, 3.7408086001380463`*^9}, 
   3.740808784197687*^9, 3.7408090048661633`*^9, 3.7408092563503103`*^9, {
   3.740811913724595*^9, 3.740811931621716*^9}, 3.7408120113950453`*^9, 
   3.740812720988305*^9, 3.7408695657210827`*^9, 3.740869624769897*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kList", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"k", "/.", 
     RowBox[{"rootPt", "[", 
      RowBox[{"[", "#", "]"}], "]"}]}], "&"}], "/@", "ntoplot"}]}]], "Input",
 CellChangeTimes->{{3.740811941889061*^9, 3.740812005199664*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6282933989821316399973304690037704665`20.", ",", 
   "0.62831853071795864769253021008301894786`20.", ",", 
   "1.25658679796505691365421264415940594675`20.", ",", 
   "1.25663706143591729538506042016603173274`20.", ",", 
   "1.88488019694956945447198831876392655774`20.", ",", 
   "1.88495559215387594307758602996901993902`20.", ",", 
   "2.51317359593646289565752049024866491497`20.", ",", 
   "2.51327412287183459077012084033200183572`20.", ",", 
   "3.14146699492653086996503223004900056092`20.", ",", 
   "3.1415926535897932384626433832795028842`20.", ",", 
   "3.76976039392056700954723324987529439658`20.", ",", 
   "3.76991118430775188615517205993803987803`20.", ",", 
   "4.39805379291936494580502670377716714`20.", ",", 
   "4.3982297150257105338477007365935909968`20.", ",", 
   "5.02634719192371830923704413051114329706`20.", ",", 
   "5.02654824574366918154024168066351063337`20.", ",", 
   "5.65464059093442072928944104007589187632`20.", ",", 
   "5.65486677646162782923277222425862859643`20.", ",", 
   "6.28293398995226583420536883337051388063`20.", ",", 
   "6.2831853071795864769252867665590057684`20.", ",", 
   "6.91122738897804725087464520912121506938`20.", ",", 
   "6.91150383789754512461781544321500661096`20.", ",", 
   "7.53952078801255860468345691329826063947`20.", ",", 
   "7.53982236861550377231034411987607975606`20.", ",", 
   "8.16781418705659351936393719443158001213`20.", ",", 
   "8.16814089933346242000287279652650327895`20.", ",", 
   "8.79610758611094561684383783270461020967`20.", ",", 
   "8.7964594300514210676954014731871819936`20.", ",", 
   "9.42440098517640851709605609207301640325`20.", ",", 
   "9.42477796076937971538793865426816237421`20."}], "}"}]], "Output",
 CellChangeTimes->{3.740812014166662*^9, 3.740812749011032*^9, 
  3.740869566084934*^9, 3.74086962487283*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Check", "?"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"d", "=", "100"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"TGBE", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "//.", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"specificRules", ",", " ", 
          RowBox[{"\[Delta]", "\[Rule]", "Delta"}], ",", 
          RowBox[{"\[Gamma]", "\[Rule]", "GGamma"}], ",", " ", 
          "randRulesAllDelta", ",", " ", 
          RowBox[{"rootPt", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "]"}]}], ")"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "rootPt", "]"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.740795583898473*^9, 3.7407955891982393`*^9}, {
  3.740808692274308*^9, 3.740808693373208*^9}, {3.740811856264716*^9, 
  3.740811859536805*^9}}],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{3.740811860917959*^9, 3.740869566202909*^9, 
  3.740869624971053*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "-", "0.00001968452561495039931596316647748225`15.358949984701725"}], ",", 
   "0``20.210920789851308", ",", 
   RowBox[{
   "-", "0.00125980957968402832901330869006376684`15.358949999394047"}], ",", 
   "0``18.404740815867424", ",", 
   RowBox[{"-", "0.014350017360737769535838454348821019`15.35895002388126"}], 
   ",", "0``17.34819326153334", ",", 
   RowBox[{
   "-", "0.08062779782354535591912594064215217126`15.358950058163357"}], ",", 
   "0``16.598560841883536", ",", 
   RowBox[{
   "-", "0.3075705961852066493470835156256137739`15.358950102240351"}], ",", 
   "0``16.0171007638352", ",", 
   RowBox[{
   "-", "0.91840071957424229230389470550457370949`15.358950156112227"}], ",", 
   "0``15.54201328754945", ",", 
   RowBox[{
   "-", "2.31586299896331791761461808522609592277`15.358950219779002"}], ",", 
   "0``15.140332549765771", ",", 
   RowBox[{
   "-", "5.16017514999509850742171094163523865609`15.358950293240683"}], ",", 
   "0``14.792380867899649", ",", 
   RowBox[{
   "-", "10.46115076377966906441527956242239056306`15.358950376497258"}], ",",
    "0``14.485465733215362", ",", 
   RowBox[{
   "-", "19.68449484621099583201726410345734297465`15.358950469548754"}], ",",
    "0``14.210920789851311", ",", 
   RowBox[{
   "-", "34.87227181181905610166988012086792534795`15.358950572395162"}], ",",
    "0``13.96256467890196", ",", 
   RowBox[{
   "-", "58.77754582564355199902089266797448255292`15.358950685036497"}], ",",
    "0``13.735833313565562", ",", 
   RowBox[{
   "-", "95.01319337408456237260366094329573462313`15.35895080747276"}], ",", 
   "0``13.527260676010293", ",", 
   RowBox[{
   "-", "148.21488793315509475695235426666094558936`15.358950939703966"}], 
   ",", "0``13.334152575781884", ",", 
   RowBox[{
   "-", "224.21825659003029429051806654913682186614`15.358951081730119"}], 
   ",", "0``13.154373235517223"}], "}"}]], "Output",
 CellChangeTimes->{3.740811860917959*^9, 3.740869566202909*^9, 
  3.740869625117187*^9}]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.740808698871798*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.740796406041025*^9, 3.740796431748755*^9}, {
  3.740796592838749*^9, 3.740796612035474*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{"TGBE", "//.", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"specificRules", ",", " ", 
      RowBox[{"\[Delta]", "\[Rule]", "Delta"}], ",", 
      RowBox[{"\[Gamma]", "\[Rule]", "GGamma"}], ",", " ", 
      "randRulesAllDelta"}], "}"}], "]"}]}], ")"}]], "Input",
 CellChangeTimes->{{3.7408087030799723`*^9, 3.7408087040007343`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2000", " ", 
    SuperscriptBox["k", "4"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"5", " ", "k"}], "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["k", "5"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"10", " ", "k"}], "]"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.7408087845595493`*^9, 3.740809005311536*^9, 
  3.740869567782992*^9, 3.74086962528963*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2000", " ", 
    SuperscriptBox["k", "4"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"5", " ", "k"}], "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["k", "5"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"10", " ", "k"}], "]"}]}]}], "\[Equal]", "0"}]], "Input",
 CellChangeTimes->{{3.7408087150828857`*^9, 3.7408087166496897`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2000", " ", 
    SuperscriptBox["k", "4"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"5", " ", "k"}], "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["k", "5"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"10", " ", "k"}], "]"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.740808784663027*^9, 3.7408090053455677`*^9, 
  3.740869567901506*^9, 3.7408696253883953`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TGBE", ";"}], "\[IndentingNewLine]", 
 RowBox[{"Betheeq", " ", "=", " ", 
  RowBox[{"TGBE", "//.", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"specificRules", ",", " ", 
      RowBox[{"\[Delta]", "\[Rule]", "Delta"}], ",", 
      RowBox[{"\[Gamma]", "\[Rule]", "GGamma"}], ",", " ", 
      "randRulesAllDelta"}], "}"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.740808846961192*^9, 3.740808917366557*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2000", " ", 
    SuperscriptBox["k", "4"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"5", " ", "k"}], "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["k", "5"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"10", " ", "k"}], "]"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.740808918546568*^9, {3.740808990580139*^9, 3.740809005382618*^9}, 
   3.7408695680178947`*^9, 3.740869625492593*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"5", " ", "k"}], "]"}], "2"], "+", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"10", " ", "k"}], "]"}]}], " ", "\[Equal]", " ", "0"}], " ", "&&",
     " ", 
    RowBox[{"k", ">", "0"}], " ", "&&", " ", 
    RowBox[{"k", "<", " ", "2"}]}], ",", " ", "k", ",", " ", "Reals", ",", 
   " ", 
   RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.740809628460231*^9, 3.740809678011891*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "0.40688878715914054708911841251015072476`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "0.62831853071795864769252867665590057684`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "1.0352073178770991947816448491998946339`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "1.25663706143591729538505735331180115368`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "1.66352584859505784247417294025086364909`20."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", "\[Rule]", "1.88495559215387594307758602996770173052`20."}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.74080967883605*^9, 3.740869568135561*^9, 
  3.740869625694909*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"10", 
    RowBox[{"Sin", "[", "x", "]"}]}], " ", "+", " ", 
   RowBox[{"Cos", "[", "x", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.740810347795682*^9, 3.74081039549189*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "x", "]"}], "+", 
  RowBox[{"10", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.740810385349847*^9, 3.740810395918477*^9}, 
   3.740869568257038*^9, 3.7408696257970552`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "d", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"points", " ", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"k", ",", " ", "d"}], "}"}], "/.", 
        RowBox[{"NSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"TGBE", "//.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"specificRules", ",", " ", 
                RowBox[{"\[Delta]", "\[Rule]", "Delta"}], ",", 
                RowBox[{"\[Gamma]", "\[Rule]", "GGamma"}], ",", " ", 
                "randRulesAllDelta"}], "}"}], "]"}]}], ")"}], "&&", 
           RowBox[{"k", " ", ">", " ", "0"}], " ", "&&", " ", 
           RowBox[{"k", " ", "<", "2"}]}], ",", "k", ",", " ", "Reals", ",", 
          " ", 
          RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}]}], ",", " ", 
       
       RowBox[{"{", 
        RowBox[{"d", ",", " ", "0.1", ",", " ", "200", ",", " ", "1"}], 
        "}"}]}], "]"}], ",", "  ", "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.730154166000918*^9, 3.730154167255321*^9}, {
   3.730154227062542*^9, 3.730154307789113*^9}, {3.730154338949342*^9, 
   3.730154346700512*^9}, 3.73015438707931*^9, {3.730154486187892*^9, 
   3.730154486371168*^9}, {3.730154697841671*^9, 3.7301547061768847`*^9}, 
   3.730155024664363*^9, {3.730156038812134*^9, 3.730156038979279*^9}, {
   3.730498746444242*^9, 3.730498758904189*^9}, {3.7408087241144543`*^9, 
   3.740808775568102*^9}, {3.740808865024892*^9, 3.7408088802014914`*^9}, {
   3.740809168449565*^9, 3.74080917799209*^9}, 3.740809278448841*^9, {
   3.740809317891489*^9, 3.740809324885241*^9}, {3.7408093825452013`*^9, 
   3.740809424791409*^9}, {3.7408094549360743`*^9, 3.740809470572191*^9}, {
   3.7408118671411467`*^9, 3.7408118812919292`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"butterflyValues", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], "/@", " ", 
    "points"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"butterflyValues", ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", "1.5"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.730155029447426*^9, 3.730155033461672*^9}, {
  3.7301550722866983`*^9, 3.730155078263015*^9}, {3.73015511667907*^9, 
  3.730155158860035*^9}, {3.730155190244938*^9, 3.7301552411729097`*^9}, {
  3.730155279667742*^9, 3.730155297427355*^9}, {3.730155334492549*^9, 
  3.7301553620039988`*^9}, {3.730155401986516*^9, 3.730155449026932*^9}, {
  3.730155493745516*^9, 3.730155525616485*^9}, {3.7301555748967543`*^9, 
  3.7301555914883337`*^9}, {3.730155653073736*^9, 3.730155671563429*^9}, {
  3.730155706337302*^9, 3.730155767767106*^9}, {3.730155993902907*^9, 
  3.7301560090844173`*^9}, {3.7301562760975313`*^9, 3.730156288921232*^9}, {
  3.730156443108206*^9, 3.730156472006741*^9}, {3.730164660801498*^9, 
  3.730164661537053*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJx13Hd0zuf/BvAUXwSlZEkEIfJ8lNpJ1Z5Rq/ZMrCStolas2pvau9QmiBWz
9qxZajRGKVU1HrEJbqXI7Xd/v79f7vO7vtfzfv5xXue8/7jOfa5znec8J0eh
2F7Nvsrg5eXV0dvL69//Lpj/78/uaj9vGLvx8Nsb1STfSF00oFQ+t+hBOwfd
Du/3TPT/3ivRg26e3V766hvRTbo+LPNzUf1/fkbeUzdfUvuDt0VjXvaRjlUO
rDr4QjTmZffqtDS82LI00el5z5z+98er+n87cuPdkJUPbotOzyu5U9yWBxsf
vBCdnlfyidTMlQvdSBONebOSN7Ut97TMm9uiMS/77O4hLSPevBCNedn3fv9p
SJtXaaLT83b+z+cj8uNsUf3KZXCLTs8reeNNv6fhGZTo9LySb8d3y9s8oxaN
eX3J/StmneibxS0a87JvH13YyC+LEo152R/8MuL28mxaNObNS86fcHVg+2xu
0ZiX/fD68kftsynRmJfda2W1TNNyadGYN5h8LDb60z053KIxL7to5KMRe3Io
0ZiXfTzf3m/z+mjR6XnL/ecTQr7l8s04OqdbdHpeyYVvbAkfnVOJTs8reYZ3
jlNH/LRozFuYrHZ1u3Ynl1s05mWf/qrP+zu5lGjMy+65dXerKwFaNOYtQi72
MjAuY263aMzL/vPPA0Mz5laiMS/77uTyQ8YFatGY10VufHfX9Mc2LxvzsluV
zLnisc3Lxrzs8rPvrXQHadGYtyg5Q/GCebfkcYvGvGyfL3I6W/Io0ZiX/WHO
B395B2vRmLcYecS4j8+38nGLxrzsvclP/2zlo0RjXnbM8lbdMuTXojHvJ+Tu
md7kuWPzsjEvu0Lf7sF3bF425mUHlap++HJ+LRrzliR3jL48upOvWzTmZU8v
MXFSJ18lGvOyp9/3vj2jgBYN35cDS5PznCmdcNrXLRq+L3vwvfhJa077KtHw
fdmDqwzZlKNcQS0a85YhZxqQKeQTP7dozMuesKZp2Cd+SjTmZWerVSnycEEt
GvOWJaekrPUZZfOyMS+7TGLhvKNsXjbmZTfdELOpRogWjXnLkcdWHFzkjM3L
xrzspYl1i56xedmYl/30buqxH0O0aMwbTl7yy8pVuf3dojEv+27u+2ty+yvR
mJf9YfiEcUGFtGjMG0G+eCPfusY2LxvzsqNTnyQ1tnnZmJe9+23/Sd8W0qIx
76fk5rcCfSbYvGzMyx5RZ7rfBJuXjXnZ81oMdZ0upEVj3vLksZduLthr87Ix
L3v5R96L99q8bMzLPrj4ae/Awlo05v2MvKHShWsPbF425mXP3bXr+gObl415
2TmPnG/WqbAWjXkrkANfTo/2D3CLxrzsh4eqtPcPUKIxLzspKNeM5YW1aMxb
kXxt465xVW1eNuZlh77/9LuqNi8b87IXVZ929s/CWjTmrUSumXXx7jibl415
2ZcXPN8TZ/OyMS874NyhhX6hWjTmrUzeWa9w3fE2Lxvzsr/a3qLeeJuXjXnZ
8/Om9a4XqkVj3irksj65v020edmYl/3DB2EDE21eNuZl9212f8egUC0a81Yl
/zD78eijNi8b87LPPUkZc9TmZWNe9vPj9U4khmrRmLcaOdP2fstu2LxszMtu
f6rV8hs2LxvzsgM6l1fJoVo0/F6bozq5jt/5tDcBbtHwe60H992+VL8JUKLh
91oPLrPk2YjXoVo05J3CLnB58RGfvG7RkNeDF3Vue9QnrxINeT14jo5ak7+I
Fo3vXYNc9dwGv+LpeT0Y35vdqENb/+LpeT0Y35vd4lHZFdWLaNH43uw1Xkd8
atj3ZuN7s4806eRbw743G9+bfe1g4LKYIlo0vndN8mfFg662tO/Nxvdmnzu+
ztwr0fje7Jsbup4cWUSLxvdmdyh0Z1RX+95sfG/20PbdRne1783G92a3Xv6o
9pIiWjS+dy1y2v3NhYba92bje7PzphYvPNS+Nxvfmx0zoH/4niJaNL43O7Hm
vjNT7Xuz8b3ZJQJKnp1q35uN780uvT1mx8UiWjS+d21yidI1flhi35uN781+
uHOduVei8b3ZvVOypDwuokXje7MbXvhx5kb73mx8b/bdy36zNtr3ZuN7s9ed
9bv2rzAtGt87kpyp/usT++17s/G92ceHNT+53743G9+b3bPKzY3BYVo0vjf7
p9wzG5y2783G92b/lCfF3CvR+N5s3yUb+pQN06LxveuQFwb9HHbVvjcb35sd
39/fddW+Nxvfm30kz70Kn4dp0fje7IHjT8fete/Nxvdmj9jlH3fXvjcb35vd
YWa0X3SYFo3v/Tn54q2rOZR9bza+Nzu4XciHyr43G9+b/fqzDr49w7RofG92
u4lflPAKdIvG92Y32zjN3CvR+N7scTdf1x4ZpkXje9clj92x63T29LwejO/N
bn/zpblXovG92Zf3eW+bGaZF43uzw86mPfe3783G92YHNin/wt++Nxvfm713
X2yPhDAtGt+7Hvl92farC9n3ZuN7s5u3nG3ulWh8b/bklu4hW8O0aHxvtm/m
8anF7Xuz8b3Z3tl3m3slGt+bvT34+/uHwrRofO/65Az+Ky9G2Pdm43uzF1W4
aO6VaHxvdrlNOw4mh2nR+N7sqErd21az783G92bn2Tbf3CvR+N7sHZV+z/xX
mBaN792AXLaVM7aufW82vjd7Vstm5l6JxvdmL9Epxx+FadH43uw+gfvaNrXv
zcb3Zs8/7Tb3SjS+N3vp88pZ3oRp0fjeDcnZf9l5va19bza+N9uJum7ulWh8
b3b00w1nM7u0aHxvtpdPq4BY+95sfG/2tlWDzb0Sje/NLv717FAflxaN7/0F
eVy2CVm62fdm43uzax9eZ+6VaHxvdsKTS9kLurRofG/2gZFvtsbb92bje7ML
Dsv3Y7x9bza+N3vs1rdTirm0aHzvRuSoDfnyD7Lvzcb3ZnfMXsncK9H43myv
d66kCJcWje/NHtgopN5I+95sfG/26aJVzb0Sje/NfnLd6VndpUXjezcmP6yb
teJ39r3Z+N7sgruKmHslGt+bna/Y8Mv1XVo0vjf79eWE51Pte7Pxvdlbnu83
90o0vjf7yMZOj1q4tGj4e9XMTch728zqPyfQLTo9r+Sb5ZLMvRKdnlfy4meH
N3dwadGQtw47YF/jYwvS83ow5PVg3a2LuVeiIa8HJ7WMKtrFpUVD3vHsH9aU
cC9Lz+vBkNeDQ6tEmnslGvJ6sNevCa3iXVo05D3OXtsi+mJiel4Phrwe3P2v
eHOvRENeD/7n49tVB7u0aOx7U/LgkLvzkmzf2dh39sXN78y9Eo19Z+d5Xto9
2qVFY9/Zef7+qfRW23c29p3dcMFv5l6Jxr6z//6gX73JLi0a+87+sv++ZTtt
39nYd/bRisnmXonGvrOnHOsaP9ulRWPf2T2fzbq/z/adjX1nN3WvMvdKNPad
vTJiTYeFLi0a+96MnLXWnRyHbd/Z2Hd2as9X5l6Jxr6zQ+Ys81nh0qKx7+zo
/lVy/Gz7zsa+szPdaWTulWjsOzvhyfJZ61xaNPadvbnxR/dP2b6zse/skA8L
mXslGvvOrtLjjz+3uLRo7Dv75MEDK5Nt39nYd3a7i2fNvRKNfWc/j+/wapdL
i8a+NycnOvOq/2b7zsa+swssSjT3SjT2nd18asjNgy4tGvvOjpp5af8V23c2
9p39oMcdc69EY9/Z1RumLTru0qKx7+xPT63Nf932nY19Z08O2GXulWjsO7vg
rZ2fnHFp0dh39tc9S8bcsn1nY9/Z28pUNvdKNPadfXLru5kXXFo09r0F+dG5
vhNTbN/Z2Hf2izyjzL0SjX1nvzoQe/aKS4vGvrNnPxwy74HtOxv7zk7aPMHc
K9HYd/bul91v/+XSorHv7HEhlac8sX1nY9/Zq3rVNfdKNPadXbvH5PN3XFo0
9p19OPOSLs9t39nYd/Z3d9aaeyUa+84uPS548UOXFo19b0n+Pe/IEn/bvrOx
7+wJUyabeyUa+87WL3rUfubSorHv7Nvtdvzxj+07G/vO/rbbIXOvRGPf2csO
7T/5t0uLxr6zX77P1i/N9p2NfWfnT/Iz90o09p09pXSlku9cWjT2nX0speor
ryC3aOw7+0lEPXOvRGPf2cfnZun7gaNFY99bkceHZ+ucKT2vB2Pf2X8U8zX3
SjT2nR1YtPz8zI4WjX1nJ54IPpQlPa8HY9/Zgd1c5l6Jxr6zf9p6bnl2R4vG
vrMjthXwzp6e14Ox7+wRmYqaeyUa+87u1/jC1I8cLRr7zp60enPVnLbvbOw7
u8y63eZeica+s+/9q0QHP0eLxr63Jh9v0z02t+07G/vOLpS7v7lXorHv7Omd
j/kEOVo09p19+La7n6/tOxv7zn7V4rG5V6Kx7+z+QYM2FXC0aOw7+3zo6gEB
tu9s7LsHN9lk7pVs6Dv7Wdd8ZUMdLRr7zn6SpWKXINt3Nvadvf5FDXOvRGPf
2Zf2DFjkOFo09r0NedrNAvXz276zse/s9dNc5l6Jxr6zj2X+4mlxR4vGvrM3
bzwXHGL7zsa+s3cXvGLulWjsO7t4/TbFSztaNPad/UXHkzcK276zse/szXOT
zb0SjX1nD3tUv2m4o0Vj39mr/QfODbN9Z2Pf2Vv8R5h7JRr7zg4pnBzzmaNF
Y9/bkpd0aVC1qO07G/vOHlGumblXorHv7N51p7Sv7GjR2Hd2z9lJvxezfWdj
39mVi/9o7pVo7Ds7qnL+yOqOFo19Z2fc4dW5hO07G/vO3hWcxdwr0dh39uX1
QYG1HS0a+84ulHFtSinbdzb2nb284iZzr0Rj39kbY/2vfu5o0dj3KHLCswzR
ZW3f2dh39q63Wc29Eo19Z5+YtWhCA0eLxr6z73ftciTc9p2NfWc3qNvT3CvR
2Hd2XN7wsMaOFo19Z59MLRVS3vadjX1nB66KMPdKNPad/c2eDpubOVo09p2d
OTkpvoLtOxv7zj4fvdXcK9HYd3b5r+cXa+Vo0dj3aPLMyqV2VbJ9Z2Pf2S2X
h5t7JRr7zn7Qo92cto4WjX1nbxqcSVWxfWdj39mXd3ubeyUa+85etS3fk3aO
Fo19Zzte34ZVt31nY9/ZH+Ybau6VaOw7O/lhnc86OVo09p09a87ZhjVt39nY
d/aoKRfMvRKNfWd/f6Be3zhHi8a+tyO/6dWkW23bdzb2nV2yTktzr0Rj39k/
e01Z2tnRorHv7OTW1YbXsX1nY9/ZAz+sbe6VaOw7u83V+P1dHS0a+86O2fPH
hLq272zsO3tpkxvmXonGvrMnpEaf6e5o0dh39vUTcZPq276zse/s49W7mHsl
GvvOfjJl9a+9HC0a+96enHmGz5iGtu9s7Ds74UGAuVeise/sQYc3Hu3jaNHY
d/asXGF9G9m+s7HvHvzFx+ZeyYa+s2fNOJHU39Gise/snk2So5rYvrOx7+yY
vhfNvRKNfWfHZ6o3YaCjRWPf2b8NalCxme07G/vObjW6sblXorHv7CNtRrUe
4mjR2PcO5Kg7v+RuYfvOxr6z6108a+6VaOw7+5DPT0HDHS0a+85+W2bUzZa2
72zsO7tk1nHmXonGvrOPhjY9P9LRorHv7Gqtlq5tbfvOxr6zx/quMPdKNPad
Hf9m2PAxjhaNfWfHb2nRra3tOxv7zp7apo25V6Kx7+z5iVMLjne0aOx7R7J3
8K+h0bbvbOw7e0/SeXOvRGPf2cmPjm6f4GjR2Hd2g1cVL7WzfWdj39mf96lq
7pVo7Dv7rw6da0x2tGjsO9upfGRUB9t3NvadHZxw3Nwr0dh3ds4+Ww9PdbRo
7Du708SZrk6272zsO/vV1TnmXonGvrO/mXO3wgxHi07P+5//DjRjJ3LeMmeP
xgS5Rafnlfy85zlzr0Sn55Wco0bN1bMcLRryhrLXRi5rF5ee14MhrwfH9l5h
7pVoyOvBHX3Ssn3vaNGQtxb7xaoST75Mz+vBkNeDQw6UNvdKNOT14CVXmnw1
z9GiIW8c28974aDO6Xk9GPJ6cGSuJeZeiYa8Htwhsd+O+Y4WDXnHsBd553j/
dXpeD4a8Hhylc5p7JRryenDMzcV6oaNFQ94V7PKlVwzvmp7XgyGvB2f1TTT3
SjTk9eC5rb2qLnG0aMh7hP0gbdTrbul5PRjyenDjc2PNvRINeT24d/2z/ZY5
WjTkvc0+9/JE9+7peT0Y8npw5O5T5l6Jhrwe/N3wz1YkOFo07n0MuW/ivD96
2L1n496zu0ctMPdKNO49e2a9nidXOlo07j17w9Yckb3s3rNx79lLW+cy90o0
7j371NLFdxMdLRr3nl3xauTa3nbv2bj37Nm965p7JRr3nr0v5EXaGkeLxr1n
X/+gU9Y+du/ZuPds70mx5l6Jxr1nDw5dkGO9o0Xj3rMjKn0b29fuPRv3nj1/
+yBzr0Tj3rM7Ht7ns8HRonHv2SVOJ+7sZ/eejXvPLllhrblXonHv2bVTxvhs
crRo3Ht2xKfeWQfYvWfj3rPLzM1u7pVo3Ht2taYBObY4WjTuPduvyq7m39q9
Z+Pes7vO2GPulWjce3bqmsVpWx0tGvc+ljz28ekFA+3es3Hv2ZPCfzX3SjTu
PbvDyMr3tjlaNO49e8iKjn8OsnvPxr1nT7weY+6VaNx7du+YvKd3OFo07j27
4kcT8g2xe8/GvWevqDbJ3CvRuPfsd7+1WLvL0aJx79n5qrdvOdTuPRv3nl36
y47mXonGvWcP7e07co+jRePeswstezlpmN17Nu49u9TuV+Zeica9Z3e7OLDJ
PkeLxr1nN8r49b7hdu/ZuPfs5bm7mnslGveeXeNAQtABR4vGvWefXH38/gi7
92zce/ba9SfMvRKNe88umX3r9YOOFo17zz5a6WOfUXbv2bj37IERxc29Eo17
zx7w07FFhxwtGvc+jlz1VsJno+3es3Hv2dnOrzT3SjTuPXtKnnctjjhaNO49
e1L5z6PG2L1n496zN+evZ+6VaNx79p1v+mQ55mjRuPfsLS0/HjjW7j0b957d
q2xxc69E496zx/SN3Hbc0aJx79lLf4+eNc7uPRv3nh2R1N7cK9G49+xIn5nR
JxwtGvee/emt1DXj7d6zce/ZfyU9N/dKNO49+/mw3mknHS0a955drMCbvd/Z
vWfj3rML3Hhr7pVo3Hv2RxF6/ilHi8a9Z+87NuHUBLv3bNx7dsSISeZeica9
Zw/P2aLMGUeLxr1nR6/YcHmi3Xs27j17WotN5l6Jxr1nX6ow+chZR4vGvf+S
nMt/0I1Jdu/ZuPfssgcHm3slGveevSJyX5NkR4vGvWdf8X17Z7LdezbuPbvg
jnfmXonGvWdHFXn/+zlHi8a9Z98sU+veFLv3bNx79qBTtc29Eo17zy5X5pt2
FxwtGveePW1xp7tT7d6zce/Z60rFmnslGveefTQ84I+LjhaNe88e83Hs7Wl2
79m49+ym2+LMvRKNe88e1jWw5SVHi8a9Z49o0OradLv3bNx79ie/tjb3SjTu
Pfv5iO9+uexo0bj37OCQBudn2L1n496zLy5qaO6VaNx7dpYVAypdcbRo3Hv2
sB6Njs20e8/GvWd3vd3Y3CvRuPfsR0Perr7qaNG491+R/1rVY/ssu/ds3Hv2
x369zL0SjXvPfh1R7KNrjhaNe8/2f7A9YbbdezbuPftus53mXonGvWfHjfbv
96ejRePes1Ozh0+dY/eejXvP7tEzwtwr0bj37GsLL1y47mjRuPfssTNUv+/t
3rNx79kXHr0090o07j07Y/1+pW44WjTuPbv71oxRc+3es3Hv2T9m/Ze5V6Jx
79l73dm+u+lo0bj37CdxPSrPs3vPxr1nN97W09wr0bj37C6t11695WjRuPfs
XE2rBP9g956Ne89OWljV3CvRuPfsHEViirkdLRr3nj3j5vB/bF4Pxr1nT3GN
/Mfm9WDce3bdzrUG3HG0aNz7zuSUilUuzrd7z8a9Z8cMrmrulWjce3bkpU4H
UhwtGvee7VNzTNICu/ds3Ht2iaFjzb0SjXvPHnPqZIZ7jhaNe88etDh69EK7
92zce3aT8+3MvRKNe8+eWW1arfuOFo17z/5+R3LLRXbv2bj37M9Tzpl7JRr3
nr06ef/IB44WjXvP3rb3kWux3Xs27j27Q8pjc69E496zyx/9es9DR4vGvWfP
Wb77pc3rwbj37OY/73lp83ow7j07ynth6iNHi8a9Z78qUuPwErv3bNx79t3I
muZeica9Z5eq1Dn0iaNF496zS56eMmWp3Xs27j27y72p5l6Jxr1nl1hxudlT
R4vGvf+aPP3eqhbL7N6zce/ZJb1Wm3slGvee3axS2vBUR4vGvWffmfd90HK7
92zce3aG9XPNvRKNe89uuNm9+pmjRePes3879uV1m9eDce/ZEy9+dd3m9WDc
e/b0uIVnnjtaNO49u3SJ4GUJdu/ZuPfs2eXzm3slGvee3aJHydQXjhaNe8+u
0/ZoxxV279m49+zeHY+ZeyUa9549bcm6XC8dLRr3nl1o9Vf5V9q9Z+Pes521
nc29Eo17zz41OviTvx0tGveefbBO1is2rwfj3rN31/a+YvN6MO49+1+xMyJf
OVo07j27ZuVts1bZvWfj3rNrf7rd3CvRuPfs7jXztHvtaNG4913IuWLi6yfa
vWfj3rNLt+5j7pVo3Ht2wIMNvf5xtGjce3bql597rbZ7z8a9Z9dqXdfcK9G4
9+ytN3qOfONo0bj37EK/Vtlm83ow7j179/6q22xeD8a9Z/vEd5r21tGice/Z
Ue+jO6+xe8/GvWc3fNDO3CvRuPfs5HVT579ztGjce/ZvJdf6r7V7z8a9Z4f7
rzP3SjTuPXtf3AcJaY4WjXvPrhP/yTGb14Nx79lhLUscs3k9GPeeHVvh+Grt
aNG49+zT2x/Fr7N7z8a9Z1ea+9jcK9G49+xes1LWvXe0aNx79rWfU4PX271n
496zn658Zu6VaNx7ts+y7uu9/l+e/3Z63v8BJ9af2w==
      
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->1.5,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 199.1}, {0, 1.8849555921538759`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.740809369361885*^9, 3.740809389973061*^9}, 
   3.740809433597155*^9, {3.7408094646506844`*^9, 3.740809474588276*^9}, 
   3.7408118861708803`*^9, 3.740869570820719*^9, 3.740869627967375*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bose Einstein Statistics", "Section",
 CellChangeTimes->{{3.740811350081623*^9, 3.74081136807082*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Trying", " ", "to", " ", "find", " ", "a", " ", "good", " ", "point", " ", 
   "to", " ", "stop", " ", "the", " ", "sum", " ", "in", " ", "the", " ", 
   "partition", " ", "function", " ", 
   RowBox[{"BUT", ":", " ", 
    RowBox[{"mittlere", " ", "Besetzungszahl", " ", "pro", " ", 
     RowBox[{"Teilchen", "!"}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.740811360662266*^9, 3.740811389163726*^9}, {
  3.740811754470274*^9, 3.740811765435088*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wave function", "Section",
 CellChangeTimes->{{3.740795594641993*^9, 3.740795600743307*^9}, {
  3.740807396697456*^9, 3.740807400686702*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Not", " ", "needed", " ", "for", " ", "the", " ", "Energy", " ", 
   "spectrum"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.74080740269691*^9, 3.74080741683534*^9}, 
   3.7408697250551167`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Acoeff", "[", 
    RowBox[{"block_", ",", " ", "P_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Subscript", "[", 
     RowBox[{"\"\<\[ScriptCapitalA]\>\"", ",", " ", "block"}], "]"}], "[", 
    "P", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"allBlocks", "[", 
   RowBox[{"N_", ",", " ", "barN_"}], "]"}], " ", ":=", " ", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Permutations", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"PadRight", "[", 
          RowBox[{"#", ",", " ", 
           RowBox[{"barN", "+", "1"}]}], "]"}], "&"}], "/@", 
        RowBox[{"IntegerPartitions", "[", 
         RowBox[{"N", ",", " ", 
          RowBox[{"barN", "+", "1"}]}], "]"}]}], ")"}]}], ",", "1"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]", "[", 
   RowBox[{"wellN_", ",", " ", "ds_", ",", " ", "ys_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", " ", "Ep", "}"}], ",", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ep", " ", "=", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"-", "k"}]}], "}"}]}], ";", " ", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"ne", "=", "1"}], 
        RowBox[{
         RowBox[{"Dimensions", "[", "Ep", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "L"}], "]"}]}], 
          ")"}], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Refine", "[", 
             RowBox[{
              RowBox[{"Sign", "[", 
               RowBox[{"Ep", "[", 
                RowBox[{"[", "ne", "]"}], "]"}], "]"}], ",", 
              RowBox[{"k", ">", "0"}]}], "]"}], "\[Equal]", "1"}], ",", "0", 
           ",", "1"}], "]"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"makeCoef", "[", " ", 
           RowBox[{"wellN", ",", "ds", ",", " ", "ys"}], "]"}], "/.", 
          RowBox[{"k", "\[Rule]", 
           RowBox[{"Ep", "[", 
            RowBox[{"[", "ne", "]"}], "]"}]}]}], ")"}], 
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Ep", "[", 
           RowBox[{"[", "ne", "]"}], "]"}], " ", "x"}], "]"}]}]}]}], ")"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"\[CapitalPsi]", "[", 
   RowBox[{"ds_", ",", "ys_", ",", " ", "barN_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "bN", ",", " ", "allB", ",", " ", "N", ",", " ", "dels", ",", " ", 
      "curWell", ",", " ", "barHs", ",", " ", "barPos", ",", "LL"}], "}"}], 
    ",", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"N", "=", "1"}], ";", 
      RowBox[{"allB", "=", 
       RowBox[{"allBlocks", "[", 
        RowBox[{"N", ",", " ", "barN"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"barPos", "=", "ys"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"barPos", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"y0", ",", "ys", ",", 
            RowBox[{"Symbol", "[", 
             RowBox[{"\"\<y\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"barN", "+", "1"}], "]"}]}], "]"}]}], "}"}], "]"}]}], 
        ";", 
        RowBox[{"LL", "=", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "/", "k"}], ")"}], 
          RowBox[{"Ceiling", "[", 
           RowBox[{"L", " ", 
            RowBox[{"(", 
             RowBox[{"k", "/", 
              RowBox[{"(", 
               RowBox[{"2", " ", "\[Pi]"}], ")"}]}], ")"}]}], "]"}]}]}], ";", 
        
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"curWell", "=", "#"}], ";", 
             RowBox[{
              RowBox[{"\[Chi]", "[", 
               RowBox[{"curWell", ",", " ", "ds", ",", " ", "ys"}], "]"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Product", "[", 
                 RowBox[{
                  RowBox[{"HeavisideTheta", "[", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"barPos", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Sign", "[", "x", "]"}], 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"Abs", "[", "x", "]"}], ",", " ", "LL"}], 
                    "]"}]}]}], "]"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", " ", "0", ",", " ", 
                    RowBox[{"curWell", "-", "1"}]}], "}"}]}], "]"}], 
                RowBox[{"Product", "[", 
                 RowBox[{
                  RowBox[{"HeavisideTheta", "[", 
                   RowBox[{
                    RowBox[{"barPos", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Sign", "[", "x", "]"}], 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"Abs", "[", "x", "]"}], ",", " ", "LL"}], 
                    "]"}]}]}], "]"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", " ", "curWell", ",", 
                    RowBox[{"barN", "+", "1"}]}], "}"}]}], "]"}]}], ")"}]}]}],
             ")"}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            RowBox[{"barN", "+", "1"}]}], "]"}]}], "]"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"x", "+", 
         RowBox[{"L", "/", "2"}]}], "]"}], 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{
         RowBox[{"-", "x"}], "+", 
         RowBox[{"L", "/", "2"}]}], "]"}], 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"curWell", "=", "#"}], ";", 
            RowBox[{
             RowBox[{"\[Chi]", "[", 
              RowBox[{"curWell", ",", " ", "ds", ",", " ", "ys"}], "]"}], 
             RowBox[{"Product", "[", 
              RowBox[{
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"barPos", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "+", "x"}], "]"}], ",", 
               " ", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", "1", ",", " ", 
                 RowBox[{"curWell", "-", "1"}]}], "}"}]}], "]"}], 
             RowBox[{"Product", "[", 
              RowBox[{
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{
                 RowBox[{"barPos", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", "x"}], "]"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", "curWell", ",", "barN"}], "}"}]}], 
              "]"}]}]}], ")"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{"barN", "+", "1"}]}], "]"}]}], "]"}]}]}], ")"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.74079580640018*^9, 3.7407958065408363`*^9}, 
   3.740869764019429*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"onePartWF", "[", "x_", "]"}], " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalPsi]", "[", 
       RowBox[{"ds", ",", "ys", ",", " ", "numBar"}], "]"}], "//.", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"specificRules", ",", " ", 
         RowBox[{"\[Delta]", "\[Rule]", "Delta"}], ",", 
         RowBox[{"\[Gamma]", "\[Rule]", "GGamma"}], ",", " ", 
         "randRulesAllDelta", ",", " ", "#"}], "}"}], "]"}]}], "&"}], "/@", 
    "rootPt"}]}], ";"}]], "Input",
 CellChangeTimes->{3.7408695267185793`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rootList", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"k", "/.", "#"}], ")"}], "&"}], "/@", "rootPt"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7241165194244127`*^9, 3.724116577988139*^9}, 
   3.740869799397444*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ntoplot", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "rootPt", "]"}]}], "]"}]}], 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"numBar", ",", 
      RowBox[{"2", "*", "numBar"}]}], "}"}], "*)"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{"specificRules", ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", "Delta"}], ",", " ", 
     RowBox[{"\[Gamma]", "\[Rule]", "GGamma"}], ",", "randRulesAllDelta", ",",
      " ", "rootPt"}], "}"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nrmSymb", " ", "=", " ", 
   RowBox[{"calcNorm", "[", 
    RowBox[{"ds", ",", " ", "ys"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normSqr", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"nrmSymb", "//.", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Delta]", "\[Rule]", "Delta"}], ",", 
          RowBox[{"\[Gamma]", "\[Rule]", "GGamma"}], ",", 
          RowBox[{"{", "randRulesAllDelta", "}"}], ",", 
          RowBox[{"{", "specificRules", "}"}], ",", " ", 
          RowBox[{"{", "#", "}"}]}], "}"}], "]"}]}], ")"}], "&"}], "/@", 
    "rootPt"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normSqr", "[", 
   RowBox[{"[", "ntoplot", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"onePartWF", "[", "x", "]"}], "[", 
           RowBox[{"[", "#", "]"}], "]"}], "]"}], "2"], "1"], ",", " ", 
       RowBox[{"Evaluate", "[", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", " ", 
            FractionBox[
             RowBox[{"-", "L"}], "2"], ",", " ", 
            FractionBox["L", "2"]}], "}"}], "/.", "specificRules"}], ")"}], 
        "]"}]}], "]"}], "&"}], "/@", "ntoplot"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.740869537795857*^9, 3.7408695412955103`*^9}, {
  3.740869805220385*^9, 3.740869808356083*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TGDensity", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Total", "@", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox[
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"onePartWF", "[", "x", "]"}], "[", 
               RowBox[{"[", "#", "]"}], "]"}], "]"}], "2"], 
            RowBox[{"normSqr", "[", 
             RowBox[{"[", "#", "]"}], "]"}]], "&"}], "/@", "ntoplot"}], ")"}],
         "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "#"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
    "ntoplot"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SinglePartDensity", " ", "=", " ", 
   RowBox[{
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"onePartWF", "[", "x", "]"}], "[", 
         RowBox[{"[", "#", "]"}], "]"}], "]"}], "2"], 
      RowBox[{"normSqr", "[", 
       RowBox[{"[", "#", "]"}], "]"}]], "&"}], "/@", "ntoplot"}]}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", " ", "500"}]], "Input",
 CellChangeTimes->{{3.740869976058058*^9, 3.740869978795929*^9}}],

Cell[BoxData["500"], "Output",
 CellChangeTimes->{3.740869979415224*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gridlns", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"randYs", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Delta]", "\[Rule]", "Delta"}], ",", " ", 
         RowBox[{"\[Gamma]", "\[Rule]", "GGamma"}]}], "}"}]}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "L"}], "/.", "specificRules"}], ")"}], "/", "2"}], ",", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{"L", "/.", "specificRules"}], ")"}], "/", "2"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"glStyled", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"gridlns", "[", 
           RowBox[{"[", "#", "]"}], "]"}], ",", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{"#", ",", "2"}], "]"}], "\[Equal]", "1"}], ",", 
            RowBox[{"{", 
             RowBox[{"(*", "Dashed", "*)"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"(*", 
              RowBox[{"Directive", "[", "Thick", "]"}], "*)"}], "}"}]}], 
           "]"}]}], "}"}], "&"}], "/@", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "gridlns", "]"}], "-", "2"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"gridlns", "[", 
           RowBox[{"[", 
            RowBox[{"-", "2"}], "]"}], "]"}], ",", " ", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", " ", "Thick"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"gridlns", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], ",", " ", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", " ", "Thick"}], "]"}]}], "}"}]}], "}"}]}], 
     "}"}], ",", "1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"legnd", "=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], "/@", "rootPt"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "16"}], ",", " ", 
       RowBox[{"FontColor", "\[Rule]", "Black"}]}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"SinglePartDensity", "[", 
     RowBox[{"[", "13", "]"}], "]"}], 
    RowBox[{"(*", 
     RowBox[{"[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7"}], "}"}], "]"}], "]"}], "*)"}], "]"}], ",", 
   RowBox[{"Evaluate", "[", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "L"}], ")"}], "/", "1.8"}], ",", " ", 
        RowBox[{"L", "/", "1.8"}]}], "}"}], "/.", "specificRules"}], ")"}], 
    "]"}], ",", 
   RowBox[{"GridLines", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"glStyled", ",", " ", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], 
   RowBox[{"(*", 
    RowBox[{",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}]}], "*)"}], ",", " ", 
   RowBox[{"Evaluated", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n=7\>\"", ",", " ", "\"\<n=14\>\""}], "}"}]}], 
   RowBox[{"(*", 
    RowBox[{"legnd", "[", 
     RowBox[{"[", "ntoplot", "]"}], "]"}], "*)"}], ",", " ", 
   RowBox[{"PlotPoints", "\[Rule]", "150"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "\"\<\>\""}], "}"}]}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.005", "]"}], ",", " ", 
      RowBox[{"Thickness", "[", "0.002", "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", " ", 
   RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7407961286166973`*^9, 3.740796212195507*^9}, {
  3.740797008791875*^9, 3.740797063635962*^9}, {3.740869865024585*^9, 
  3.740869921648538*^9}, {3.740870019384701*^9, 3.740870065950272*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Symbol","argx",
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"",2,199,26,30427704386071445647,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.740808541133101*^9, 3.7408087986894083`*^9, 3.740809008249324*^9, 
   3.7408696330095997`*^9, 3.740869822375495*^9, 3.740869866302855*^9, {
   3.740869896496142*^9, 3.7408699219193363`*^9}, {3.740870059004197*^9, 
   3.740870066401989*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->GrayLevel[0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "GrayLevel[0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["GrayLevelColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        GrayLevel[0],
        Editable->False,
        Selectable->False], ",", 
       RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->GrayLevel[0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "GrayLevel[0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["GrayLevelColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        GrayLevel[0],
        Editable->False,
        Selectable->False], ",", 
       RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7407970399582644`*^9, 3.74079706589669*^9}, 
   3.740807574936907*^9, 3.740807887569558*^9, {3.7408080119603653`*^9, 
   3.740808057404421*^9}, 3.7408081321918793`*^9, 3.740808541144762*^9, 
   3.74080879870122*^9, 3.7408090082641*^9, 3.740869633023875*^9, 
   3.740869822388317*^9, 3.7408698663576403`*^9, {3.740869896558011*^9, 
   3.740869921977319*^9}, {3.7408700590677423`*^9, 3.740870066456606*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"k -> 0.62829339898213164000\"\>", 
   ",", "\<\"k -> 0.62831853071795864769\"\>", 
   ",", "\<\"k -> 1.2565867979650569137\"\>", 
   ",", "\<\"k -> 1.2566370614359172954\"\>", 
   ",", "\<\"k -> 1.8848801969495694545\"\>", 
   ",", "\<\"k -> 1.8849555921538759431\"\>", 
   ",", "\<\"k -> 2.5131735959364628957\"\>", 
   ",", "\<\"k -> 2.5132741228718345908\"\>", 
   ",", "\<\"k -> 3.1414669949265308700\"\>", 
   ",", "\<\"k -> 3.1415926535897932385\"\>", 
   ",", "\<\"k -> 3.7697603939205670095\"\>", 
   ",", "\<\"k -> 3.7699111843077518862\"\>", 
   ",", "\<\"k -> 4.3980537929193649458\"\>", 
   ",", "\<\"k -> 4.3982297150257105338\"\>", 
   ",", "\<\"k -> 5.0263471919237183092\"\>", 
   ",", "\<\"k -> 5.0265482457436691815\"\>", 
   ",", "\<\"k -> 5.6546405909344207293\"\>", 
   ",", "\<\"k -> 5.6548667764616278292\"\>", 
   ",", "\<\"k -> 6.2829339899522658342\"\>", 
   ",", "\<\"k -> 6.2831853071795864769\"\>", 
   ",", "\<\"k -> 6.9112273889780472509\"\>", 
   ",", "\<\"k -> 6.9115038378975451246\"\>", 
   ",", "\<\"k -> 7.5395207880125586047\"\>", 
   ",", "\<\"k -> 7.5398223686155037723\"\>", 
   ",", "\<\"k -> 8.1678141870565935194\"\>", 
   ",", "\<\"k -> 8.1681408993334624200\"\>", 
   ",", "\<\"k -> 8.7961075861109456168\"\>", 
   ",", "\<\"k -> 8.7964594300514210677\"\>", 
   ",", "\<\"k -> 9.4244009851764085171\"\>", 
   ",", "\<\"k -> 9.4247779607693797154\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.7407970399582644`*^9, 3.74079706589669*^9}, 
   3.740807574936907*^9, 3.740807887569558*^9, {3.7408080119603653`*^9, 
   3.740808057404421*^9}, 3.7408081321918793`*^9, 3.740808541144762*^9, 
   3.74080879870122*^9, 3.7408090082641*^9, 3.740869633023875*^9, 
   3.740869822388317*^9, 3.7408698663576403`*^9, {3.740869896558011*^9, 
   3.740869921977319*^9}, {3.7408700590677423`*^9, 3.740870066459441*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxEmXc41X/8/u09zjlGlIrQR1pEqdDzrUJoILNpJ5RVyB5lZ4dE2TvZK7xf
5jlHSQlJSqGM7L39fK/r+/t2/jnX/d+5zrnf9/24n0fExFbbnI6GhuYEJw3N
/7z/apQLGjzJj2j+96V5R6fDforv//To5Y4XHa/+6dhnwhKuuv802/cm9jiO
fzrLstXWv5b3/7Th1eTYGsd/Wtb3i2Kz6D/dXWSmcK6LBwVe7NdLUHeDUKxh
gzmUB1X9rWL5eSsLbHh84JUCD5JkDWu2MKgBI2XCeY9ZErqqnuBo59IMO10W
Xn3MIaEHeTHXwvSosDkp7754jYQGl/7W2h+hwFKT9i5TIglpql3tOeDfAIL9
radT64mI2vvDVGe1BGhX44v0HIlomEeIuz8qFjYd5f5qSRKRjmWJQ4aoMIgd
k8vY+42AvGt5ic7F0XD7CvM+2UgC2vOZ5r3RSBE0FZ7cu0uJgDSsNYAcUw/f
xb2HJ4e4URqb6GX3eTJcyz7Kf1ybGykX8DxL96XCwZIUZeESLrSviWNeoqwZ
xN1LV+P3cKHilMqTk4s1kKfieGs9lBM1XrogYDGTC4+fzzcwTHGgJeZj6W1E
b/DP5X+dcJ0DGfXpsZmYWUDfubW4rrfsiGNeskReNh3qfoRIr+1hRwR78+uL
x6qBKlerWRDKhs5sRfpfj2iC/wSL7JgmWdGYAvH+JUUqFFQq848bsiKPsjSd
8HgKNBj6W9VQWNBRr/n3ZY8a4YBfEC59kAVlszCYHNcthyqrwwmy8cxo7kD6
u+yRV5DYG/2wb5kJ9Q5psV9+qA7ZLC+6iWZMyPrVQ00mLBiwk5f/SHcwoj6B
bvOIutdwaLpxcVGGEd1yajm62oeDkkVvqFoyA6oXmV849boFcsxKRJVoGBBX
RFGfznMqJJmdvCtqSo8mDpxOO97eAtX7bslGf6RDvfyy97qlEUjeVaHJlqZD
wV8Dv8PzAmi8166lnkSL9IziFx4zhMCoI4P2F3ZatP9qabHBnrNgQreuzXqf
Bskr7qYb+ZgELC8lSiLLtvAHwTfyZdLKYE71R/01p018/OKjM37KjbA4//fw
isIGfnBjj5ZeHQU09shnFAus4wLC/ganD1JB1YB7T/m3VRw/QLduqN8Ez7jE
UztLVvAZpwizSKcqCOrC/1N0XMaDKk3vVTxMhdhXxWxuJ5dw1mxVV3cfI1j4
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
5wl2c6jK2nDXZmbC5D2se/57P0R1K8N3Fy56jKNgTNyDXQXonoQNdItsoC2P
Cu/sw+dDj/CA/+TRVbQhsD6GXswNsjlXi6NOLaG/zjQPNkTRYMq66Z3kkyk0
4LnZ0ncBcXiicJFJ8mEPWn+5Ti3KE+//ArB1M+iBgmco8TKeN6LbEOJozhSY
uL15cqJYCiSecQfYHlkC8UUzxuv/+dnpOLK4+CroaJWuNnZYgl0BeuHODzok
c75qd4C2Byy+rF6nzDEiO2st9dPx+Vn45z/CsYjzDpMfW5+oGnzi0T90/ycB
sXLRjKJXoUG3V/wrbk0SUi8TYuJgjueRLl/6i0JkxKPe+sJejd0w9TFq4/x9
CvI3k9XYAs9bxera552U/8cnPsoOde+O/O95kuWqT0p3Rf93vYcs5XlCsJsb
o6seTVL7EAL96jS7lhhubF/a5rfo7kJQNEt+fUWdG2NtFvl0OLMWDgzeSLRb
omBqNM3evvhGWEl0P5JaRMFsE2XCrHF/szKsPtRpS8GqT16yChP6735d5y4x
LgrWc/ji7VfudRC5q4B4HiNjQd3Nt1RfV8LM5RuP5P3ImOvBIoHl5VRY8RMS
5dlPxswetdEUf3JDpp/06uoAF6bLEqv4zTgFJnZuvPsVz4WNPojZLjtQAcbt
MQkjwIUJuivotrz8AFPjanT5YySsQvz5GWkmKtzyna+rPkHCTKRC1mxwfTHd
CpBqL+fEog5P6WQ8bASzqzrR5gKc2FXCA3+P17WwYsQcFhnDgYVYTSq4Xi0G
qsjDPa/niBhWYlZ4LzUU5jTqMvhtiZiTAc1VNdgD9KPOHHJ5w44FxH/1vJaX
D6L5O7ZeCLBjv/plN/Uu14Apq+YLhRg2rPPtl6Z/zxqgwOs4a9UPAtZ/Ol+9
QxfXi7dp1oXWBKxh2283aywVPNwHQa9pB8b8jzrG6VAPVMrvlkmpHVjh8Jkg
UZ4qCGR6oPo6lRW7fcL692nBbLBc3WV0Z4UFW6olyscE6oF7z4BVyxkW7ApH
cuN9zbsgTEr4V93BjN0pruDT1CwFJkMB7aLDuEceDTv5kwMDtRYlL9pDJuzr
q8d8V+qboCiQVtK2yYjpHuAuPYLrd9q6m9SAMyNWC3s16d42QXd93O1d7QwY
/9EKLz4uDDTiYu9YyTJgGy77p9lES+Grductpgf02HB6Qe2THTEgar5jjzOB
HtNhMhvbXjoGKa68J2u96LCj+js/Rkc/gnJ/176U8m1Uv6ELeTDzCopC76kH
XNpCX2PiN8Rd6+HBYRq3h8ometPi4NN3NCrIXxSsfM+9gWYumhF3ieJ8WSaU
wdv3Dx0Tf/BnTaMByoPUdbtK/6J6ksqh3HJvoCLHSMjcZw11qrVhrWPPg3Jf
L58JhVX068q9/pvfHMG89UnkIMcK2v3tQKlZ1E3Ql4od+dTxG30qd7tymfAc
iu035AoLfqGl/oqVd/3ew2m9Uy/6IpbRc4gtUUK0CdwV7K4Sji+hj7I5PVhx
Pac8C2LKFlpESwO7viYVNIPd1p7wJXQe9Va0/8Q0gcG9tTOjNOMfqNndDAm5
oXJg3THUcZ5hFh3nFVbVv54IBwUqDIjRU+jXa2Rs4LQqSH/LLPE8MoHu/3fd
JehVJjQRLS7eWBpFi47l3/++Vgl8EdRgmdUhdCf1NPusVx3I85xS+OEwiGps
c43SRKiQ9yKRodSlB3XU7NDJwvNJQ+GfxzNvO9Go4sjfM9aNoLeyRhA+RUV5
Kj+planXgoPTx+WliVrUnHVBQtOkEGrW8qKw1nzU9JrwzdK9waACtL9fVR8D
Y4zHja9OV6DmgPBGqtY7WPzit/jvUyF0Rw1E0n1sBo5zMXN8Jm8hwU/k56lv
nWD9yW3F6mYj0FNLaZVhPfBZUHng9RkaKCOZE/mcgzBWu1BxxIkKfGWfZxI2
huCnz/kbrq51UPX35MyVtlFYJvPoKK69hG2Xk1sCRhMQusfwWpRhBhgHHz74
6N0UZGy63Ilx2QGWIV9brVln4UNRgqVYayJUBMmOcIb/AJ1bX+KPqVeAYosP
O9uneRj1VdvRI/ABOK18vCTZF8F85LT4HetmeKYbdJd6bAnG67yDSvF6FhSd
n2D2XgYljZge/rgmMGIrXdUu/gVYqcRSBfIeIlM9eHM+/4bbNdJGKU9LwOe8
GvPj1T9Q5fzoX93kbaBXdy7NV1iFIzc0fZcqHGE53CvhqP0a8BedvysRnAN+
3hE6Ag/+wtyYVszEnmpYeX4nYrz7H9wJt5O2l2uAbrcr//T+rUNnxXh5CM5D
zrtfH3x6ZBOMr7TJJbdSIXT1gqeM8xYYLciwH2mpB2NBjUCrm9vg80/trZhL
NbiIyAqDEx3C6jRycKdeLpgsVAjnLtMhgxc4A3dmugBdXC1BJIkeKZ/Jccqz
jQJF6/fV6YcYkAh24ofP689h11f5yK8YAyJtvPPM/Vfvod3pU4mwEyOiUBn/
rvBZEyg9GluS/8WIVAX0qN/F87RLaZCQazITUjNeaoEJNAPl+w7uGDlmZChL
aXbfXgx8R9j23ahnRqq1Es+KOpRDfo9ywmUXFiSZ8/BI1q8YyBney/h3hQXZ
suJI/HT4OPyO4xrqjGZFSiiXW+SlHoCgugxvkcQOxMfevqKi9xWs5dV6mtTs
QN6bXe5Uo9VBxtdPhVx2BMSevGPSKpMKNdrDxS0rBCR1SNiOSZAGMWecWszv
sCF1X4Zqq1414HmEcHxQkh2prRZdOa76Bh5V+tCW37IjzH4ffgjJ5oP73eFK
RxMiosNvOTCEXQIGl+D15u9EJDY/7FCR6XUw/XXbiS6UA0kIM4Yfu4rA5yYq
rLKXE1lmahEM6KwFG6mKaboKTsRW9oxSy9NGyLpUziugS0IsF3vVXM7S4OWb
/jzlMRJyTvlxOCcrFTSG3jwhqXMhAvFWDKNyuF/qGy5Q7nIhKysZy2TFSoih
9mYmDnAhZR7ZtLaIFJh9kmWxKkpGCIjDzRdHxrUqIlbfOviRkcG8x/ZjhDQY
mZUtjKklIwmH0u+ITVSA2j6fpjPMFOQpPzGu3OwDbNtrp6hYUpCBx4Sl9q5m
EFg28V15SEFuyf9s+IzzP/+lh0j9PAURT56hv9TfCF+ZZy+za3Aj8nG55i8D
a2F59cIrtVt43rv9eu3q/FO4Mnv7yflubuS8o2PRP6cQOKHy5fENwf/db6LQ
u9zPnf3f8yQNpnxKhuvc2MabSaZvl3nA+ydfeVgZnscjWFZ+RKbDodnBN2d5
ubE6vSWndYU6iL7sB0wfKVjZiQOa83S4X368Iy4VTsGi62kuWwE0MH+lE8qi
RMFidAWOIq8awbcitlBnhowlewYIP/WqhTUxDn2dTDJWaCjzkrugEGbKTdXL
TciY8ROmy64ng4DNXGj7Gj0ZOzItO1Hk4wdHwpOUGF5xYfPHvndvY08gozFF
Y/ocFxbwl/eNzlANuNxor7mHG6G17I20QptGkHiStOt4JgmT376V/8OJBvMB
BXaH6EhYBtn40LISFZK+iqpFfubAZNqVrKvRl3ieP1YRrc6BcWPX97d8zwRD
6VISw2MiVtFt9mtI5DCk3VHkVCUQseGvbMK8SolQZJYbd/czG5ZVEX7ZVuoD
bK0qfxhWY8PYbLKlAtObweMtebAol4CZ8jXJ/8bzei3763ASiYDt7/UuW/Nq
ggQWPZVzw6zYI5/z3ssNJeCpYSrJrseKydXOIzHSt8Du3oP1fSUs2Kn9b1gj
q5xB/kLl6UE+Fsy6i3NLuScHeH+0RDwIY8asTvHkd4S9Bs5bkrGfppkwxqEQ
zgdYPfgY5Ck3muC/m7nFGY3j/rN2t0OzjBFb56DlyfRRIX9wlSNxFyMWssLC
feh9PRCnw+dzQxmwPa8FLq5feQ3RpJMVkpP0WEXmwxNuyTmw0PCd2cicHhtl
Kwq16HDC9S9yT1ANHWZO+XMzqT0SCgzen/7LtY02nvjrwPT4PUidSr3U0L2J
5o1rzovlN+FZyrdDt2AD9eX4Tbcfz+dysdEXkYB1tO9mHnOcfjPurztuR3H+
RSV2zgwsJ5VDNXMj11LnKvqZbc+r54t3YST51iRX7goada2YFi9nAN1XIjae
+fxBs7/l//mMPoSxJvFvizt/oSauVjqxf+tgRlX7dNPEEtoWCJesI6mwZ3Lq
6a3KRfTJ4j1hKzU877UkXgzbXkDbhFXbw982wM0A8jFC1BxKEhU589D4DeyY
yyzfkPyO1tw9+tnz1WOQIj7ImWqYRoumg7oaZs/Do6xy8XynSZSnJTCu/VkY
vHRenOzbOY6GOz9oLRF8Cms5h4qVq0ZQM5ajB/pTa0H4MQNrV/FX1LO9W1js
dSNEW2fW7RvuQ2W5Xmu3BNLg/pxNkQDpM6oZumMha7oZlN+udwa71KN9TCa6
4umVQG0dGrxRVIkynE03LslIg5M3vozF/bRBxW98MGbgnNFSSv3+8KxvJTCf
DlZJ3JsG702Ojkk2tkFQspTz8MgHcP5mfltB9jOcTH/eps1IhdyDcoVTTX3A
GXw8OwLP4zE3uVCdqK/QWWfj2jvRCO6czfqj7OPgf9udcOfuU0j396GviJwE
rndXn6UpXIMkEocY39g0jKoxh1PtfOE3nULdbd3vULCckTn2Jx/oInRb9z2d
A9E7qfn3dWrAs+NApsGvBRB14Fh9kNkAlmYxh/OKFmGZX4hdUpIGtLDfra/6
l6Dq7sO9oU+o4OsgKmbK/gsY53j4MxTrYX678cWG1m+QM6uLYdtbBffvdIv4
nv0D31Q0fzYfzga5nnFSe+oKWHErEHb9PQkPZjwUjjavAp/MIHt79x04mCCw
W1rlH5yxngkqNscgivtml+u5dWCkrez3JOH+ePS5gWjmBgz47TOex3nWX8Vk
ZaV1E2TfdSgZtTbBh4HDBjFcdIizyZVdArNlMBPr59lXRIeYs6caX98XC095
Ur+7H6VHZj2KXoccN4L0Sv2QSyP0yP2hC8wFj7PholNcJTcXIxJ6Pf9JjVs9
UCLtd5OfMiIWe67I5lZT4UQo+5CZDhNiYR7tEclFg6o445fsY0yIg284tw5T
A5h7sk/+CGJG5Kl32+M1qiFKoMSfk5sFWZGtSG+h5UJ+BatQbQkLEvrq/kCW
kTMMvs1QawNW5MuByF1f2iKARUI69VMfK2JEr3hDW/8ZCPhfYXPx3YH4i+7r
Ic6+g5b0/CFFNgKy/8v9225aTVDQ6doQUURA7n/bmtFKpkFFbw7TCrAhXaH/
Gsx9m+H7pUzHuUvsyCl9wsMQjReQlF8UHc9ERPTeTxGeOySBnEr1smQWEbnD
MCI/IcAHNWURV40UORD/THsVt950mJJJs807x4lk35W2w8zqgK1LnvbnHyfy
4akVz09uKoj1dVzVSiYhlzsOkYt9aLBzJFmYwMuF3PjDUPY3thHOoOWKO125
EOlRDzOJ+begtz/tk0MFF0LekL3yuKoA6oJq+FW2uJDnIRNaWlsBwP7qROpL
QzJyJitS7FNHABi5HM26kk5GKhmOjUltFAAvrePL7AgZObXjgKtKRw3YO3+r
6TtIQSD2KocLWyOknteXZA+iIB6WX8srjWmQ5ShWP9xIQbasjY4XO+D9ql3y
Js2ZG9GQYAqiC34Jfol0b7+WcCPDkhaOysyZ4GlRYeDxlxthCguvoDGIQ3Rk
S+Y4+X/XBwYZAl595/zf9QD07ocbHR+4MTLTc3336FgYkAjykB2mYAK5DlLd
001QKhtYOpRCwfwWDG7cwvu1e/u6lddxnPdtj79gY28GrUe20r0lZOzij429
+kfLwIMy7b3kRMYEOVee0fHGQJhLdoI+DxkbFdUL2MtvDH0FJU+OHOTCZoXy
e5Oy6yGqYerun3ckrFblqod6PxVUf9Hu/ZLE+b337M0qVhqU5ohnsrhyYOW5
NisE7cewo0A89WszEQsWX78RXXYWtF2vWUgfJmK8bZad2ZHhULCt+uaOCxsm
8pvrWaduE0Qll/iWNRGw6vma3zmJNAgcL/C2VyBg8+bjzckPm8Evx19u9AIr
VtMzjd7IT4b+OtvHVp9YsFCTpTsG9bvAOLfJzlyTBat1qT74oTgNuglzZs0B
TFiTxfy/xM1mKKiW1rrVy4gZhTMHbeD5zqV9YS+wMWAF3PyKJtsF4HbzW2Ph
FXqsZilb7PSpIKhT0rs/N0qHWTxLfd0Y6wszs4m9Avu2ULKkblW9SCMsrmdd
svq5gfLfXM09i/NbxXWLxBsN62jXuJutiDMVFC12ZOQKraHH/9VLv59NB/2I
tafB31fQDGUTCZk4DqCIpCA67/+gr4wOShVHJ4Eo0sraobCM1nif/hYV3AxI
bE7C8c1F9OImkYN0jwbSCUc1nLJ/oqYWRW3Tlk1guLyp71rzHU1+8LW3xLMY
dsVoqBS5zqDEh15oBHMEuDm8ONL/axI1J50X953wgKykSWy78xsqeHj41D+p
BnBUXg1mFRxAG3UaDo/8o4LgiYBTkyrdKFmV9udVE56HeHqnqvWq0ffVQrYu
QznwsvvNH43kVNRJxc6vPc0BOhU79lhyPAf1+ttn+yXvwJqk2ltdli7QHM/Y
wTnRBCeDL6p8fNwL59sKYQfejyOj3Sf9Db9A9f1XSxG4v7f+GL4xPT0BA4Jr
STWZsbCoKyT15cQ05Cp7iHyVM4T896zNP5/MgtHhfdHfW7Kg09ika7/LAvw+
rrmisVAHchYh7RO2iyCSwiCEnsd5YqzqAMQvAauJ5vfKozSIjxcUiBb4A9QN
/kbexidgKhQfU623Am8XKzq4Yv2hPXHC9/L1VbA8snxFqjoQ3jtHFe8TXIc3
TEWjwrWN4P+ZnPfSYAOqzi88lfOjwXepCHJn+CZYYQnNYT+bQaLP7Bh7JB1S
lS5fWWyeDuv0+cyRe+iRMMqdCy0nd4FRDoOOwRt65LhBt9xtSIHFS7zjfJGM
iAiL2c7SnmY4yrk6rc3PhFz1+myeFEGDa6FfWvV+MCM3zwiSp4aKQEw3uy/9
Ngvyyvm+nIZUMO7fXx658LMiuppt3wRHfcD5YbmY9tgOZPi8mAiS2wCPevdU
GYQTED4Ko9wVHZzfiZi1Mz8b8v3sgbwuL5zfS9j3a4+wI1sxuVd7r2ZBy6jR
5zp/IvL8qUE6/R5DGIoOfXOHxIFEMOqb2v2LBfnrfjbXejmRpx9TJ7u3msBZ
DDn+3IuE/KJ85fnv/u8VQTrVJEYu5JTrL5Go700wobI4/PoRF7Lv8E5PXZ1S
kMilDk784ELOKLYvnWu8DcEyV373KJMRu57LV17KWkLrhyeYwG4KIuhjkn3s
WD20jDV8y3WnIJY2PfPtr6jwVfLN7h8vcN5hjU+iF8HnS/dINXsmrp/bLx3X
0TzwFXy4OjPFjUR/sP+b+MsFSu6/ffl0mhub+1Hn+KnnDBzBvHgHaiiYUtXu
UZNuKgh7Pci6dIGCMVzMYERX/vs+H3a2/BYZi0d5xKmdOeB+oopwUZ2MeSak
NIckOUGSdvaFsnkuTPqVxddnJ6NgznqxY5KJC6NwL/de+9wEDbe0Hmf4k7DK
edPyoXQa5K5FSJzv58S+t9j9k8Dzwx5D91a2nRxYXGzExz62eIgpVY6RDCVi
fQdbTgTKq8Bc2Tz1+Cg7JoFwH+GXygKrRQWaEjcbNnQ34dS++1QwHL+ikxdC
wEIkd2TPK+B61S8pqCTIiml69ynnf/KFIdtvFktRLJj/zObgo/hgSBF9fniq
jglrZliSLnVohB13bATqxZkwMXuNrKELNMhRmXdeuc2IibMtyA4sNkOpWaUe
F0aP5V65sHeClAaBLGvHFmTosV2RXZfjgBe2Nj7cZ06mw3pb93yYNEkGTyyD
6B21ib4/N93vNNwMDxJ0ZRQcN9DotQ9rIZE0KL//zoReYh219V78fmG8ETSq
w+8gEauoiMoLJT3ZYAh8QhEptF5BJ+ODBjBxXyhVeP3yXeoSur/MXvv3ERr8
1pSprz+/iPY0lqr9SaNCw6QSX1rqLOpQZhA6FfcAVO/93SEuMY2+Ff3kmjmi
BP1fy7h9WyfQ1s8C6VeH4yG/UsgkP/ILuvNk7aHrxGaoCFRnQ3J60eur7CkD
eH14YzTWLSY/oRV+cZ/osSZYZ+x4GLezFCUNJ1Mrf8RAi9tpVaOAJOga0dTi
ZDgFLUleFqI23aDu7IQ+HaDC0tAiD933fpB/46PaxEMDLIM+KO3ZOOx4TJ+o
65AHrpsbESEiU7A68KLOmNUZlAf/CZ3yn4GVRepZhXs3gcmczfl85E+olqd8
StvZBIEmGSlOq4twMCqg2zaGhuugvPdB0WUQVGJ+9ru2GZ7cjJG0Kf0DDTcd
7h9PTwHKXZXU8YkV2G/+VaXh7JqWB8z/4SKvwSdN+XW2yVQwbbrx73H5Oqzd
kpLpFcH7u1x/KX5mAzKTjzQmOdOg5GhK/OOPdIjqae8nH8ghYL0/qsPAkx4J
Urx1stzGD/hz1YzKjjAi7L5VX9slG0ExLecEoZ0RcTc7YdlqSgOHBaFuJy8m
JHGsoQDVpkJiTcjeXjUWJMB2Qem6fTpIiPi6j3xiQd6Ot2QvIDywtt+qV8mN
FblBd+HcR5yPFZMyMqTkCUiFQ3XYrZRmKGkp6XrbQUCaF6+1+kT99/3IYzPf
pIiIo11oLW96JKTdE6PE1ROR3ia+M+L2LjAh8UvVV4iElNlnsZ0Yo8LMHaei
jhpcj94OkH5OUaFgt0Y9fRMXcu7N4qjpcjacNi9xuMtFRngrJ3imBWzgocZ+
5eTTZGTZtYvv+Fw0/Nja+SoJoSBqWQXDhOQmOLPY6ut/l4KEWEpwvsHz7enk
eO/uAQqix7WpGq/dDPJDtHfPMW5klSFYnHQvDtyjmx9Ms//v+snRptBMJon/
5beZgdTplRZu7OK367qE8Ujocv65/OYRBVv70cFzHz9fKZ1KZsp5MpZ3eMc+
Oo1EqPV0GjgkRMZOGhY9dG7kB+VuribjThKWeSxtNeAqFYZffJHqVSdh7B9E
Yirxesy4jvYZDBKxd91gwB16GXg7BVdEjxGxqdwXS+nKVyBt++9b+QECFiwz
axQQQAPLDkGX8GMELG/KUS5zLxWudLEqtYWzYu1XBf6Qd2cC7zeV1Z/juJ44
CBC91Cmw4zvXaeodJizXrSw4xrMZiviC/0h9Z8QWZYyyFe7iejLWK94bTY8J
GS1pxFMjYFlH0q7gDx1WdCbo89J5Z2jirTw6zL2JXjnxaEV7Dw38VlREhebW
Uct2BgHVNiqE/D0cK0taRXWXx6KznuuC/ErWGOfUH/T0Ukm9ecFdQHQSHCzs
l1Ftx7jZtL4m6HLavCkluoSaCzP5muH+QzLgYCJUzqCgs76EDtwB/doXyLLm
FCrYfevL319WQBWXsA56N4CyX/0b45ZJBecwxhLax270/e2mSeXdOD+M36B3
Ss1GW8QlBlNsfYBJzTgmY18RPChJfKkQHg77RUjhCKUXph8zHP30X3+SjzyI
LRkESPGSZxtqhrOFfBCROQGrux5I7qFLhkdOUsW1LNNwQQ1+OikKwiPLPwJR
8otQP17/rP17M1RyZ3y56bkEXouc9+sv4/3VMNEsI7QCxBvl6cIeYXDOPY8U
a7MKJ79Nmd0uvgBiArrtmyIb8CLblc9DnQbiuQLZtQ6bEB63NbvsjvNQ4IHk
JBZ6hJqIHN35zhBGZn41Z11iRN4tNcQLGTSDeu+ctxorE8J6RYTyDNe/CeKP
SuYAFuQ+2/fAbe+bUJq20SlDYEWon6jOXQ1OkGW7cuj5BQJiYd9tfvkvFdYK
ToTzENiQdcPcGvd2KmRUpepwnSEijzvKJmskXMA3IGRQapOIjEkLK0Vr3YIt
w7XSCWsScnZZl0rB+6P/5Qm1t2NciLmD+T7/r/Hw4jwhf+ogGeGSkX5aPCYH
bkKMqhccKchS/npVhAkVNmIZGxcLKchLabH8Wlyvlm8mmT79xo3kZOlYXiq/
BNW/Z38HLXFjNj/3vvO+agDDu38WL9RTsNMWmV4vLlNBN4syanyVgl3145Zr
1cbnKywiL16XjL1u3F5maPGBdgOnqtRVLkxn4sE/ZulQuJLq8e1nFAl7bdNO
t32LBu+Fet/TJDmwZR/ZG2XeKeDpvdyWkkDEzqsvSnDdqNeS9ldqZJNkw1pD
P9Va7KOC3YmGe+LxBOzOZZYVMU8auLO9FRWWZ8VUjyomGx8KwXm6tjAmkwW7
Pi3XbaLoCxrnr+9vUGXCGMI/Nxop0iAvQ4Pv/gNGLIF67HumDxVenl16IoDQ
Y09XBZVOGhwHKtsuyHi+iT5A/10/atQMvs/stt6Gb6BMW+aDZ/F6/ju972PG
01X0ulu6nu6Xm1AiYMzoELKCcnDsubT10RnalEMIR98toVwpnKams1SIIsdU
5d9bRGXdV5bdlqlw2KSl+1bANLpD/GdKNNUKajTKBWJ4JtFrBOfq1YrbsNfD
c+oF9KGBvswPjVNoMCYxbulq+wJNWeCf4q9PhO4SOXvzqTC4p6Kx/We3POxU
cZovrv8M5C/0bUu4XtFuJZy+bNMPwxEHRuctaLBZrXR01+dJUAxw1Oc84gsT
vxnzlA/MAAfhH0tMXDBMmZLH6ToXoQNMhXXdaPDpBLfApc0lGLtqZGiuhuc3
uXtdNu9WoCaC/ZyQgTR89w6fYoxdB0ybyUs+txlc/gbvHcA24HnAC73MaBq0
nGO8rvmWDmmV2PBYjYiEsGwORxsreuR+61j71S4XEOMIVYx7y4hszHXVp3PQ
4FQVj62NNRNSoq906NxLKkzMvj1qirIgnXy/jHOTjwNd6qO3hwQJCGPCwSrG
X01QZBJtJFRLQMbifi1dxvmmXfhqdRUvEdHgY3nXJRgLbq4+EYNlRORuWLqh
R4YhBG4k0StwkJB6pTaieSRej/JdXKyFJKS2+p+9jjINuNwVas+wkpFWhrH+
2wnnoTuwdvKxJRmxldg3ZKceDusH2doggoLsEbj2yS6YBiFrA7sGOyjIEf9X
XDcGmqHryFmNxipuZKDkeOTZzGSYma9dLmT4nz+1F+kF7GH+3/WE2C06T8a7
eD7uEBxeS6JB0eie7k4rMlYh4fp+58cI0LUbPu7CTsZ0f1F6Zjlcofdl7clH
z0gYw6IbaVScBsmK1b+5dpIwc7mk01NPqSA1c9784isi5pWnwPP3gzkESjqJ
H3xJwHZIGeaL4XqdURR84t17Fuwsr8wzhxh9yNvfrNN0hgnT5Sieu3KNCvk2
X6JG6xgxvUOe/3r247wrNnE2yI0eOz0oekp7zAcSJM8OyrfTYQtvjx2zrLoG
/KNROR9bNtAv4WVO1DBcz9nR5sbGFZTcEnewv3sPsGiyVBoSl9Ft3tIXNAIV
Sqp1Hrr3L6JdVUdPnPKhgVCrl/fxnTPoRuDBula+qxCxUX7o/dNJ9OJ57+7a
4gBY1qM+Sg3tR3fUJu+MOkaDp7HTn5VEb6Od3S1TWC0CQZ87ftoq9UEl76c5
7VQaHJYrxIyVJ8Hi/AfXYr9IQKR5C/5mTENzIX/5RakzUHeSMUwnfBF6fZZt
/D5T4cOLnmv/KpdgqK/41sdNKiDBqiY6PiugY+v868ABd1B6J9Fll7cKTuxC
nfUREdAQMxzgdWkDPGb6/XwTadB1VyAw4BA94lV9NYRazwcM6ypbKWmMyMmH
pIe+ZlQw0KN3NZBlQnbaKfz0OEUDt2sW6/vvsyDGViLvlT9ehDamGu90GVbE
U2emN94mCPIsQHMqhYA05p8SG7hCgy0ig2tANBFRSBjhY2rlhbrN28MBN0gI
TSeB7m08DfzjtK9x/uFC9tKjT45/DAOdpTHdRoSMHD0w935q5RzIFkRF9F6k
IIdLlquI7DSorfPxmXxLQZj+BljvaaHCQnVhjtQiN7IwMECRNjSFHCTOf+Ab
N3Y1/kavxY1LcM99Jrz+BQU7LsK766Aovh5VMZs0VwomdEMh3DUVz3uC331N
5cnYju+JufojerDzys7z2i4kbMeUnLkPXg9//5U+IzoOjMVDPJItJAqKF4OP
13gRsRIpDtFLx60gwlv+o/M2rt/hrz3Y1qmgcXX/mqAnAVuc8R99guulc0HK
bkM2ViyTP+pPXZEz9BYpkOrITNiPqzan0vHz1yjcmkT56TGvk+Fmit1kYLuy
ZxCcNlHVN5Vdvk5UaAo45FCssoESL5SLxTri80oeOTZjt4r+653dSKb6gO6h
Aa1l+RV00d8+ksUqGJLklp1UfZbQdbK3S/VFGmh3SGk29E6h5L2L+z5F5Wvp
3yEeaqfrRS0SakM9b9JArqYv0fLKU1Rerbqt8OJNkLosduwCzvWGuzfYll57
QOj81TeZc92gteX5sUWSBrtVTn6MvTYA+yjj9d4NuD5rN9SPXpwCjR+Lp6a1
jwGbsZDee8El6JwWDhfF55Vhaszah7gK3ldmnDLij0KFUCinbs86fMmy77qT
QAUGD95GPBuDGKlcRwzn89i94nmEETqE/5FwpDheP9nKLW31UHrk2MfmXbcl
QkFPqN7z1ggj0uY1+6brGu6XNmIxfhMsyOEjLKEvL+4Ez/ikAFE9AiJtMvbu
Dc4v5cc/2dqME5D8efsDZvj+Ge7eycesTkSOzY7PV9uHAPXNYC70EZFfF0vD
jCcvgdlJC7/nh0lICV9PsLkM/nnXQiSjnYQ8tx17BeH4/GuJb77cTUZ6TpXm
HnPUgKbKOJ6nKbiehoZ1/ve+46TIQ5DWwo2Myd325jt0C4SnbXbzyP0vz7v9
lU4tfEzBJJ3s/gz747zmg26KiJGx1MyfVBs0X0s+cSKg+RgJW9Osbbl6Hs8/
RyEobJyINeUixeW1gRAe5Xtc6AQRc2CRrj73zRcevco54z9GwFo593g9d6KB
sqdUrsY8Cxb76eDi6h0FKKKKfPr3ixErPi2dI4j3M1vrLrWb23TYBcei+kk/
S5AT03q2T2IT/ZwtUuL2mwq8r0w374isom+Fr5fK9ptDFu3ZZobiEpo2955L
E88LanOHj227TKH9KvRpLm8MgS7TsE+drwe9rlF26LcaDUQDXjCqGOWhbgYg
K2PgD6m/T4sH03rgeIfMn3e4HqzMHfSSGZuCFDQ8343SqSVbEq0gYbME8xaL
xz7g/P/SjN6JT28VZF8/cX6bexZCEEc3Uc4NWHoyWWq6iwaqCj8HMjfokOKA
t7G2H61BpeZcmfImI1JGCV74r9+k1Dk8uelYkeJXgfes8fPbw+/2Y8iVgMTM
/LUQxHlhK6dmXdmaiLi4KbnmCnqC8eluFzpTEpIe7X5ZCu+nj6yf1xckyUjE
lXBSghYLxKJF93/lUZB9QYP+dVfx9SlzBBMGuBGJjEUz3por8F6EnsdlhRuj
ezSazWKrDL2KpjfVQijY+8PGY02naRCdMbMgZEDGFHNcc1M5/cH04fVg/gQS
tn04DQvEecrOyMynNZOInaDZ33cWJIIzs5fiuQwCdjNhT8vD67g+0Jec7Mtj
wURvrLTLz58DqwFSeYMOE/bBpLatnJMGJ3kWehQM6LFMm7xa21BL+FI96U6X
soEak7wa/nueRK/fw7/q3gr69EBm54f+U2BXPaTA9GkJ1fEPPJH0hgpm11Tk
eHIXUTpqiFkPHw2el1SoKT+cRne/aY+lzZ2BruHwbs/4PtTf5tbP23do0BNU
rPkhwQtuZO42XGwkgJLtCMNzUj/s+PsxtMwLz0u8XbkTzyZhv1mT9AnHAHjU
YRJzsnYRhgePhiXo4/mAQfVS8tMViJfJdwszPwo1e1MqN0s24Nv2++hanJdT
7T49djKmR1ozOB5577eB+9Q5iRMVjMi9onyWuEk8n7ePyjFXsSDSPzJjDaYt
QYK0wnqygoDoXDDb/QGfvxaTZDX6AiLipH1IqbHhCPTW/6oXfUhCIllF5+1x
/5r5ufKjjYGMcBh03Q7guQT6Rk+DnlynIJunHtwjutOgOOeI4I4tbkSZ8aT+
nr/zWoLpGsSleArWMLwZX4r/fZfT4H2Ki4wZ0J4pW2XbQGntpwXaSxJGoznn
BdPTgK+5+deT90Qsu/BiiFS7I4R+Y2698I6ANWSKWv/F56dayfMvgcqC2aqZ
PrEyUYb8HTddKtsYMa9Gq2MfDGnQ/HkkNeECPXZz2GRce5c/RC2QCZRvG2h1
S9J8Mp43Spu+qAj3r6BXFQPYMxNrta6ILvP2fV9E3clGHe/x/PJA2rJrVX0G
/TlYi4apXoei98Oxpu39aJfunuxd+2gQ+bH354GkBFTRYo10aN0MJguEUpLn
esGDFqws/l++er3nnKf/NKR/U2pfCbACTcOmz1m5S/Az48DFV7h/NhlP/Lhu
twIxCDLY+sMHBMrW2BMcNyB4xMa8CZ/fab2R9yFi9EiFn2R9j7aV1jHpkCfH
xJmQ6obTF9bx9Tc4Bc2OJLAg/jUh2rrV/iDM8/zvrrsEpOvMVX8GnNfcViX4
s0KJyMOAnr51/iNAIbslJwaQELVrXLd88P1zii/J+qhORn65ar40MnaGkAZx
OQ0vCrI7eWG4f4wKpV6ibdE/uBGDB59D7RFbKLiQn/JhjBvrgGjJ3lfnwZVb
2ti0Cs8De7+wPcTzEssRs3dDymTM7c7XWbKOJcxd389ywYuEXdB/zvLf/7+8
39E/s+hPxILB4tE9qgF4H1IwMiKwYbUWfBLOH6ngAkMPYCcrpmBqYLrg5QGL
fE2pdfxMmJJO1PG34TQYtFrn6ROjx66qjvihRvFacjffNCwYbqAJhcL+ETi/
f50oP5fis4oeHD58bdIX348Ky5j18CV0kP316hsrGrw7RH7svzWFej07UFXO
sRM26cQEbpv1osQfDgr/Pb/9z0sbHK6kw9fbbc/qhpxBDLvEcjqvG77xj3Yr
MdIgLdt5X5n+FDwSmeL9NmMBdW3285zsS3DOZyWkGOexmOq4laK1FQgYr4+c
+yINdrGy9l4bG1D77rdEnQ4NBMq/ZvT24vzDtmOb/9oVqB087Hi8jxHp4Vf+
MnAO7wcNw8D9X1gQm8UwjyOeiNYhAvDGDBCQ8TH033vc3+Tyt23dPxIRBv7r
j80dPWGPxr7ee1Ik5Fi3MIsKG96P1JmDwjxkJKjwNWdAuTHs7DpYz5lAQTQu
W42+x+cNoVaatWVSsDazAfQ6zheP3Ldfqu8hY+ke9Qy3nqvCPQML3qUOPG+l
A6dgFO4vJwxMHg+yYP0mykfueKVrFXh07bYeYcQk9wfKXsP1fbBWOZj2gw57
U+rLLs7uAfYEqcH79Hjeivd4pKeO86kmD3/PxgpqaWBzm/nyYWBbMWWrJi2h
cD2jHEmjgVXsYY1JvinUnkmhpjf2DEx8yVo3SbmPDq0K84ylnoV3JuhXFvte
sF8pv/oDz9d6XftmjQ78935MT48vP1XgyLXCm6MhS7Dfqky1Fs8jbavSKgNK
G3DYnUm42pYGpHfnjO9y0SM8EWpWEcVHAJYvSWuRmRDqWaqNGF5v+Tbfu7Oe
ROTi+qm/zurWUH5EYJ16hoTslto1vBv399RWMB46TEb0BmJPD146Bt52p3/O
l1AQAWcb8Y94PSuau7oT57ixFt1GLocGK6CeE7DaBjLmyBa8vlbiDo/iLJCG
6yTsfblPz1V8/cFxKQdO3yZiQ413w1UUBMA8c+/s+C0C1g2a6Ykncb//+z2v
XpYJM7167BWbJQ14q34HMB+hxxxM08s6eZWA5VFH6tWLG+hDpkCGAHz9r+ZH
fXpMptG+5o5d/4wNwGPRfG3tZy96sT9bkxufN8W3K+7+MzEQOcvyhum2HsjZ
Z44Z/JuE39MpQRZR50CuvVu9fHwRXJuCQQnn1wzHcQXBTyu434QWk4ZWtNh6
ztx+2b0Bqc3cr6Jxv45kTrNMp7Ig+eJ7J7nZlEA6dk/8fCMBuer4M9Ua76eN
QIOWyjdExOuwnmtgvDUof70Yu8JORtZzdk6+lXOBUk4vwcEoCvKu2882Dfc/
2jXZU/J0/+/9jGcbm3miKNjf+wfZz93G+aKk8KVfHglL/mer7ozzngqB+EKl
hIjJMJ9/N3JdF3wvVd/4XkzAYsT4XUXxegXz333i+4oF60xzpDHEn4JY/2kl
F3t6LPlJbm0qzR3KP68fuVO9gWYz3Wlbj8M/fyLPyqtyBXVnl7nzK/AITJim
7ltpXEQnfBoXB3C90OwoL/96qB+9Oy16gd+FBikbRxMkkWD0jvbwjvp9EsBB
F2YkHNoHWZMJ006xuB8V3ivdEbECLpbu8ekvHcHbvWlY79YGaCp7SOzH5+9d
p81hHxV6hCgZtnjKVQWMXaKETVSZkEMyLr+nlGjAlC7DcfkxCwLW96Ivep4D
saRPYS8fEZDaRyqjP/H9SBP9VmyaRESsKwuSMRYLLf/vzw7Y3SEhg9GKu0Qj
aHCQRSaA+psbOcsUKpt2VgvevCl4rfKcgnV9/tE0p43PD0uk2HsZMmZ521i7
wl8RNHy2W3lsSdhDOSFyBr7+GvLegpsuRIyhLW7/wd1n4DSHUbolHSsWFvP1
76caS6hVyY3+wMqE5fx5p+qN+0f2Kn1VEYUeGzq0Epw0Kg/2Ho9/nZXYQIto
u17kHaWBoBZJTOP4KirjfvR65C53YCiLV7pqt4R+QMY3xvH1Nl5E+rjLptCD
r3Wfvv3GD0nkP8Dzoge9P9NdqOWL5/U9od49yj3wQeEBzfY43l/jkm4706fA
jt1EynBODixbxx5dkF8Cx5MlPSi+nmBulTcKwqtw7EugfvM+c9iKufBMY5YO
8fNYEK8GT2h3tQysn2VEuq/IjD2PoQGL/9aDt/MsCEtIhlBsriLIRbk+lJgn
IHZFjXQyCA2i3G9ytqmREIOw1uwEI5zvX575aCBIRl7H5Nw9PSMKQakL53Qy
KciHXSWTF/C8dW/1mO1epf/xSUmj/v8VdeXxULVt2ITJaDLNCC0SQqikSIR5
HiNLSLYKRchr6SVbtlK2LFmiQpgKWRNR6VWpzkNKQ2mx15veLKNS9sakie/x
1/f3+f3u5bnv67rv65w5c7zkyhhoTCfzSyfWH18CxzPYKnT0QdLBpjtmgvmv
kK8sssDzkRYcWIr5vVlTnjcwSUY3/yp4eHGCCSoKfz4Z5AujJgrr0jDOL0di
RWWQCAn1rCw4fPa2NRhgfNxRrz5LJCTtSGeLO4KY+bhdbw0niXrr60dN8Tza
LhLckhDKJRLOvHnmRzMGlv2Js9KlXSAgYien148DCrVq2oZfcwFbKvf42rZe
pj8/5sis9STYqtBt6pzKAU9X2J6+OisE5ff/k+ai4Ap0Npe+0eYLQ6VTwT9z
cTye6dk6ib/JMEhe4nOc3z4w491kILGHBh/tfssSCuKAD931G0OU6dDx3cSR
t2c4zE7HU6KhhQzYcUyTKY7nudF9qnI3XxJldueGHmhXBbsUxPbczqKhMKrE
BTu8/77btfDE6xoVVQSuVO+RUgSebsylYlcpaGhe/Z5/AgfI+3/3J/aS0F2i
97hGrxPIBJvYilcFRHBNrOZhjDeGzmzV4GUeEXstsGd0xAZUs9Mtzep7iKY7
HW0j2L/zicjcmW3WwPpI6Akln07mKEusa89oD4iu/XWkHuuJ73+fR7UFPGC/
v+3key8LwK0pnKcVC4BJ5vkgSZz/el0ts6NmJCis/ndUfJIdOIFmyt1uk+HJ
UOtsXX9nwB3fzPWtpsALIaMdD/C8m28qzVlZRIUjagpKaz6pA/G5Ga37vyXh
4fDRzffq6cDrqPNH74sMdNvx3dh+zN/BbgHz7Qw6mq044PiMbwfidPuuSjRR
0LlQRlUw5jtzgbt17UsyOkhRj/W5rgZOKh0L2vuZRzTTHGQ8Ng8xnQ9y7Gkz
E8TjLFaEeDLeP2xfBNcxLhEPEtxNQ3wPAHammZfmi25wBgy36GB/u+evtCh6
jIAm4eOBJuG2wNxI9OB1ewG4pawbqhvFAUFKLI+Y9SQYN6BUkHOVxzS+8uC5
sbwI1KLe5CdG4vnhpxdeE0mFsanP0vxXs8D9NXb+BYE0qMLKoNCxfR3j+EEV
PTrKl/gkGsl2Ar2kus4lgTQk8TsjRh1fZxBJemmRVDTmTd5RtJcFBDa0viZ5
EWQoOBaTFoH1xK1f1R5qJBTyMjPnUwmfyaUs8Fc4CAgd2tWyAhzfKVfRbivG
CGGRWL7s8ehG0Pto66WjEd2EbTHrngDjIapdo0NqBxfQL/qY2xY6Adnlc3An
aRJMxXNIhnietisMmjwf4wEh0fiUKdIqwNNwGT/bTYbPAmVkKm7+ZI59DZ25
3kmBsYfk7fedwfVJb23uYtDhwddMV5tvdmCXuyCvMZ0BW7vc0OL30pOz3ioY
X2EgG/UFeTM8b6p9tprdk6UjUfCj72jlFnCxROXrhU4K4kVsoxzH9hKlja7v
+URGxz3Cwv+cGmdWwLKlcFgYySWm3VmB9cAtdrH9EvIsIbfKp7FZ0QCMqauY
TayaJOwn+r774X4P2Tlyq1inG7h4db/5g/l8alXZHpHVI8CZLTOswN8C8vI5
4+eX4X7VTw6aOMcChp41lgZUEZjRbOR7A5+Pp1H8iOAvKqwP21dl5eMCDhiJ
d3UfxnqP+CrVgc+nOF8pwmMrHa6Jeq4l7m0AdFz7h0THJdGp3A2GQ0dtQQq9
X8I5joaQIN7fZdF/lHHUr1Qquq3em701fQkYXj69/II+CYme+uprZwlBg5JU
a16EgOA+M0k7j/2HrOsuqnYfId5p27vsc7IFrCrXgC6ZHmLsXMlgAMabSJ2k
+9GRBHD9i/0yawYTpEiEZPT2TYD+1JDanwF4/3+uG6/fwgP+76MyNjBlgI73
8XfPWwWA4mas1471XN1sRdvUUzK0D/0738cLgm9+tv7kRgoca5hOX7/4e+ex
QyotdVTYqubqQKfbgc6ru36mnWXAILlMZzaeV6ztg7lpyQx048997VFcz1r+
Q1JnLRX9XvLoiIqrFTjxMtUutYaCVm5bq8rB8YoNxM1JPySjbLttAfsu2wAv
ZyO/m40CImDlu+wlGI+m1ZoZuY94RMCNFFWxkk0gMkGkXUkhjngzaLgq5Kk2
ePq1fN1jpx5w6Pmr7MX7y7n8d+pOpwSgpGLUIBXj3+zWw84gLRK8N/5Lozhr
ExgKFjvyKo8Coek8dR3Ot/XyONkjnQotsr93GKrwmGtm8kR9ztLgTLXlUCXe
v9KOfEuJmJKE5donPqmsMQVhjHoLsiYdBcbc4Y/3AaA6dS7/pgsNSU6oh5di
//19AY77RJeia8aM+TflzuBF4Le2RqoI8n4m+ouF63d8n5C1tgwJFR/nxln1
KoHWcWTh6DlJ9ERpbqTg/TK+QFv8exOXiAu3qFqqIAT8XwnVT/Z2EVxqRO9F
fH2AwZM8Fc8FnHwdta2mBuDWstipbNVJ8CnTPGkz5ocnUelittKzwGeX7+Sa
WguQ0pgapDQsDJ8+VQwaisf84kWXlPlKhiO216bZGzYCFGn818JaOmyly1T1
lmwDhUpPmLwcBgRDOkXVuN5rtixv1ixiIDhs7RGO8dfql/F3hQIdmVisXbFM
RgiUFWta5XwhI+K0ouBDlDKomNg7SB8XRnpCDcqDGA/3szqR26ZJ4sV+1oZR
jD+Lskrx0BkuGO9pjHdfJwr0zNXP6y4RgUWPTfmqOP4yB27ylB0NXqPpF/bh
eAndsdfH1Onwlz3Z/kONPDBI/SkyNi2J6qoPLdzNNQIDh4rWaWZTEaNxuqOl
6DNTZXvh9v4UAeF4Y75kbvH95A1hLue9e4i75PGWGxnYvyW7Mq41HMiuXXag
xwrPy7xBhbC7POA6EPBR1m8nOJ+a5DP6jwCY/d7288t5DvDRINR06ynQR8Pg
zOL75zm9Mf0/KqmQxp8x7YtjAXOzk2KOQv9/XtXZKqd/Mp2BvGvmQzPw+Z2M
285/eZ+CpKZi67QX7xcGBJccfUpGyVXbuuS3G4H/fPYKTbfzCF8T2czp1STQ
e6m1z3RDGvG+jeZnmmcOtj6ebeSt6AFxnPXpHRgvE7Lf0WlvAVh4EcHqw/vH
Yd8zayPVSPDsv2SNJ7G/mJpxK4nkeCoMlvAArZ/VwLGlYQ/iT9Lg9M/6+7a4
/4Tmru3s8aKhHjKJNYXtDfwXZdckLYKWsUc/+OJ+py4ITlvKk9CEQ1nXafY4
c2FeNvDKNy6B/ooaX1E0wVQ0WVVaqdpNqOjAC814P/RKe5zHXTkJ7rxxbi7C
9kz36ZanLpkFWfezm3+82glyLHaS2j+R4VvJzEQ5ygwzV3hp9jEZOoyWqGFo
te8GP1gu3w9dZEDvXzJGi//Pw/+dHb3/MgM1nLVyMsTnl+n5WrFJho7MlHtX
Jz8yBilj0cY2bRR0u5+UdRbzp9c5W76gi4z81KCVVfscc+V/iQPl0zwimjPz
UDpfESg1hr+KJk8Su83o021Yfy31vCx+LLobGN61acjD/JCfWpR8yXAElOs0
UJ/cZYGET6I3kqRIkJ2wgQOi1QGM0aZAaRGoHFPnK4vzFdPQUGjwokGp0gOl
XJzvHQonSCOShs65fPhnL7a35Nrw+6Y4Kjp3oOviXM1mYO7K+xi5nYQGCgbd
UlRVgY1Mivt+LwExNGdashrXb/bxD/0/eiPERrjwfpe7EUjXNouVfdFN/Ih6
Fbm4b3Sm63xJ+jEBol84FpEwHhxm0oeEPvBAh/4WQ66rHtNBMv6j/isy/I/r
YngSbQR+NwdrO1sp8PW/z8NlMf8mRbPNNp5jQPPCQ2stcf+bDm8wefJHEg1I
rU2NvDvNrM0r512LZ6D4kpcK/tEcgFa7uF0tp6LSO4kl3S36wE96uGpPGQW5
Vk/laWJ++231j7B3DdbXh/T87+LzrJqUlGNW8oiw/KfuSZ1GQHss6qwoM5B4
vy1SqvUyHRyUdoyMv94DDiu/cFuRyAGw80GWdoYAhDY4ft6D89Oa5qUfMyTB
VI6pk9sfFvC8nX+dXUyBk5SqxzYYf57Vrdb6l3E/yw0/VGrlM19WBRxZNSsJ
//Ru8b2opgWk52zmQzfR0XIfO+oY5jObbyf+RDvQ0EbVsEJT7K9WyNGkcYkI
qr71o56B/b0pEJZbJ0FCCZblZ850GmJ95yqfYzNJlOc59Jvh+i6FViX6bC7x
4fUoT6tlC5C651RXXckFm7YqaL4bkwf8lN2WJgaToC6ClPMvxhODvC7aY0wY
Cot0uGhgvuuOHVVymyJDz8P6D9YpQ7zfRu/IkqfDwIavQxw3CWBHXn8hk82A
5STpSS7O73m0QWTRzv/rof8BGsjaPA==
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl2Xf8z9XbB/Bv9t5bQtlERmQ3KGVllBIRhbJlhIyibE1C9q7sTfaW7IZC
KkIkych2P6/f/cfncc71Gtd13vuc88nfqnPDTokSEhLu8fsnTULCI37/+i1O
kZDwQ+qEhE1JEhKGiu9NnpDwWKqEhPsIi6ZNSCiSMiGhLvxi0oSE/do69F3p
eyVOSNij/69+VlwXvjF8c/k+Ef8tzoz7UtFP6Fbp11JjRrKEhJ1yjjaOXPo9
cBNw6+VrxreS76g8+fi2i/Pjn8Tfj9/Inxv/KD6POj1hWWg6wz6FzYF9wfcU
3XS5d6gzSp28sPy0G+C5aKvT3ks7228u7kn4NPrt9CPpc8Nn+c3B1cRNxW3D
jcCtk+clNVfIcyTOE802cT7jrGmc+fDreXLiq+FzyfMPvja+C74HPrO4E/4T
/Ez8HdwDzu3H8PPwTHSz5f0YvlK/hny98FOMY6txDDeOh12b6vqvwnPCj2u7
04+nX6tGMvyf4nTwpvLO0i6X++c4d3Lfi8/EXwG+Fb9Zm5e+Bn9e/kX63+uv
UzsHX1W+nMZ6gfYZXGdcd7pv9S/qZ4J3pPuYbgbdR+K/xBlxs9R7Qp7JxrlF
zWHG/zXvizTLaH6K60FzH2wtXXZYFVgOed6EZaTrAPsINh02k/ZxuknybZZv
aFwzWB7ar+HZaCvTZqed5jcD9xh8Iv0m+iFx78U5oF8Dz0pfiT4b7VS/6bhH
4Z/Tb6R/n34N7QvGsZT2cJwLmi3i+xz/E44xN341TxZ8RXxWef7GP43vhO+G
363/j34GeHu6D+mm0N2G3+/8fxj5tedwGeimqXFG/BF+hbi6/D3FE4xrg3G9
Z1zlXMdq+q3hOeC/aN+kH0e/Ws2k+DPitPAm8s/ULpH/xzi/8mfkLQ/bjMtD
9zhfLr6F+t/pr1IzM/0j9FmM9TxdLVxHXFe69OI38B/gJ+M/EJ8Vp8dPlb8a
/3jjWq/OYONdxfM8zWKaH+Ia0eSEraTLBKsAyyxPF1g6utdho2GTYFNoq9KN
k2+dfIPkywbLQbsCnpG2PG0m2ol+k3FV4J/Rr6V/lz4rLDv9cngG+ofpM9J2
hqVVrx1sFOxz2CTaynRj+b/mf4c/u343x/+Z41vJ8xzPIp7v4/zQbxLfi38M
nw2/QP+Q/jJ50tOVo8sgd2H56jjvf9Hv0z5F14GuE88t8TfiC+I0+LHitrwj
eSfwZnRNb+Hzw0fjl2j/xKejn2gMp+Newi8XV1K3h3iMca9Rc6BjqKptBcsG
60o3lm6Fuqf108Aby7lQvu/iWsi3UZwb92i86+mWypkOXxaf3ng6wlLTtIGN
gI2Hfc5Xke5TNVarN0DdTLAstEvgaWnL0KajHec3AfcI/BP6VfT96dPCP/Mb
j6uA+xi3EtcPlxGWWa7F8DRylZYrDW0HWCpjeQ02HDYWNkp8RpzW+Mfxlef5
SK4Vcr0d94R+F8c3Br+c/5R+auehEd8CvkNxzfgy0D8M3wDfpM1FVz3efTwX
xfPFB8WL5B8iTs37EG9qYyjimhXirx3PN/9e7ZP07enb898U7xL/LU6JHyN+
lX8Y/xj+m7h8sJHx7GhP49LQfmZcH+CW6T+s7oeOZbk6fR1XFv3OuE/j/lOj
Ie98voNx3fjWi3Piq+EzxjPPnwpfCp9KzTdgKWhaw4bCPoWN5StH94Hcy9Tp
o066ODdxr8NT0pakTRnzAL8xuLLw0fRL6XvTp4B/7PcprgxuFG4J7q245rD0
cs2Hp5DrQbmS074OS24srWBDYB/BRohPiVMb/yd8pXlGyrVYrl5yVdG+4lxl
hnVynJ/QLZXnD/1U8Ab8M7Tz5DgQ948cuV2n9Hzl4OvwG+O9Sl+VN13i/587
zRMfEM9T731xcv4S/MniueYvyP8M/Cz/Hm1N+jfo2/Hv1D+vnwz3Ct/7fB/y
DRf/IU6F+9g4RtMt1X9IjRHGv0jOnvEM6XfEfYxbIt+zfF/x7Y/7jG+tODu+
Cj4t/iv+ZPji+KTqtI1vAk1L2HuwD+JbzVeKbrjcC9XpoU4qWBraL+FJaYvR
JqEd7fchriR8GP0C+u70KWGp6b+AJ6EvSp84nr34JuAejPkl/Xz6N+kX09Y3
ji9p99GmoEkFm0uXGFYEloj3T5oajud1x9MGn0TcAj8YPxI/THxSnBI/Wo5R
tEv0S8jT3bkfouY8NbupWda1qazfEp4Rfkzbgf6jeGYjN/6kOCW8nrzTtV/I
vTfuQblz4dPxl4V/jd8Q71D6yvHMxrnW368/R+33cIl4C/PeY5wF+J6GneF7
gq4d3Ws8O/T/0k8Mf5l+EP0I+qHiE+IUuFFqF497zZi/kqerY1nIW5dmLs2e
uPdoUsBm090DK5Tq/yf7r8IS0TWHvQsbDhtJWyzGKN+X8nUhTQpLTjsLnkBb
kPau7rB4znBF4YPpv6DvDE8CS0Y/E34XXoD+Dnxo3Mu4IvBB8Ln0neALaOsY
xxy5v417g2aNOKvjr+QYk+Jn8NzheQB/m+cB3lrxrqN7nK4tXWu67frn9O+B
f4pvJuc7PEPUzuAa3cDnjWsf32bt7/jk9MPUPBXvUPxicWH13hS/q+YctTqq
WYa/kn4LeAb4UW17+g/p56t9Qj8FrLbcs+XdHfepvKvFWXAV6ZLEc6O/T3+6
GrfluZ/ulvyn6B7DtcG1Shwn3npCnoH4943/ffFv4mT4ofIW4n+Hf7YxdSCf
x/NMzOdpvol7iyYxbBrdLbr8sJt078k1BFcQPhA+i789/Ibf4KiDK4AbgJuJ
ewOeAEsk11T4TXg+ua6DX4HdhTVVcwBsEP97tA/A+tPN4H+dLr3+G47tA2P/
iufpmG/y7Ip7iWeVODP+kbh28a7Q36s/Je4t5/QGf17aa3IVch3ul/cp+B98
32ofpX+NviXvDfE28VnxnZg3iF9Uqz//u2ql57+Ovw/+XsxntL/ik9IPNvYR
uEWxruTthuun9nT12qldUfsyLB3sdbrRsY5V83f95PBa8d2Qa2fc82qtFGfC
VaBLoJss53Xe+/D/gVrAbsNe4OkHe4dnUKxJYW/TTVOvLd1t+F34JPg1eB7a
q/CB8Hfh+eB94VPp28Cv+A3AvYPLi+uDm4J7DX4r1pXwifD/4PfKdRn+cswv
YU2M5W1Yf7rBxn9cnMT4B8Y6DN+bZ3KsL+ObrN/O8Y3Cf8H/m36ymLPGO5Jv
R9xz8qSlLwNfAV8f71i68jy35bwgniveI/483g3iq/Lm5r2kRkHXKz//k/CT
/Lu11elfpW+u5vVYp4r/FN+MuaD4ebX78vdT+xouD2wQ7y/wxHQD1B0OX6if
h+ct9SbFWkm9NPptcSNxc+V/km8a33b5bsi3XJwB/zD+ljwT+K/w5ML/y98s
7kHYczx9YG/z9I81ZazV6SbGHJvueszd4OPhl+E5aS/C+8L7xXwj1nTwz2Ou
Enszfn1wb8f3JubuuAnxzYLPUbOmcU1Vc1s8J3Q36MbRXaLLAbtAd4KmmrG3
NvaX4tzhG/P0xveOewl/TJwI35d/GO0C/ZzxzZRnfLz/5HlE2zzmsbAj2jZ0
I2JvQs7Ertev4qTwGnHuYn9Czq1xz6uRE5+GvzR8GX6dNj19Of7rav4tniP+
Nuaw6r4b+1HqZOf/W+18vDXj3c1bla4VXVN1t+if0b/G00i9t+jfimeA7qj4
HlyfWBPGu12+cfEsyzeL9wmayTRb4rmKe4ZuLN1Fumyw83Qv0v0Ha0jXC9aL
rnesGeM9QfdZnJN49uD/wcfA/4Fnpf0L3hP+FjwbvCt8LH0z+GX4Vfin8Avw
LPTn4D3gveBZ4V3gY+hfgs80jseNd5JxbI5nhG6pOJ3jL+sYr8S+Gs/fPJnx
Z3l+w1fBv4J/gX+z/mn9q3QN5OlJ1z3GDb/XuR1IfwSeQNNTvqHw+fpZYuz4
znJ/ajxNSUq7nhXiWOCp4D9rX6MfTj8j5hj44+Ik8MfiHtVOlHtTPC9q5sCn
5n8o9h/wa7Vp6cvwX1Z7tv7umPuqfV7+THx/qvsrbWVcS1wTda7gn5W3B/5N
eQfgfxbfFfeINSG+E/8nar3IP53nUZrPaTbGs8dzie4jur/oMsLO0D1PdxlW
n647rBtdd7pMsI50H8v3Qjyf8H/hH8LPwTPQnoZ3jb2q2E+Bd4B/RN8EfgF+
MdZo8LPw9PSn4M+pdwlWT703YV3ousU6Ctae7kP+5+mm0VU3/gl0G+LZoFss
TuOclHZO/om1As+fPOnwf/Acx1fCt8A35t+kf0r/31j3Ou915epG21mudK7L
VXxueP9Y72p/wt/Bd5X7j5hH4efxp497VPyGWh8Y33NqPcRfPu5ZeEr4T7Fu
pR8W+z9q/6KfGFZN7ina8XKvj2dN7VR8pWCLcKnpHuK5oOYs/W9i3qveGTnT
0p9U6xe6iriXcY1izY2vI19XfKd4n+IPi2/H+ZQnHf51/tHqNOafwlOVZhzN
unheY4+ObiTdabo0sBN0HWM/CJ4W3g4+ir8R/He/DrjYSE+Da4sbiWsIPxd7
YzGvgJ+Cp5brN3jDWDPCaqvZBdY+3u3G8KP4lrhjrJvwbXhGyNUg1sf6rR3n
UMc5mb8K/Wf0a+M5518oToUvhf+Lf6b+Lv3hMVeM+RJ/Ktpf5Srg+uSVtwb8
GN83sfdP35y+gdzXxBvFf8S5j/0D8TNqdeZ/I77p/FfwueB9Y/9A+wP+Jr6D
2u/jvuJNxds53glqD1fv2dijjndHrI9hreiG0E1S85h+Injl2NuS6+t41tVa
IE6JK0l3Lr5Lcp7kTYk/Lt+zvH/DnubpBHudpz1dStirdMPUq093Bn423mfw
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
bgXGqZHHic+s/388BbbE
            "]]}]}, {}, {}}, {{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.002]], 
         LineBox[CompressedData["
1:eJwl23fgTfX/B/CPTbJ39t5kZmZkFEqEECqUEZHMSvbesiUjm6zsQplJ9qpQ
UamIkjS0fo/X9/fH7bxfz/V633Pu5573eV/l79ir+YuJEhISKqdJSIhjnVQJ
CbmSJyR8mCQhoWDihIT8wNlwwwRQQlKvZF4kCSm8UnrV5ckN2EtQiLAAz0P3
JCTkIdjHUBj+cGp5xB8xV7k3ISFTePScw3/EeDn/QHhj+h20M2h/UL8jL7P6
J1mb1TP4Czn+h1+jzyx9XsJlhd+mOwYfqF8f40eNf4GLT3jIf/LosQ9XWOaX
fDv5nsYXlFNPnVe9X/8iNHN5PuFZwdMEto5nLR1ZQj14Xvh+uiLwQvB5cC0T
6uPy4Q7giuIK4+bDj8JXwh+VtR7+DtzbSGgAzw8/SF8MXgReX5N85nKAtij8
TbpjdKvoHoNtoMui2c80M81/XVwjnj7qbOpfcce990G8Lxs/Znwb/piGxeU4
7QkNHQvIex52KHrQDaD7KjTyv5L3nrzl6md40zlew6dgLqpfA3x+/Dj4QXM6
z78p+qiLyXtEXUi9T32Yv6pj5rgG/Av0P268Wv+mvDtpZ9Ju1Der8S25s3jW
6zNHn5fV2dWvyO2Lb0r7qzqtnIflFJTzEa4EfzGehjwFeA7JLg5/i+4E3Rq6
x2Gb6DbQpYM/Ai8EP0xXEl4cvhB+Er4W3oz+XfhGeHp4I3hh+Mf0peAl4A/r
V1C/j2hLwBfRnaJ7h645bDPdJrq5dH3pcpj7q3QZ6BrTFaE7oi5Nd5nmfZpn
aUryPKIupD4spyRNI++/sPf/MX4x/2n+dfxP4N/DzcJtkZPN+Be+2XSF44NG
9258TuX1Cxx2H+4O3Qme12T3M37c+CTuDq6pYwm+Eq5ZRhFNjIvq1QX+Cf0C
+oH0l9Vl9Lwie5fsFeqO/Okdr+NT8pfSuxG+MH48/GPz/ZT/XXwpWY2Nixgf
4Vui1xm91uvVgm6r7Oz427xz8Jvjb0pWf3VO9WD+TDyP8hTjOaouy1Oa7m34
WfgGeEtZ2+Bb4Jnhj8GLw4/R3w8vA18KPwffCG9Fvx2+FZ4F3jTOBfw4fTl4
WXhj8yhiHkdoS8OX0Z2n20T3ZHyX0W2je5NuAF0u832dLivd43Ql6U6oy9N9
TbObphPN/TxN1EXVn8j5zPvf7PyUoW1iXNT4E7pqzmWW+P6U92lcY3mDYK15
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
YfTQrwj/H3rn5b8bzwnwhbEvTr8qnn14qxhnMt4ez8Z6HaZdqtcj6jX4Kfju
MRf+brLelvu6cUE5o8x9BM8QnrY8/8Ge5fmTLh/sL7pFsMRJEv73D7+6Oyzl
HwIvBB8NG8l/N/aKvZbhhuIK48bgRuH+gueX9Td8MTyJrETxOwJsmZ6NzHMt
rAfdcv5hdEXoxtIkN/fLNKNpRssayvNUioT//cOzjjzP4+t4b1djbxVcAP8P
/xL+47jVuKR0VY0zxx5DrJnjNwm65XIaq1PGPhDuHbqpdC8YX4Sll/O0YzVz
Ku869JS/wnh47IXCi+qxkX5i9FePk5tCfUXuBvUY2Xkd7+LT848x/2H6tsPP
gCfCX6c/GM+iencxrmv8Xfx+gS+o1z96FuT5V8+39UtGV40uSzwnx1ovfh/B
r5DZRL0O/yLPSt4RPMV4xtOM1ftfeCHa/+BL4clpk+J6wVfRj4QXh0+AjaP/
D174noT//eO+ZfAU9MliDQZaTT+KvgR8Imw8/XDa9rSJzaNzfF5gRWCJYMvp
UsKS0x6FrYQ9Srce9hLpGnmj5ZWkm0ST0nv8mmZs/N4jZwRPB3US9Y+4Q/E8
ytvV+CHj7+GPOGeF5CSiL0qfmH4UbIXME3Rr6FLxVDfOarwH9178nuCYlu8+
1yhF/E7Cu4p3STzT4lPFd3B8juK3dP5p/D3Ul+AZzPkZx+r8FfB9vJe1xmNi
vxteSu9N9JPoJ8tOZfyN7HFyJ5rnSL2eVieNZ1PZ3fD1aH+Izym+GD4JfqWc
e/Ap47cW2GpYU5qNsJf1fEfPsXqWpptCM4k3iVdx2qS0q+CpaVPh+tKvox9H
XwY+FTaZNqlXCfpk9Kvh99LfE2st+vX04+nLwqfBptCOon2GNpl5dInPBqwk
LHnsv9OlgdXwfrLFOpUmNd8J/Br84+pN+On4nviMsaetzwZ9Jhjfz/8ubjJu
Ot89xt/yjY/fMvQZLedZdXL1DdxHdF3ldTeub3zUub+Ga+RYWGZR1yY5Xym+
FPF9Al+rx0n6tfQ/x2eAv6Y6u/oD9S7+ivFcxJ+T/17zOMm/Nn6niudf/D3x
fR1rV943eF80zmT+z8JrxNrDe9roOBFWTr83ZKSmuypjAv80cxojs6M6hbqb
nBSw0rCU8VzOkw6Whm+grE2yJskqD58Bm06bMtZeuHdxk3EVcDNxb8BTeZWR
lSqe4eDpZaWNNRX9Zvop9BXhs2AzaMfSdqJNaS7d4/rDysLuiXsbXYbY0zb/
HLG2oEnHdwr/Dr65ejN+Br4XPnPsTeuzRZ+pxpX4N+Om4Gbz3Wv8Hd9G52oi
b75YC+Fm6jlOZmfczHhujedD2sO4v9Qv6PGCuoH6mPo6vrFjEX2KuU6p+e/n
T80/Br5B31P079DfUmfkr6W+T/2heg9/pfi+509vXqd51/E+EZ9Z+NVYB/LM
5OltnCX2zL2vrfTTjCvLn8OXBv99/LbEN8scxst5Tn2Pugf/vbBysHvjPfNk
gmXgGyxrm6zpsh6Az4XNpk0T6wbcdtwbuCq4ebg58LRe5WWlkbUJnllWxlhX
0e+gn0FfFT4fNpd2Au3ztKnNpSdtOlgFWFrYu3RZYLXNP2d89mky8Z3Br8e3
UN/rPHyH20o3i+4l46x6dITXjHu+vjsdZ8L6xT1T5ha6qXE/U78pL636h5iv
erLM/LEfj8/gms0zn4n6dcHPimeXeGag/xj/t/rFWB+oG6qPx94jvkncg+Oa
8VbkTce7Wd/TdOtifvH7hXGuuM70mc3hLN0GupbqbfjZ+D74bLFH5T28J2+W
cXU5C+jny57E05UnDU+vuGawSrD0sC102WBZaIfzv88/m78G/C3Ym7QZvSrT
Z6DfCs9OnzXWXfS76OfQ14QvhC2gnUzbjTatfr1pM8EegGWEbaPLActGew62
EdaKbnvsf8vbLW+uvAfpFtGk8/6uxX5t7KnJmcLTXZ1O/RJPT/zDsf8a5wdf
BZ8Jv53/DG497j66usa5jffSVY77Xuw1yD9Pv4l+KexJXJrYx439Zdd0B98c
vpdjbwuePZ6VYo+KtyJ+lPnuMZ4X3/3wWnpupZ8W93P1Yvnp1dfjM6qeKr9A
PN/gF5rrVL1fwKWH/0x3BN4n1j/Gj8SzMTwLXVW6zHQ75OeM32LwefD7Ym9b
j0/x7+Jbq3fGfrJ5fWBe882rNs8SmkVysnpVo81CuxOei/Y+3Bj6D+nfpK8D
fxu2mDabV3X6rPTvwXPT54y1GP1e+gX0deFLYUtop9H2oM0Qe0O02WE1YNlg
79PlgeWi/Qy2GdaG7r3Y45O3T95b8h6iW0aTwXv8MfblaN6WM52npzqj+hbu
k9iz4e1l3CieG+Nc0NWky063S85Z3AZcXrp6xnnj+jv/+2kfiO9RPXO5jrn1
+5xvS6wT4W3xaR1/iD35+Lek/HP5+8ZeIDxHPF/G9eavhB9v/vuNF8IHxP6E
3tvop9Mvl53R+EY8K8stGM9P8KXm+oaeL8Izwfvp0ZuucdzLYx8b/yA+B363
vHz4+vh8+APxfCb3An4r/in1rtgDMY8D5rHIPOrzrKBZJidnfDfhDuIW4xrg
VuKWw3N51ZJzn5w98Pxy8sb6i/4Q/RL6hvBVsBW0M2h70WbWsz9tblhtWE7Y
B3QF4rc388xvngfjnsh3Eb8N3069Gz8P3y/+LmMvVZ+P9Hnb+GH+7bg34jmW
L5PxzXjmjD0LfWbK6a3Oov4Fd5RuQKy/jZsYn3Bub+EedSwms7hrk4evDl+u
WIvDP9TjHP1G+l/iGYW/obqA+lB8p+t7iX47fXv1nnj+NMfD8paa4yP8a2hW
yc0bf8OxRxv7rrFXGvuOsdfn9TH9MvpGsSdNv5o2n1dd2bll74UXkl0A9wVs
B6yDfh/A5ptPf/PJyf+cOdZO9f//T9Msuf8HPOvSaQ==
          "]]}}}], {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{{
         Symbol[], {}}, {-5, 
         Directive[
          GrayLevel[0], 
          Thickness[Large]]}, {5, 
         Directive[
          GrayLevel[0], 
          Thickness[Large]]}}, {}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["x", TraditionalForm], 
       FormBox["\"\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {
      FontFamily -> "Times", FontSize -> 16, FontColor -> GrayLevel[0]}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{{
         Symbol[], {}}, {-5, 
         Directive[
          GrayLevel[0], 
          Thickness[Large]]}, {5, 
         Directive[
          GrayLevel[0], 
          Thickness[Large]]}}, {}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, 
     PlotRange -> {{-5.555555555555555, 5.555555555555555}, {0., 
      0.1999919947244563}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"n=7\"", "\"n=14\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", FontSize -> 16, 
                    FontColor -> GrayLevel[0], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", FontSize -> 16, 
                    FontColor -> GrayLevel[0], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                 RowBox[{"FontColor", "\[Rule]", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7407970399582644`*^9, 3.74079706589669*^9}, 
   3.740807574936907*^9, 3.740807887569558*^9, {3.7408080119603653`*^9, 
   3.740808057404421*^9}, 3.7408081321918793`*^9, 3.740808541144762*^9, 
   3.74080879870122*^9, 3.7408090082641*^9, 3.740869633023875*^9, 
   3.740869822388317*^9, 3.7408698663576403`*^9, {3.740869896558011*^9, 
   3.740869921977319*^9}, {3.7408700590677423`*^9, 3.740870066676893*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["1"], "Input",
 CellChangeTimes->{3.740796171990019*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.740796746344377*^9, 3.740796995587905*^9, 3.740807575081478*^9, 
   3.7408078878977547`*^9, 3.7408080123684883`*^9, {3.740808043109529*^9, 
   3.7408080624333*^9}, 3.740808133359639*^9, 3.740808546045458*^9, 
   3.74080880240809*^9, 3.740809012114649*^9, 3.740869633741053*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{651, 716},
WindowMargins->{{650, 0}, {0, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (August 2, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 91, 1, 93, "Title"],
Cell[CellGroupData[{
Cell[696, 27, 224, 3, 156, "Chapter"],
Cell[CellGroupData[{
Cell[945, 34, 101, 1, 63, "Subchapter"],
Cell[CellGroupData[{
Cell[1071, 39, 102, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[1198, 44, 2691, 71, 336, "Input"],
Cell[3892, 117, 467, 9, 32, "Output"],
Cell[4362, 128, 469, 9, 32, "Output"],
Cell[4834, 139, 850, 19, 35, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5733, 164, 119, 1, 65, "Section"],
Cell[5855, 167, 2714, 76, 374, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8606, 248, 109, 4, 101, "Section"],
Cell[8718, 254, 2810, 77, 208, "Input"],
Cell[CellGroupData[{
Cell[11553, 335, 704, 21, 64, "Input"],
Cell[12260, 358, 439, 8, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12748, 372, 110, 1, 65, "Section"],
Cell[12861, 375, 4279, 107, 299, "Input"],
Cell[CellGroupData[{
Cell[17165, 486, 99, 1, 44, "Subsection"],
Cell[17267, 489, 3485, 91, 237, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20789, 585, 97, 1, 44, "Subsection"],
Cell[20889, 588, 3636, 96, 237, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24562, 689, 92, 1, 44, "Subsection"],
Cell[24657, 692, 7670, 200, 400, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32388, 899, 102, 1, 63, "Subchapter"],
Cell[CellGroupData[{
Cell[32515, 904, 117, 1, 65, "Section"],
Cell[32635, 907, 4647, 142, 387, "Input"],
Cell[CellGroupData[{
Cell[37307, 1053, 1049, 32, 52, "Input"],
Cell[38359, 1087, 1782, 52, 94, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40190, 1145, 139, 2, 65, "Section"],
Cell[40332, 1149, 776, 21, 59, "Input"],
Cell[CellGroupData[{
Cell[41133, 1174, 346, 9, 56, "Input"],
Cell[41482, 1185, 378, 8, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41897, 1198, 1142, 33, 132, "Input"],
Cell[43042, 1233, 14180, 304, 65, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57271, 1543, 151, 2, 65, "Section"],
Cell[CellGroupData[{
Cell[57447, 1549, 1605, 34, 157, "Input"],
Cell[59055, 1585, 632, 9, 30, "Output"],
Cell[59690, 1596, 632, 9, 30, "Output"],
Cell[60325, 1607, 4039, 101, 172, "Output"],
Cell[64367, 1710, 997, 16, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65401, 1731, 267, 7, 32, "Input"],
Cell[65671, 1740, 1864, 34, 109, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67572, 1779, 967, 25, 75, "Input"],
Cell[68542, 1806, 119, 2, 30, "Output"],
Cell[68664, 1810, 2012, 48, 120, "Output"]
}, Open  ]],
Cell[70691, 1861, 69, 1, 30, "Input"],
Cell[70763, 1864, 141, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[70929, 1870, 387, 9, 35, "Input"],
Cell[71319, 1881, 450, 13, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71806, 1899, 407, 12, 36, "Input"],
Cell[72216, 1913, 453, 13, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72706, 1931, 449, 10, 55, "Input"],
Cell[73158, 1943, 479, 14, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73674, 1962, 581, 16, 42, "Input"],
Cell[74258, 1980, 818, 22, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75113, 2007, 242, 6, 35, "Input"],
Cell[75358, 2015, 251, 6, 32, "Output"]
}, Open  ]],
Cell[75624, 2024, 1928, 40, 124, "Input"],
Cell[CellGroupData[{
Cell[77577, 2068, 1415, 28, 56, "Input"],
Cell[78995, 2098, 10592, 186, 447, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[89636, 2290, 108, 1, 65, "Section"],
Cell[89747, 2293, 498, 10, 72, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90282, 2308, 147, 2, 65, "Section"],
Cell[90432, 2312, 241, 6, 32, "Input"],
Cell[90676, 2320, 7634, 208, 954, "Input"],
Cell[98313, 2530, 604, 16, 102, "Input"],
Cell[98920, 2548, 285, 9, 32, "Input"],
Cell[99208, 2559, 2241, 63, 307, "Input"],
Cell[101452, 2624, 690, 22, 148, "Input"],
Cell[102145, 2648, 407, 13, 66, "Input"],
Cell[CellGroupData[{
Cell[102577, 2665, 122, 2, 30, "Input"],
Cell[102702, 2669, 72, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102811, 2675, 4811, 135, 518, "Input"],
Cell[107625, 2812, 524, 11, 23, "Message"],
Cell[108152, 2825, 4106, 106, 55, "Output"],
Cell[112261, 2933, 1889, 37, 299, "Output"],
Cell[114153, 2972, 102213, 1730, 266, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216403, 4707, 69, 1, 30, "Input"],
Cell[216475, 4710, 330, 5, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

